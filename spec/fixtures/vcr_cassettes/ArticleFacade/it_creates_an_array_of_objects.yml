---
http_interactions:
- request:
    method: get
    uri: https://data.cdc.gov/resource/biid-68vb.json?$where=title%20like%20%27%25anthrax%25%27
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Mon, 09 Jan 2023 17:10:05 GMT
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Etag:
      - '"YnJhdm8uNTAwNl8zXzQwOG8zemx5UDJIQTJzczlrdkd1QUY3by1mc2lZTQ---gzijbu0Ko6OHsxnffGaefXVmrgXUXn--gzip--gzip"'
      X-Soda2-Fields:
      - '["record_number","reference_type","author","year","title","secondary_author","secondary_title","publisher","volume","number_of_volumes","number","pages","section","tertiary_author","tertiary_title","edition","date","type_of_work","subsidiary_author","short_title","alternate_title","isbn_issn","original_publication","reprint_edition","reviewed_item","custom_1","custom_2","custom_3","custom_4","custom_5","custom_6","custom_7","custom_8","accession_number","call_number","label","keywords","abstract","notes","research_notes","url","author_address","figure","caption","access_date","translated_author","translated_title","name_of_database","database_provider","language","publisher_location","doi"]'
      X-Soda2-Types:
      - '["number","text","text","number","text","text","text","text","number","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","number","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text"]'
      X-Soda2-Data-Out-Of-Date:
      - 'false'
      X-Soda2-Truth-Last-Modified:
      - Wed, 21 Dec 2022 19:51:38 GMT
      X-Soda2-Secondary-Last-Modified:
      - Wed, 21 Dec 2022 19:51:38 GMT
      Last-Modified:
      - Wed, 21 Dec 2022 19:51:38 GMT
      Vary:
      - Accept-Encoding
      Age:
      - '4'
      X-Socrata-Region:
      - aws-us-east-1-fedramp-prod
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      X-Socrata-Requestid:
      - 325d5ffa8c74a4e9c06260eff61b1158
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        [{"record_number":"1076","reference_type":"Generic","author":"de Oliveira, F. F. M. M., S.;Gonti, S.;Brey, R. N.;Li, H.;Schiffer, J.;Casadevall, A.;Bann, J. G.","year":"2020","title":"Binding of the von Willebrand factor a domain of capillary morphogenesis protein 2 to anthrax protective antigen vaccine reduces immunogenicity in mice","secondary_title":"mSphere","volume":"5","number":"1","date":"15-01","short_title":"Binding of the von Willebrand factor a domain of capillary morphogenesis protein 2 to anthrax protective antigen vaccine reduces immunogenicity in mice","isbn_issn":"2379-5042","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"12:03","accession_number":"31941807","keywords":"anthrax:antigen processing:immunization:protein stability","abstract":"Protective antigen (PA) is a component of anthrax toxin that can elicit toxin-neutralizing antibody responses. PA is also the major antigen in the current vaccine to prevent anthrax, but stability problems with recombinant proteins have complicated the development of new vaccines containing recombinant PA. The relationship between antigen physical stability and immunogenicity is poorly understood, but there are theoretical reasons to think that this parameter can affect immune responses. We investigated the immunogenicity of anthrax PA, in the presence and absence of the soluble von Willebrand factor A domain of the human form of receptor capillary morphogenesis protein 2 (sCMG2), to elicit antibodies to PA in BALB/c mice. Prior studies showed that sCMG2 stabilizes the 83-kDa PA structure to pH, chemical denaturants, temperature, and proteolysis and slows the hydrogen-deuterium exchange rate of histidine residues far from the binding interface. In contrast to a vaccine containing PA without adjuvant, we found that mice immunized with PA in stable complex with sCMG2 showed markedly reduced antibody responses to PA, including toxin-neutralizing antibodies and antibodies to domain 4, which correlated with fewer toxin-neutralizing antibodies. In contrast, mice immunized with PA in concert with a nonbinding mutant of sCMG2 (D50A) showed anti-PA antibody responses similar to those observed with PA alone. Our results suggest that addition of sCMG2 to a PA vaccine formulation is likely to result in a significantly diminished immune response, but we discuss the multitude of factors that could contribute to reduced immunogenicity.IMPORTANCE The anthrax toxin PA is the major immunogen in the current anthrax vaccine (anthrax vaccine adsorbed). Improving the anthrax vaccine for avoidance of a cold chain necessitates improvements in the thermodynamic stability of PA. We address how stabilizing PA using sCMG2 affects PA immunogenicity in BALB/c mice. Although the stability of PA is increased by binding to sCMG2, PA immunogenicity is decreased. This study emphasizes that, while binding of a ligand retains or improves conformational stability without affecting the native sequence, epitope recognition or processing may be affected, abrogating an effective immune response.","notes":"2379-5042:de Oliveira, Fabiana Freire Mendes:Mamillapalli, Sireesha:Gonti, Srinivas:Brey, Robert N:Li, Han:Schiffer, Jarad:Casadevall, Arturo:ORCID: https://orcid.org/0000-0002-9402-9167:Bann, James G:Journal Article:United States:mSphere. 2020 Jan 15;5(1). pii: 5/1/e00556-19. doi: 10.1128/mSphere.00556-19.","url":"https://www.ncbi.nlm.nih.gov/pubmed/31941807","author_address":"Department of Molecular Microbiology and Immunology, Bloomberg School of Public Health, Johns Hopkins University, Baltimore, Maryland, USA.:Department of Chemistry, Wichita State University, Wichita, Kansas, USA.:Kinesis Vaccines LLC, Grayslake, Illinois, USA.:Division of Bacterial Disease, National Center for Immunization and Respiratory Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.:Department of Chemistry, Wichita State University, Wichita, Kansas, USA jim.bann@wichita.edu.","database_provider":"NLM","language":"eng","doi":"10.1128/mSphere.00556-19"}
,{"record_number":"1380","reference_type":"Generic","author":"Hupert, N. W., D.,  Cuomo, J.,  Hollingsworth, E.,  Neukermans, K.,  Xiong, W.,","year":"2009","title":"Predicting hospital surge after a large-scale anthrax attack: a model-based analysis of CDC's cities readiness initiative prophylaxis recommendations","secondary_title":"Med Decis Making","volume":"29","number":"4","pages":"424-437","edition":"7/21/2009","date":"Jul-Aug","short_title":"Predicting hospital surge after a large-scale anthrax attack: a model-based analysis of CDC's cities readiness initiative prophylaxis recommendations","isbn_issn":"0272-989X (Print)","custom_1":"Public Health Articles Noted in the Media","custom_2":"Disaster Control and Emergency Services","custom_3":"United Press International (August 3, 2009): http://www.upi.com/Health_News/2009/08/03/Anthrax-attack-requires-quick-%20%20response/UPI-86691249272484/","custom_8":"1:01","accession_number":"19617582","abstract":"BACKGROUND: A CRI-compliant prophylaxis campaign starting 2 days after exposure would protect from 86% to 87% of exposed individuals from illness (assuming, in the base case, 90% antibiotic effectiveness and a 95% attack rate). Each additional day needed to complete the campaign would result in, on average, 2.4% to 2.9% more hospitalizations in the exposed population; each additional day's delay to initiating prophylaxis beyond 2 days would result in 5.2% to 6.5% additional hospitalizations. These population protection estimates vary roughly proportionally to antibiotic effectiveness but are relatively insensitive to variations in anthrax incubation period. CONCLUSION: Delays in detecting and initiating response to large-scale, covert aerosol anthrax releases in a major city would render even highly effective CRI-compliant mass prophylaxis campaigns unable to prevent unsustainable levels of surge hospitalizations. Although outcomes may improve with more rapid epidemiological identification of affected subpopulations and increased collaboration across regional public health and hospital systems, these findings support an increased focus on prevention of this public health threat.","notes":"Hupert, Nathaniel: Wattson, Daniel: Cuomo, Jason: Hollingsworth, Eric: Neukermans, Kristof: Xiong, Wei: 263-MD-417180/MD/NCMHD NIH HHS/United States: 263-MD-418239/MD/NCMHD NIH HHS/United States: Research Support, N.I.H., Extramural: Research Support, Non-U.S. Gov't: United States: Medical decision making : an international journal of the Society for Medical Decision Making: Med Decis Making. 2009 Jul-Aug;29(4):424-37. Epub 2009 Jul 17.","url":"http://mdm.sagepub.com/cgi/reprint/29/4/424","author_address":"Department of Medicine, Weill Medical College of Cornell University, New York, USA. nah2005@med.cornell.edu","database_provider":"Nlm","language":"eng","doi":"10.1177/0272989X09341389"}
,{"record_number":"1579","reference_type":"Generic","author":"Lehman, M. W. C., A. S., Malama, C., Kapina-Kany'anga, M., Malenga, P., Munsaka, F., Muwowo, S., Shadomy, S., Marx, M. A.,","year":"2017","title":"Role of food insecurity in outbreak of anthrax infections among humans and hippopotamuses living in a game reserve area, Rural Zambia","secondary_title":"Emerg Infect Dis","volume":"23","number":"9","pages":"1471-1477","edition":"8/19/2017","date":"Sep","short_title":"Role of food insecurity in outbreak of anthrax infections among humans and hippopotamuses living in a game reserve area, Rural Zambia","alternate_title":"Emerging infectious diseases","isbn_issn":"1080-6040","custom_1":"CDC Authored Publications","custom_2":"Zoonotic and Vectorborne Diseases","custom_8":"9:43","accession_number":"28820129","keywords":"Bacillus anthracis:Chama:Zambia:anthrax:bacteria:food insecurity:food safety:hippopotamus:one health:zoonoses","abstract":"In September 2011, a total of 511 human cases of anthrax (Bacillus anthracis) infection and 5 deaths were reported in a game management area in the district of Chama, Zambia, near where 85 hippopotamuses (Hippopotamus amphibious) had recently died of suspected anthrax. The human infections generally responded to antibiotics. To clarify transmission, we conducted a cross-sectional, interviewer-administered household survey in villages where human anthrax cases and hippopotamuses deaths were reported. Among 284 respondents, 84% ate hippopotamus meat before the outbreak. Eating, carrying, and preparing meat were associated with anthrax infection. Despite the risk, 23% of respondents reported they would eat meat from hippopotamuses found dead again because of food shortage (73%), lack of meat (12%), hunger (7%), and protein shortage (5%). Chronic food insecurity can lead to consumption of unsafe foods, leaving communities susceptible to zoonotic infection. Interagency cooperation is necessary to prevent outbreaks by addressing the root cause of exposure, such as food insecurity.","notes":"1080-6059:Lehman, Mark W:Craig, Allen S:Malama, Constantine:Kapina-Kany'anga, Muzala:Malenga, Philip:Munsaka, Fanny:Muwowo, Sergio:Shadomy, Sean:Marx, Melissa A:Journal Article:United States:Emerg Infect Dis. 2017 Sep;23(9):1471-1477. doi: 10.3201/eid2309.161597.","url":"http://www.ncbi.nlm.nih.gov/pubmed/28820129","database_provider":"NLM","language":"eng","doi":"10.3201/eid2309.161597"}
,{"record_number":"1623","reference_type":"Generic","author":"Kracalik, I. T. K., E., Ayamdooh, E. N., Allegye-Cudjoe, E., Polkuu, P. N., Frimpong, J. A., Nyarko, K. M., Bower, W. A., Traxler, R., Blackburn, J. K.,","year":"2017","title":"Modeling the environmental suitability of anthrax in Ghana and estimating populations at risk: Implications for vaccination and control","secondary_title":"PLoS Negl Trop Dis","volume":"11","number":"10","pages":"e0005885","edition":"10/14/2017","date":"13-10","short_title":"Modeling the environmental suitability of anthrax in Ghana and estimating populations at risk: Implications for vaccination and control","alternate_title":"PLoS neglected tropical diseases","isbn_issn":"1935-2727","custom_1":"CDC Authored Publications","custom_2":"Zoonotic and Vectorborne Diseases","custom_8":"9:43","accession_number":"29028799","abstract":"Anthrax is hyper-endemic in West Africa. Despite the effectiveness of livestock vaccines in controlling anthrax, underreporting, logistics, and limited resources makes implementing vaccination campaigns difficult. To better understand the geographic limits of anthrax, elucidate environmental factors related to its occurrence, and identify human and livestock populations at risk, we developed predictive models of the environmental suitability of anthrax in Ghana. We obtained data on the location and date of livestock anthrax from veterinary and outbreak response records in Ghana during 2005-2016, as well as livestock vaccination registers and population estimates of characteristically high-risk groups. To predict the environmental suitability of anthrax, we used an ensemble of random forest (RF) models built using a combination of climatic and environmental factors. From 2005 through the first six months of 2016, there were 67 anthrax outbreaks (851 cases) in livestock; outbreaks showed a seasonal peak during February through April and primarily involved cattle. There was a median of 19,709 vaccine doses [range: 0-175 thousand] administered annually. Results from the RF model suggest a marked ecological divide separating the broad areas of environmental suitability in northern Ghana from the southern part of the country. Increasing alkaline soil pH was associated with a higher probability of anthrax occurrence. We estimated 2.2 (95% CI: 2.0, 2.5) million livestock and 805 (95% CI: 519, 890) thousand low income rural livestock keepers were located in anthrax risk areas. Based on our estimates, the current anthrax vaccination efforts in Ghana cover a fraction of the livestock potentially at risk, thus control efforts should be focused on improving vaccine coverage among high risk groups.","notes":"1935-2735:Kracalik, Ian T:Kenu, Ernest:Ayamdooh, Evans Nsoh:Allegye-Cudjoe, Emmanuel:Polkuu, Paul Nokuma:Frimpong, Joseph Asamoah:Nyarko, Kofi Mensah:Bower, William A:Traxler, Rita:Blackburn, Jason K:ORCID: http://orcid.org/0000-0003-0928-4831:Journal Article:United States:PLoS Negl Trop Dis. 2017 Oct 13;11(10):e0005885. doi: 10.1371/journal.pntd.0005885.","url":"http://www.ncbi.nlm.nih.gov/pubmed/29028799","author_address":"Spatial Epidemiology & Ecology Research Laboratory, Department of Geography, University of Florida, Gainesville, FL, United States of America.:Emerging Pathogens Institute, University of Florida, Gainesville, FL, United States of America.:Ghana Field Epidemiology and Laboratory Training Program, University of Ghana, Legon, Ghana.:Ministry of Food and Agriculture/ Veterinary Services Directorate, Tamale, Ghana.:Ministry of Food and Agriculture/ Veterinary Services Directorate, Accra, Ghana.:Noguchi Memorial Institute for Medical Research, University of Ghana, Legon, Ghana.:Bacterial Special Pathogens Branch, Division of High-Consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, GA, United States of America.","database_provider":"NLM","language":"eng","doi":"10.1371/journal.pntd.0005885"}
,{"record_number":"1942","reference_type":"Generic","author":"Boyer, A. E. Q., C. P.,  Hoffmaster, A. R.,  Kozel, T. R.,  Saile, E.,  Marston, C. K.,  Percival, A.,  Plikaytis, B. D.,  Woolfitt, A. R.,  Gallegos, M.,  Sabourin, P.,  McWilliams, L. G.,  Pirkle, J. L.,  Barr, J. R.,","year":"2009","title":"Kinetics of lethal factor and poly-D-glutamic acid antigenemia during inhalation anthrax in rhesus macaques","secondary_title":"Infect Immun","volume":"77","number":"8","pages":"3432-3441","edition":"6/10/2009","date":"Aug","short_title":"Kinetics of lethal factor and poly-D-glutamic acid antigenemia during inhalation anthrax in rhesus macaques","isbn_issn":"1098-5522 (Electronic)","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"1:02","accession_number":"19506008","abstract":"Systemic anthrax manifests as toxemia, rapidly disseminating septicemia, immune collapse, and death. Virulence factors include the anti-phagocytic gamma-linked poly-d-glutamic acid (PGA) capsule and two binary toxins, complexes of protective antigen (PA) with lethal factor (LF) and edema factor. We report the characterization of LF, PA, and PGA levels during the course of inhalation anthrax in five rhesus macaques. We describe bacteremia, blood differentials, and detection of the PA gene (pagA) by PCR analysis of the blood as confirmation of infection. For four of five animals tested, LF exhibited a triphasic kinetic profile. LF levels (mean +/- standard error [SE] between animals) were low at 24 h postchallenge (0.03 +/- 1.82 ng/ml), increased at 48 h to 39.53 +/- 0.12 ng/ml (phase 1), declined at 72 h to 13.31 +/- 0.24 ng/ml (phase 2), and increased at 96 h (82.78 +/- 2.01 ng/ml) and 120 h (185.12 +/- 5.68 ng/ml; phase 3). The fifth animal had an extended phase 2. PGA levels were triphasic; they were nondetectable at 24 h, increased at 48 h (2,037 +/- 2 ng/ml), declined at 72 h (14 +/- 0.2 ng/ml), and then increased at 96 h (3,401 +/- 8 ng/ml) and 120 h (6,004 +/- 187 ng/ml). Bacteremia was also triphasic: positive at 48 h, negative at 72 h, and positive at euthanasia. Blood neutrophils increased from preexposure (34.4% +/- 0.13%) to 48 h (75.6% +/- 0.08%) and declined at 72 h (62.4% +/- 0.05%). The 72-h declines may establish a \"go/no go\" turning point in infection, after which systemic bacteremia ensues and the host's condition deteriorates. This study emphasizes the value of LF detection as a tool for early diagnosis of inhalation anthrax before the onset of fulminant systemic infection.","notes":"Boyer, Anne E: Quinn, Conrad P: Hoffmaster, Alex R: Kozel, Thomas R: Saile, Elke: Marston, Chung K: Percival, Ann: Plikaytis, Brian D: Woolfitt, Adrian R: Gallegos, Maribel: Sabourin, Patrick: McWilliams, Lisa G: Pirkle, James L: Barr, John R: AI059348/AI/NIAID NIH HHS/United States: AI061200/AI/NIAID NIH HHS/United States: Research Support, N.I.H., Extramural: United States: Infection and immunity: Infect Immun. 2009 Aug;77(8):3432-41. Epub 2009 Jun 8.","url":"http://elib.cdc.gov:2218/cgi/content/abstract/77/8/3432","author_address":"Centers for Disease Control and Prevention, Atlanta, GA 30341, USA.","database_provider":"Nlm","language":"eng","doi":"10.1128/IAI.00346-09"}
,{"record_number":"2616","reference_type":"Generic","author":"Romero-Alvarez, D. P., A. T.:Salzer, J. S.:Pittiglio, C.:Shadomy, S.:Traxler, R.:Vieira, A. R.:Bower, W. A.:Walke, H.:Campbell, L. P.","year":"2020","title":"Potential distributions of Bacillus anthracis and Bacillus cereus biovar anthracis causing anthrax in Africa","secondary_title":"PLoS Negl Trop Dis","volume":"14","number":"3","pages":"e0008131","edition":"3/10/2020","date":"3-Sep","short_title":"Potential distributions of Bacillus anthracis and Bacillus cereus biovar anthracis causing anthrax in Africa","isbn_issn":"1935-2727","custom_1":"CDC Authored Publications","custom_2":"Disease Reservoirs and Vectors","custom_8":"12:10","accession_number":"32150557","abstract":"BACKGROUND: Bacillus cereus biovar anthracis (Bcbva) is an emergent bacterium closely related to Bacillus anthracis, the etiological agent of anthrax. The latter has a worldwide distribution and usually causes infectious disease in mammals associated with savanna ecosystems. Bcbva was identified in humid tropical forests of Cote d'Ivoire in 2001. Here, we characterize the potential geographic distributions of Bcbva in West Africa and B. anthracis in sub-Saharan Africa using an ecological niche modeling approach. METHODOLOGY/PRINCIPAL FINDINGS: Georeferenced occurrence data for B. anthracis and Bcbva were obtained from public data repositories and the scientific literature. Combinations of temperature, humidity, vegetation greenness, and soils values served as environmental variables in model calibrations. To predict the potential distribution of suitable environments for each pathogen across the study region, parameter values derived from the median of 10 replicates of the best-performing model for each pathogen were used. We found suitable environments predicted for B. anthracis across areas of confirmed and suspected anthrax activity in sub-Saharan Africa, including an east-west corridor from Ethiopia to Sierra Leone in the Sahel region and multiple areas in eastern, central, and southern Africa. The study area for Bcbva was restricted to West and Central Africa to reflect areas that have likely been accessible to Bcbva by dispersal. Model predicted values indicated potential suitable environments within humid forested environments. Background similarity tests in geographic space indicated statistical support to reject the null hypothesis of similarity when comparing environments associated with B. anthracis to those of Bcbva and when comparing humidity values and soils values individually. We failed to reject the null hypothesis of similarity when comparing environments associated with Bcbva to those of B. anthracis, suggesting that additional investigation is needed to provide a more robust characterization of the Bcbva niche. CONCLUSIONS/SIGNIFICANCE: This study represents the first time that the environmental and geographic distribution of Bcbva has been mapped. We document likely differences in ecological niche-and consequently in geographic distribution-between Bcbva and typical B. anthracis, and areas of possible co-occurrence between the two. We provide information crucial to guiding and improving monitoring efforts focused on these pathogens.","notes":"1935-2735:Romero-Alvarez, Daniel:ORCID: http://orcid.org/0000-0002-6762-6046:Peterson, A Townsend:Salzer, Johanna S:Pittiglio, Claudia:Shadomy, Sean:Traxler, Rita:ORCID: http://orcid.org/0000-0001-7580-4116:Vieira, Antonio R:Bower, William A:Walke, Henry:Campbell, Lindsay P:Journal Article:United States:PLoS Negl Trop Dis. 2020 Mar 9;14(3):e0008131. doi: 10.1371/journal.pntd.0008131.","url":"https://www.ncbi.nlm.nih.gov/pubmed/32150557","author_address":"Department of Ecology & Evolutionary Biology and Biodiversity Institute, University of Kansas, Lawrence, Kansas, United States of America.:Bacterial Special Pathogens Branch, Division of High-Consequence Pathogens and Pathology, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, United States of America.:Animal Health Service, Animal Production and Health Division, Food and Agriculture Organization of the United Nations, Rome, Italy.:One Health Office, National Center for Emerging Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, United States of America.:Florida Medical Entomology Laboratory, Department of Entomology and Nematology, IFAS | University of Florida, Vero Beach, Florida, United States of America.","database_provider":"NLM","language":"eng","doi":"10.1371/journal.pntd.0008131"}
,{"record_number":"2792","reference_type":"Generic","author":"Muturi, M. G., J., Mwatondo, A., Lekolool, I., Gakuya, F., Bett, A., Osoro, E., Bitek, A., Thumbi, S. M., Munyua, P., Oyas, H., Njagi, O. N., Bett, B., Njenga, M. K.,","year":"2018","title":"Recurrent anthrax outbreaks in humans, livestock, and wildlife in the same locality, Kenya, 2014-2017","secondary_title":"Am J Trop Med Hyg","edition":"8/15/2018","date":"13-08","short_title":"Recurrent anthrax outbreaks in humans, livestock, and wildlife in the same locality, Kenya, 2014-2017","alternate_title":"The American journal of tropical medicine and hygiene","isbn_issn":"0002-9637","custom_1":"Top Articles of the Week","custom_2":"Zoonotic and Vectorborne Diseases","custom_8":"10:32","accession_number":"30105965","abstract":"Epidemiologic data indicate a global distribution of anthrax outbreaks associated with certain ecosystems that promote survival and viability of Bacillus anthracis spores. Here, we characterized three anthrax outbreaks involving humans, livestock, and wildlife that occurred in the same locality in Kenya between 2014 and 2017. Clinical and epidemiologic data on the outbreaks were collected using active case finding and review of human, livestock, and wildlife health records. Information on temporal and spatial distribution of prior outbreaks in the area was collected using participatory epidemiology. The 2014-2017 outbreaks in Nakuru West subcounty affected 15 of 71 people who had contact with infected cattle (attack rate = 21.1%), including seven with gastrointestinal, six with cutaneous, and two with oropharyngeal forms of the disease. Two (13.3%) gastrointestinal human anthrax cases died. No human cases were associated with infected wildlife. Of the 54 cattle owned in 11 households affected, 20 died (attack rate = 37%). The 2015 outbreak resulted in death of 10.5% of the affected herbivorous wildlife at Lake Nakuru National Park, including 745 of 4,500 African buffaloes (species-specific mortality rate = 17%) and three of 18 endangered white rhinos (species-specific mortality rate = 16%). The species mortality rate ranged from 1% to 5% for the other affected wildlife species. Participatory epidemiology identified prior outbreaks between 1973 and 2011 in the same area. The frequency and severity of outbreaks in this area suggests that it is an anthrax hotspot ideal for investigating risk factors associated with long-term survival of anthrax spores and outbreak occurrence.","notes":"1476-1645:Muturi, Mathew:Gachohi, John:Mwatondo, Athman:Lekolool, Isaac:Gakuya, Francis:Bett, Alice:Osoro, Eric:Bitek, Austine:Thumbi, S Mwangi:Munyua, Peninah:Oyas, Harry:Njagi, Obadiah N:Bett, Bernard:Njenga, M Kariuki:Journal Article:United States:Am J Trop Med Hyg. 2018 Aug 13. doi: 10.4269/ajtmh.18-0224.","url":"https://www.ncbi.nlm.nih.gov/pubmed/30105965","author_address":"Kenya Zoonotic Disease Unit, Nairobi, Kenya.:Washington State University Global Health Program-Kenya, Washington State University, Pullman, Washington.:Kenya Wildlife Services, Nairobi, Kenya.:Food and Agriculture Organization of the United Nations, Nairobi, Kenya.:Division of Global Health Protection, United States Centers for Disease Control and Prevention, Nairobi, Kenya.:Kenya Directorate of Veterinary Services, Nairobi, Kenya.:International Livestock Research Institute, Nairobi, Kenya.","database_provider":"NLM","language":"eng","doi":"10.4269/ajtmh.18-0224"}
,{"record_number":"2996","reference_type":"Generic","author":"Bower, W. A. S., J.;Atmar, R. L.;Keitel, W. A.;Friedlander, A. M.;Liu, L.;Yu, Y.;Stephens, D. S.;Quinn, C. P.;Hendricks, K.","year":"2019","title":"Use of anthrax vaccine in the United States: Recommendations of the Advisory Committee on Immunization Practices, 2019","secondary_title":"MMWR Recomm Rep","volume":"68","number":"4","pages":"44575","edition":"12/14/2019","date":"13-12","short_title":"Use of anthrax vaccine in the United States: Recommendations of the Advisory Committee on Immunization Practices, 2019","isbn_issn":"1057-5987","custom_1":"CDC Authored Publications","custom_2":"Immunity and Immunization","custom_8":"12:02","accession_number":"31834290","abstract":"This report updates the 2009 recommendations from the CDC Advisory Committee on Immunization Practices (ACIP) regarding use of anthrax vaccine in the United States (Wright JG, Quinn CP, Shadomy S, Messonnier N. Use of anthrax vaccine in the United States: recommendations of the Advisory Committee on Immunization Practices [ACIP)], 2009. MMWR Recomm Rep 2010;59[No. RR-6]). The report 1) summarizes data on estimated efficacy in humans using a correlates of protection model and safety data published since the last ACIP review, 2) provides updated guidance for use of anthrax vaccine adsorbed (AVA) for preexposure prophylaxis (PrEP) and in conjunction with antimicrobials for postexposure prophylaxis (PEP), 3) provides updated guidance regarding PrEP vaccination of emergency and other responders, 4) summarizes the available data on an investigational anthrax vaccine (AV7909), and 5) discusses the use of anthrax antitoxins for PEP. Changes from previous guidance in this report include the following: 1) a booster dose of AVA for PrEP can be given every 3 years instead of annually to persons not at high risk for exposure to Bacillus anthracis who have previously received the initial AVA 3-dose priming and 2-dose booster series and want to maintain protection; 2) during a large-scale emergency response, AVA for PEP can be administered using an intramuscular route if the subcutaneous route of administration poses significant materiel, personnel, or clinical challenges that might delay or preclude vaccination; 3) recommendations on dose-sparing AVA PEP regimens if the anthrax vaccine supply is insufficient to vaccinate all potentially exposed persons; and 4) clarification on the duration of antimicrobial therapy when used in conjunction with vaccine for PEP.These updated recommendations can be used by health care providers and guide emergency preparedness officials and planners who are developing plans to provide anthrax vaccine, including preparations for a wide-area aerosol release of B. anthracis spores. The recommendations also provide guidance on dose-sparing options, if needed, to extend the supply of vaccine to increase the number of persons receiving PEP in a mass casualty event.","notes":"1545-8601:Bower, William A:Schiffer, Jarad:Atmar, Robert L:Keitel, Wendy A:Friedlander, Arthur M:Liu, Lindy:Yu, Yon:Stephens, David S:Quinn, Conrad P:Hendricks, Katherine:ACIP Anthrax Vaccine Work Group:Journal Article:United States:MMWR Recomm Rep. 2019 Dec 13;68(4):1-14. doi: 10.15585/mmwr.rr6804a1.","url":"https://www.ncbi.nlm.nih.gov/pubmed/31834290","database_provider":"NLM","language":"eng","doi":"10.15585/mmwr.rr6804a1"}
,{"record_number":"5316","reference_type":"Generic","author":"McLaughlin, H. P. B., J. V.:Conley, A. B.:Gulvik, C. A.:Cherney, B.:Kolton, C.B.:Marston, C. K.:Saile, E.:Swaney, E.:Lonsway, D.:Gargis, A. S.:Kongphet-Tran, T.:Lascols, C.:Michel, P.:Villanueva, J.:Hoffmaster, A. R.:Gee, J. E.:Sue, D.","year":"2020","title":"Rapid nanopore whole-genome sequencing for anthrax emergency preparedness","secondary_title":"Emerg Infect Dis","volume":"26","number":"2","pages":"358-361","short_title":"Rapid nanopore whole-genome sequencing for anthrax emergency preparedness","alternate_title":"Emerg Infect Dis","isbn_issn":"1080-6059:1080-6040","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"12:06","accession_number":"31961318","keywords":"Bacillus anthracis:anthrax:bacteria:bioterrorism and preparedness:emergency preparedness:nanopore:whole-genome sequencing:zoonoses","abstract":"Human anthrax cases necessitate rapid response. We completed Bacillus anthracis nanopore whole-genome sequencing in our high-containment laboratory from a human anthrax isolate hours after receipt. The de novo assembled genome showed no evidence of known antimicrobial resistance genes or introduced plasmid(s). Same-day genomic characterization enhances public health emergency response.","notes":"31961318[pmid]:PMC6986837[pmcid]","url":"https://www.ncbi.nlm.nih.gov/pubmed/31961318","name_of_database":"PubMed","language":"eng","doi":"10.3201/eid2602.191351"}
,{"record_number":"5317","reference_type":"Generic","author":"McLaughlin, H. P. B., J. V.;Conley, A. B.;Gulvik, C. A.;Cherney, B.;Kolton, C.B.;Marston, C. K.;Saile, E.;Swaney, E.;Lonsway, D.;Gargis, A. S.;Kongphet-Tran, T.;Lascols, C.;Michel, P.;Villanueva, J.;Hoffmaster, A. R.;Gee, J. E.;Sue, D.","year":"2020","title":"Rapid nanopore whole-genome sequencing for anthrax emergency preparedness","secondary_title":"Emerg Infect Dis","volume":"26","number":"2","pages":"358-361","short_title":"Rapid nanopore whole-genome sequencing for anthrax emergency preparedness","alternate_title":"Emerg Infect Dis","isbn_issn":"1080-6059:1080-6040","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"12:06","accession_number":"31961318","keywords":"Bacillus anthracis:anthrax:bacteria:bioterrorism and preparedness:emergency preparedness:nanopore:whole-genome sequencing:zoonoses","abstract":"Human anthrax cases necessitate rapid response. We completed Bacillus anthracis nanopore whole-genome sequencing in our high-containment laboratory from a human anthrax isolate hours after receipt. The de novo assembled genome showed no evidence of known antimicrobial resistance genes or introduced plasmid(s). Same-day genomic characterization enhances public health emergency response.","notes":"31961318[pmid]:PMC6986837[pmcid]","url":"https://www.ncbi.nlm.nih.gov/pubmed/31961318","name_of_database":"PubMed","language":"eng","doi":"10.3201/eid2602.191351"}
,{"record_number":"6478","reference_type":"Generic","author":"Nakanwagi, M. A., A. R.;Kwagonza, L.;Aceng, F. L.;Mwesigye, J.;Bulage, L.;Buule, J.;Sendagala, J. N.;Downing, R.;Zhu, B. P.","year":"2020","title":"Outbreak of gastrointestinal anthrax following eating beef of suspicious origin: Isingiro District, Uganda, 2017","secondary_title":"PLoS Negl Trop Dis","volume":"14","number":"2","pages":"e0008026","edition":"2/28/2020","date":"27-02","short_title":"Outbreak of gastrointestinal anthrax following eating beef of suspicious origin: Isingiro District, Uganda, 2017","isbn_issn":"1935-2727","custom_1":"CDC Authored Publications","custom_2":"Food Safety","custom_8":"12:08","accession_number":"32106229","abstract":"INTRODUCTION: Gastrointestinal anthrax is a rare but serious disease. In August 2017, Isingiro District, Uganda reported a cluster of >40 persons with acute-onset gastroenteritis. Symptoms included bloody diarrhoea. We investigated to identify the etiology and exposures, and to inform control measures. METHODS: We defined a suspected case as acute-onset of diarrhoea or vomiting during 15-31 August 2017 in a resident (aged>/=2 years) of Kabingo sub-county, Isingiro District; a confirmed case was a suspected case with a clinical sample positive for Bacillus anthracis by culture or PCR. We conducted descriptive epidemiology to generate hypotheses. In a case-control study, we compared exposures between case-patients and neighbourhood-matched controls. We used conditional logistic regression to compute matched odds ratios (MOR) for associations of illness with exposures. RESULTS: We identified 61 cases (58 suspected and 3 confirmed; no deaths). In the case-control study, 82% of 50 case-patients and 12% of 100 controls ate beef purchased exclusively from butchery X during the week before illness onset (MOR = 46, 95%CI = 4.7-446); 8.0% of case-patients and 3.0% of controls ate beef purchased from butchery X and elsewhere (MOR = 19, 95%CI = 1.0-328), compared with 6.0% of case-patients and 30% of controls who did not eat beef. B. anthracis was identified in two vomitus and one stool sample. Butchery X slaughtered a sick cow and sold the beef during case-patients' incubation period. CONCLUSION: This gastrointestinal anthrax outbreak occurred due to eating beef from butchery X. We recommended health education, safe disposal of the carcasses of livestock or game animals, and anthrax vaccination for livestock.","notes":"1935-2735:Nakanwagi, Miriam:ORCID: http://orcid.org/0000-0001-8677-7854:Ario, Alex Riolexus:Kwagonza, Leocadia:Aceng, Freda Loy:ORCID: http://orcid.org/0000-0003-3029-8947:Mwesigye, James:Bulage, Lilian:Buule, Joshua:Sendagala, Juliet Nsimire:Downing, Robert:ORCID: http://orcid.org/0000-0001-5692-8981:Zhu, Bao-Ping:Journal Article:United States:PLoS Negl Trop Dis. 2020 Feb 27;14(2):e0008026. doi: 10.1371/journal.pntd.0008026.","url":"https://www.ncbi.nlm.nih.gov/pubmed/32106229","author_address":"Uganda Public Health Fellowship Program-Field Epidemiology Track, Kampala, Uganda.:Department of Microbiology, Mbarara Regional Referral Hospital, Mbarara, Uganda.:UVRI-Abbott Research Laboratory, Uganda Virus Research Institute, Entebbe, Uganda.:MRC/LSHTM/UVRI, Uganda Virus Research Institute, Entebbe, Uganda.:Global Health Security Agenda, Uganda Virus Research Institute, Entebbe, Uganda.:US Centers for Disease Control and Prevention, Kampala, Uganda.:Division of Global Health Protection, Center for Global Health, US Centers for Disease Control and Prevention, Atlanta, United States of America.","database_provider":"NLM","language":"eng","doi":"10.1371/journal.pntd.0008026"}
,{"record_number":"6479","reference_type":"Generic","author":"Nakanwagi, M. A., A. R.;Kwagonza, L.;Aceng, F. L.;Mwesigye, J.;Bulage, L.;Buule, J.;Sendagala, J. N.;Downing, R.;Zhu, B. P.","year":"2020","title":"Outbreak of gastrointestinal anthrax following eating beef of suspicious origin: Isingiro District, Uganda, 2017","secondary_title":"PLoS Negl Trop Dis","volume":"14","number":"2","pages":"e0008026","edition":"2/28/2020","date":"27-02","short_title":"Outbreak of gastrointestinal anthrax following eating beef of suspicious origin: Isingiro District, Uganda, 2017","isbn_issn":"1935-2727","custom_1":"CDC Authored Publications","custom_2":"Food Safety","custom_8":"12:08","accession_number":"32106229","abstract":"INTRODUCTION: Gastrointestinal anthrax is a rare but serious disease. In August 2017, Isingiro District, Uganda reported a cluster of >40 persons with acute-onset gastroenteritis. Symptoms included bloody diarrhoea. We investigated to identify the etiology and exposures, and to inform control measures. METHODS: We defined a suspected case as acute-onset of diarrhoea or vomiting during 15-31 August 2017 in a resident (aged>/=2 years) of Kabingo sub-county, Isingiro District; a confirmed case was a suspected case with a clinical sample positive for Bacillus anthracis by culture or PCR. We conducted descriptive epidemiology to generate hypotheses. In a case-control study, we compared exposures between case-patients and neighbourhood-matched controls. We used conditional logistic regression to compute matched odds ratios (MOR) for associations of illness with exposures. RESULTS: We identified 61 cases (58 suspected and 3 confirmed; no deaths). In the case-control study, 82% of 50 case-patients and 12% of 100 controls ate beef purchased exclusively from butchery X during the week before illness onset (MOR = 46, 95%CI = 4.7-446); 8.0% of case-patients and 3.0% of controls ate beef purchased from butchery X and elsewhere (MOR = 19, 95%CI = 1.0-328), compared with 6.0% of case-patients and 30% of controls who did not eat beef. B. anthracis was identified in two vomitus and one stool sample. Butchery X slaughtered a sick cow and sold the beef during case-patients' incubation period. CONCLUSION: This gastrointestinal anthrax outbreak occurred due to eating beef from butchery X. We recommended health education, safe disposal of the carcasses of livestock or game animals, and anthrax vaccination for livestock.","notes":"1935-2735:Nakanwagi, Miriam:ORCID: http://orcid.org/0000-0001-8677-7854:Ario, Alex Riolexus:Kwagonza, Leocadia:Aceng, Freda Loy:ORCID: http://orcid.org/0000-0003-3029-8947:Mwesigye, James:Bulage, Lilian:Buule, Joshua:Sendagala, Juliet Nsimire:Downing, Robert:ORCID: http://orcid.org/0000-0001-5692-8981:Zhu, Bao-Ping:Journal Article:United States:PLoS Negl Trop Dis. 2020 Feb 27;14(2):e0008026. doi: 10.1371/journal.pntd.0008026.","url":"https://www.ncbi.nlm.nih.gov/pubmed/32106229","author_address":"Uganda Public Health Fellowship Program-Field Epidemiology Track, Kampala, Uganda.:Department of Microbiology, Mbarara Regional Referral Hospital, Mbarara, Uganda.:UVRI-Abbott Research Laboratory, Uganda Virus Research Institute, Entebbe, Uganda.:MRC/LSHTM/UVRI, Uganda Virus Research Institute, Entebbe, Uganda.:Global Health Security Agenda, Uganda Virus Research Institute, Entebbe, Uganda.:US Centers for Disease Control and Prevention, Kampala, Uganda.:Division of Global Health Protection, Center for Global Health, US Centers for Disease Control and Prevention, Atlanta, United States of America.","database_provider":"NLM","language":"eng","doi":"10.1371/journal.pntd.0008026"}
,{"record_number":"7376","reference_type":"Generic","author":"M. S.;Hasan Islam, S. M.;Salzer, J. S.;Kadzik, M.;Haque, F.;Haider, N.;Hossain, M. B.;Islam, M. A.;Rahman, M.;Kennedy, E.;Gurley, E. S.","year":"2020","title":"Human exposures to by-products from animals suspected to have died of anthrax in Bangladesh: An exploratory study","secondary_title":"Transbound Emerg Dis","edition":"11/12/2020","date":"11-Nov","short_title":"Human exposures to by-products from animals suspected to have died of anthrax in Bangladesh: An exploratory study","isbn_issn":"1865-1674","custom_1":"CDC Authored Publications","custom_2":"Zoonotic and Vectorborne Diseases","custom_8":"12:41","accession_number":"33174386","abstract":"Anthrax is a zoonotic disease caused by the bacterium Bacillus anthracis that is considered endemic in Bangladesh, where cases among animals and people have been reported almost annually since 2009. Contaminated by-products from animals are suspected to play a role in transmission to people, but minimal information is known on the supply-chain of these potentially contaminated products. Between April 2013 and May 2016, we conducted a qualitative study in 17 villages located in 5 districts in Bangladesh, which had experienced suspected anthrax outbreaks. The study explored how by-products from suspected animal cases were collected, discarded, processed, distributed, and used by people. We conducted open-ended interviews, group discussions, and unstructured observations of people's exposure to animal by-products. The practice of slaughtering acutely ill domestic ruminants before they died was common. Respondents reported that moribund animals were typically butchered, and the waste products were discarded in nearby rivers, ditches, bamboo bushes, or on privately owned land. Regardless of health status before death, very few carcasses were buried, and none were incinerated or burned. The hides were reportedly used to make wallets, belts, shoes, balls, and clothing. Discarded bones were often ground into granular and powder forms to produce bone meal and fertilizer. Therefore, given anthrax is endemic in the study region, livestock with acute onset of fatal disease or found dead with no known cause of death may be an anthrax case and subsequently pose a health risk to those involved in the collection and processing of the carcass, as well as the end-user of these products. Improved bio-security practices and safe carcass disposal measures could reduce the risk of human exposure, but resource and other constraints make implementation a challenge. Therefore, targeting at-risk animal populations for vaccination may be the most effective strategy to reduce anthrax outbreaks, protect the supply chain, and reduce the risk of exposure to B. anthracis.","notes":"1865-1682:Islam, Md Saiful:Orcid: 0000-0002-5690-5971:Hasan, Sm Murshid:Salzer, Johanna S:Melissa, Kadzik:Haque, Farhana:Haider, Najmul:Orcid: 0000-0002-5980-3460:Hossain, Muhammad Belal:Islam, Mohammad Ariful:Rahman, Mahmudur:Kennedy, Erin:Gurley, Emily S:Journal Article:Germany:Transbound Emerg Dis. 2020 Nov 11. doi: 10.1111/tbed.13921.","url":"https://pubmed.ncbi.nlm.nih.gov/33174386","author_address":"icddr,b, Dhaka, Bangladesh.:School of Public Health and Community Medicine, University of New South Wales, Sydney, Australia.:Centers for Disease Control and Prevention, Atlanta, Georgia, USA.:Institute of Epidemiology Disease Control and Research, Dhaka, Bangladesh.:Institute for Global Health (IGH), University College London, United Kingdom.:The Royal Veterinary College, University of London, Hawkshead lane, Hertfordshire, United Kingdom.:Department of Epidemiology, Johns Hopkins Bloomberg School of Public Health, Baltimore, USA.","language":"eng","doi":"10.1111/tbed.13921"}
,{"record_number":"9102","reference_type":"Generic","author":"T.;Salzer Sidwa, J. S.;Traxler, R.;Swaney, E.;Sims, M. L.;Bradshaw, P.;O'Sullivan, B. J.;Parker, K.;Waldrup, K. A.;Bower, W. A.;Hendricks, K.","year":"2020","title":"Control and prevention of anthrax, Texas, USA, 2019","secondary_title":"Emerg Infect Dis","volume":"26","number":"12","pages":"2815-2824","edition":"11/22/2020","date":"Dec","short_title":"Control and prevention of anthrax, Texas, USA, 2019","isbn_issn":"1080-6040 (Print):1080-6040","custom_1":"CDC Authored Publications","custom_2":"Zoonotic and Vectorborne Diseases","custom_8":"13:01","accession_number":"33219643","keywords":"Bacillus anthracis:Texas:anthrax:bacteria:infection control:prevention:prophylaxis:treatment:vaccination:vaccine-preventable diseases:zoonoses","abstract":"The zoonotic disease anthrax is endemic to most continents. It is a disease of herbivores that incidentally infects humans through contact with animals that are ill or have died from anthrax or through contact with Bacillus anthracis-contaminated byproducts. In the United States, human risk is primarily associated with handling carcasses of hoofstock that have died of anthrax; the primary risk for herbivores is ingestion of B. anthracis spores, which can persist in suitable alkaline soils in a corridor from Texas through Montana. The last known naturally occurring human case of cutaneous anthrax associated with livestock exposure in the United States was reported from South Dakota in 2002. Texas experienced an increase of animal cases in 2019 and consequently higher than usual human risk. We describe the animal outbreak that occurred in southwest Texas beginning in June 2019 and an associated human case. Primary prevention in humans is achieved through control of animal anthrax.","notes":"1080-6059:Sidwa, Tom:Salzer, Johanna S:Traxler, Rita:Swaney, Erin:Sims, Marcus L:Bradshaw, Pam:O'Sullivan, Briana J:Parker, Kathy:Waldrup, Kenneth A:Bower, William A:Hendricks, Kate:Journal Article:Emerg Infect Dis. 2020 Dec;26(12):2815-2824. doi: 10.3201/eid2612.200470.","url":"https://pubmed.ncbi.nlm.nih.gov/33219643","language":"eng","doi":"10.3201/eid2612.200470"}
,{"record_number":"9399","reference_type":"Generic","author":"Hupert, N. P., M.;Hanfling, D.;Traxler, R. M.;Bower, W. A.;Hendricks, K.","year":"2019","title":"Development and performance of a checklist for initial triage after an anthrax mass exposure event","secondary_title":"Ann Intern Med","edition":"3/19/2019","date":"19-03","short_title":"Development and performance of a checklist for initial triage after an anthrax mass exposure event","alternate_title":"Annals of internal medicine","isbn_issn":"0003-4819","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"11:14","accession_number":"30884525","abstract":"Background: Population exposure to Bacillus anthracis spores could cause mass casualties requiring complex medical care. Rapid identification of patients needing anthrax-specific therapies will improve patient outcomes and resource use. Objective: To develop a checklist that rapidly distinguishes most anthrax from nonanthrax illnesses on the basis of clinical presentation and identifies patients requiring diagnostic testing after a population exposure. Design: Comparison of published anthrax case reports from 1880 through 2013 that included patients seeking anthrax-related care at 2 epicenters of the 2001 U.S. anthrax attacks. Setting: Outpatient and inpatient. Patients: 408 case patients with inhalation, ingestion, and cutaneous anthrax and primary anthrax meningitis, and 657 control patients. Measurements: Diagnostic test characteristics, including positive and negative likelihood ratios (LRs) and patient triage assignation. Results: Checklist-directed triage without diagnostic testing correctly classified 95% (95% CI, 93% to 97%) of 353 adult anthrax case patients and 76% (CI, 73% to 79%) of 647 control patients (positive LR, 3.96 [CI, 3.45 to 4.55]; negative LR, 0.07 [CI, 0.04 to 0.11]; false-negative rate, 5%; false-positive rate, 24%). Diagnostic testing was needed for triage in up to 5% of case patients and 15% of control patients and improved overall test characteristics (positive LR, 8.90 [CI, 7.05 to 11.24]; negative LR, 0.06 [CI, 0.04 to 0.09]; false-negative rate, 5%; false-positive rate, 11%). Checklist sensitivity and specificity were minimally affected by inclusion of pediatric patients. Sensitivity increased to 97% (CI, 94% to 100%) and 98% (CI, 96% to 100%), respectively, when only inhalation anthrax cases or higher-quality case reports were investigated. Limitations: Data on case patients were limited to nonstandardized, published observational reports, many of which lacked complete data on symptoms and signs of interest. Reporting bias favoring more severe cases and lack of intercurrent outbreaks (such as influenza) in the control populations may have improved test characteristics. Conclusion: A brief checklist covering symptoms and signs can distinguish anthrax from other conditions with minimal need for diagnostic testing after known or suspected population exposure. Primary Funding Source: U.S. Department of Health and Human Services.","notes":"1539-3704:Hupert, Nathaniel:Person, Marissa:Hanfling, Dan:Traxler, Rita M:Bower, William A:Hendricks, Katherine:Journal Article:United States:Ann Intern Med. 2019 Mar 19. pii: 2728713. doi: 10.7326/M18-1817.","url":"https://www.ncbi.nlm.nih.gov/pubmed/30884525","author_address":"Centers for Disease Control and Prevention, Atlanta, Georgia, and Weill Cornell Medicine and NewYork-Presbyterian Hospital, New York, New York (N.H.).:Centers for Disease Control and Prevention, Atlanta, Georgia (M.P., R.M.T., W.A.B., K.H.).:Johns Hopkins Bloomberg School of Public Health, Baltimore, Maryland, George Washington University, Washington, DC, and Inova Fairfax Hospital, Falls Church, Virginia (D.H.).","database_provider":"NLM","language":"eng","doi":"10.7326/m18-1817"}
,{"record_number":"9496","reference_type":"Generic","author":"Lins, R. C. B., A. E.;Kuklenyik, Z.;Woolfitt, A. R.;Goldstein, J.;Hoffmaster, A. R.;Gallegos-Candela, M.;Leysath, C. E.;Chen, Z.;Brumlow, J. O.;Quinn, C. P.;Bagarozzi, D. A., Jr.;Leppla, S. H.;Barr, J. R.","year":"2019","title":"Zeptomole per milliliter detection and quantification of edema factor in plasma by LC-MS/MS yields insights into toxemia and the progression of inhalation anthrax","secondary_title":"Anal Bioanal Chem","edition":"3/27/2019","date":"26-03","short_title":"Zeptomole per milliliter detection and quantification of edema factor in plasma by LC-MS/MS yields insights into toxemia and the progression of inhalation anthrax","alternate_title":"Analytical and bioanalytical chemistry","isbn_issn":"1618-2642","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"11:14","accession_number":"30911800","keywords":"Adenylyl cyclase:Anthrax:Cyclic AMP:Edema toxin:Hplc:Mass spectrometry","abstract":"Inhalation of Bacillus anthracis spores can cause a rapidly progressing fatal infection. B. anthracis secretes three protein toxins: lethal factor (LF), edema factor (EF), and protective antigen (PA). EF and LF may circulate as free or PA-bound forms. Both free EF (EF) and PA-bound-EF (ETx) have adenylyl cyclase activity converting ATP to cAMP. We developed an adenylyl cyclase activity-based method for detecting and quantifying total EF (EF+ETx) in plasma. The three-step method includes magnetic immunocapture with monoclonal antibodies, reaction with ATP generating cAMP, and quantification of cAMP by isotope-dilution HPLC-MS/MS. Total EF was quantified from 5PL regression of cAMP vs ETx concentration. The detection limit was 20 fg/mL (225 zeptomoles/mL for the 89 kDa protein). Relative standard deviations for controls with 0.3, 6.0, and 90 pg/mL were 11.7-16.6% with 91.2-99.5% accuracy. The method demonstrated 100% specificity in 238 human serum/plasma samples collected from unexposed healthy individuals, and 100% sensitivity in samples from 3 human and 5 rhesus macaques with inhalation anthrax. Analysis of EF in the rhesus macaques showed that it was detected earlier post-exposure than B. anthracis by culture and PCR. Similar to LF, the kinetics of EF over the course of infection were triphasic, with an initial rise (phase-1), decline (phase-2), and final rapid rise (phase-3). EF levels were ~ 2-4 orders of magnitude lower than LF during phase-1 and phase-2 and only ~ 6-fold lower at death/euthanasia. Analysis of EF improves early diagnosis and adds to our understanding of anthrax toxemia throughout infection. The LF/EF ratio may also indicate the stage of infection and need for advanced treatments.","notes":"1618-2650:Lins, Renato C:Boyer, Anne E:Kuklenyik, Zsuzsanna:Woolfitt, Adrian R:Goldstein, Jason:Hoffmaster, Alex R:Gallegos-Candela, Maribel:Leysath, Clinton E:Chen, Zhaochun:Brumlow, Judith O:Quinn, Conrad P:Bagarozzi, Dennis A Jr:Leppla, Stephen H:Barr, John R:Journal Article:Germany:Anal Bioanal Chem. 2019 Mar 26. pii: 10.1007/s00216-019-01730-4. doi: 10.1007/s00216-019-01730-4.","url":"https://www.ncbi.nlm.nih.gov/pubmed/30911800","author_address":"Battelle Atlanta Analytical Services, 2987 Clairmont Road NE, Suite 450, Atlanta, GA, 30329, USA.:Centers for Disease Control and Prevention, 4770 Buford Highway Mailstop F-50, Atlanta, GA, 30341, USA. aboyer@cdc.gov.:Centers for Disease Control and Prevention, 4770 Buford Highway Mailstop F-50, Atlanta, GA, 30341, USA.:Centers for Disease Control and Prevention, 1600 Clifton Road, Atlanta, GA, 30333, USA.:Laboratory of Parasitic Diseases, NIAID, NIH, 9000 Rockville Pike, Bethesda, MD, 20892, USA.:Center for Innovation in Advanced Development and Manufacturing, Texas A&M University Health Science Center, 8441 Riverside Parkway, Suite 3200, Bryan, TX, 77807, USA.:Laboratory of Infectious Diseases, National Institute for Allergy and Infectious Diseases (NIAID), National Institutes of Health (NIH), 9000 Rockville Pike, Bethesda, MD, 20892, USA.","database_provider":"NLM","language":"eng","doi":"10.1007/s00216-019-01730-4"}
,{"record_number":"11291","reference_type":"Generic","author":"Nayak, P. S., S. V.;Laserson, K. F.;Padhi, A. K.;Swain, B. K.;Hossain, S. S.;Shrivastava, A.;Khasnobis, P.;Venkatesh, S. R.;Patnaik, B.;Dash, K. C.","year":"2019","title":"A cutaneous anthrax outbreak in Koraput District of Odisha-India 2015","secondary_title":"BMC Public Health","volume":"19","type_of_work":"Article","short_title":"A cutaneous anthrax outbreak in Koraput District of Odisha-India 2015","alternate_title":"BMC Public Health","isbn_issn":"14712458 (ISSN)","custom_1":"CDC Authored Publications","custom_2":"Zoonotic and Vectorborne Diseases","custom_7":"470","custom_8":"11:22","keywords":"Anthrax:Global health security:India:Koraput","abstract":"Background: Cutaneous anthrax in humans is associated with exposure to infected animals or animal products and has a case fatality rate of up to 20% if untreated. During May to June 2015, an outbreak of cutaneous anthrax was reported in Koraput district of Odisha, India, an area endemic for anthrax. We investigated the outbreak to identify risk factors and recommend control measures. Method: We defined a cutaneous anthrax case as skin lesions (e.g., papule, vesicle or eschar) in a person residing in Koraput district with illness onset between February 1 and July 15, 2015. We established active surveillance through a house to house survey to ascertain additional cases and conducted a 1:2 unmatched case control study to identify modifiable risk factors. In case control study, we included cases with illness onset between May 1 and July 15, 2015. We defined controls as neighbours of case without skin lesions since last 3 months. Ulcer exudates and rolled over swabs from wounds were processed in Gram stain in the Koraput district headquarter hospital laboratory. Result: We identified 81 cases (89% male; median age 38 years [range 5-75 years]) including 3 deaths (case fatality rate = 4%). Among 37 cases and 74 controls, illness was significantly associated with eating meat of ill cattle (OR: 14.5, 95% CI: 1.4-85.7) and with close handling of carcasses of ill animals such as burying, skinning, or chopping (OR: 342, 95% CI: 40.5-1901.8). Among 20 wound specimens collected, seven showed spore-forming, gram positive bacilli, with bamboo stick appearance suggestive of Bacillus anthracis. Conclusion: Our investigation revealed significant associations between eating and handling of ill animals and presence of anthrax-like organisms in lesions. We immediately initiated livestock vaccination in the area, educated the community on safe handling practices and recommended continued regular anthrax animal vaccinations to prevent future outbreaks.","notes":"Export Date: 24 May 2019:Correspondence Address: Nayak, P.; National Centre for Disease Control, 22 Shamnath Marg, Civil Lines, India; email: priyakantanayak@gmail.com","url":"https://bmcpublichealth.biomedcentral.com/articles/10.1186/s12889-019-6787-0","author_address":"National Centre for Disease Control, 22 Shamnath Marg, Civil Lines, New Delhi, India:Direct. of Health Services, Bhubaneswar, Odisha, India:United States Centers for Disease Control and Prevention, Delhi, India:Division of Global Health Protection, Centers for Global Health, Centers for Disease Control and Prevention, Atlanta, United States","name_of_database":"Scopus","language":"English","doi":"10.1186/s12889-019-6787-0"}
,{"record_number":"11294","reference_type":"Generic","author":"Rao, S. T., R.;Napetavaridze, T.;Asanishvili, Z.;Rukhadze, K.;Maghlakelidze, G.;Geleishvili, M.;Broladze, M.;Kokhreidze, M.;Reynolds, D.;Shadomy, S.;Salman, M.","year":"2019","title":"Risk factors associated with the occurrence of anthrax outbreaks in livestock in the country of Georgia: A case-control investigation 2013-2015","secondary_title":"PLoS One","volume":"14","number":"5","pages":"e0215228","edition":"5/3/2019","short_title":"Risk factors associated with the occurrence of anthrax outbreaks in livestock in the country of Georgia: A case-control investigation 2013-2015","alternate_title":"PloS one","isbn_issn":"1932-6203","custom_1":"CDC Authored Publications","custom_2":"Zoonotic and Vectorborne Diseases","custom_8":"11:22","accession_number":"31048838","abstract":"INTRODUCTION: Anthrax is considered endemic in livestock in Georgia. In 2007, the annual vaccination became the responsibility of livestock owners, while contracting of private veterinarians was not officially required. Six years later, due to increase in human outbreaks associated with livestock handling, there is a need to find out the risk factors of livestock anthrax in Georgia. OBJECTIVE: To identify exposures and risk factors associated with livestock anthrax. METHODS: A matched case-control study design was used to recruit the owners of individual livestock anthrax cases that occurred between June 2013 and May 2015, and owners of unaffected livestock from within (\"village control\") and outside the village (\"area control\"). We collected data about the case and control livestock animals' exposure and risk factors within the one-month prior to the disease onset of the case livestock (or matched case for the controls). We used logistic regression analysis (univariate and multivariable) to calculate the odds ratios of exposures and risk factors. RESULTS: During the study period, 36 anthrax cases met the case definition and were enrolled in the study; 67 matched village control livestock and 71 matched area control livestock were also enrolled. The findings from multivariable logistic regression analysis demonstrate that vaccination within the last two years significantly reduced the odds of anthrax in cattle (OR = 0.014; 95% Confidence interval = <0.001, 0.99). The other factors that were significantly protective against anthrax were 'animals being in covered fence area/barn' (OR = 0.065; p-value = 0.036), and 'female animal being pregnant or milking compared to heifer' (OR = 0.006; p-value = 0.037). CONCLUSIONS: The information obtained from this study has involved and been presented to decision makers, used to build technical capacity of veterinary staff, and to foster a One Health approach to the control of zoonotic diseases which will optimize prevention and control strategies. Georgia has embedded the knowledge and specific evidence that vaccination is a highly protective measure to prevent anthrax deaths among livestock, to which primary emphasis of the anthrax control program will be given. Education of livestock keepers in Georgia is an overriding priority.","notes":"1932-6203:Rao, Sangeeta:ORCID: http://orcid.org/0000-0002-9234-0082:Traxler, Rita:ORCID: http://orcid.org/0000-0001-7580-4116:Napetavaridze, Tsira:Asanishvili, Zviad:Rukhadze, Ketevan:Maghlakelidze, Giorgi:Geleishvili, Marika:Broladze, Mariam:Kokhreidze, Maka:Reynolds, Debby:Shadomy, Sean:Salman, Mo:Journal Article:United States:PLoS One. 2019 May 2;14(5):e0215228. doi: 10.1371/journal.pone.0215228. eCollection 2019.","url":"https://www.ncbi.nlm.nih.gov/pubmed/31048838","author_address":"Department of Clinical Sciences, Colorado State University, Fort Collins, Colorado, United States of America.:Centers for Disease Control and Prevention (CDC), Division of High-Consequence Pathogens and Pathology, National Center for Emerging and Zoonotic Infectious Diseases (NCEZID), Atlanta, Georgia, United States of America.:National Food Agency (NFA) of Ministry of Environmental Protection and Agriculture of Georgia (MEPA), Tbilisi, Georgia.:Department of Rural Development and Vocational Education (DRDVE) of Georgian Institute of Public Affairs (GIPA), Tbilisi, Georgia.:National Center for Disease Control and Prevention, Tbilisi, Georgia.:Laboratory of the Ministry of Agriculture (LMA), Tbilisi, Georgia.:CDC One Health Office, NCEZID, Atlanta, Georgia, United States of America.","database_provider":"NLM","language":"eng","doi":"10.1371/journal.pone.0215228"}
,{"record_number":"14211","reference_type":"Journal Article","author":"Bodenham, R. F.;Mtui-Malamsha, N.;Gatei, W.;Woldetsadik, M. A.;Cassell, C. H.;Salyer, S. J.;Halliday, J. E. B.;Nonga, H. E.;Swai, E. S.;Makungu, S.;Mwakapeje, E.;Bernard, J.;Bebay, C.;Makonnen, Y. J.;Fasina, F. O.","year":"2021","title":"Multisectoral cost analysis of a human and livestock anthrax outbreak in Songwe Region, Tanzania (December 2018-January 2019), using a novel Outbreak Costing Tool","secondary_title":"One Health","volume":"13","pages":"100259","edition":"5/21/2021","date":"Dec","short_title":"Multisectoral cost analysis of a human and livestock anthrax outbreak in Songwe Region, Tanzania (December 2018-January 2019), using a novel Outbreak Costing Tool","isbn_issn":"2352-7714 (Print):2352-7714","custom_1":"CDC Authored Publications","custom_2":"Zoonotic and Vectorborne Diseases","custom_8":"13:20","accession_number":"34013015","keywords":"Anthrax:Cost analysis:Infectious disease outbreak:One Health:Outbreak Costing Tool:Tanzania","abstract":"OBJECTIVES: We applied a novel Outbreak Costing Tool (OCT), developed by the US Centers for Disease Control and Prevention (CDC), to estimate the costs of investigating and responding to an anthrax outbreak in Tanzania. We also evaluated the OCT's overall utility in its application to a multisectoral outbreak response. METHODS: We collected data on direct costs associated with a human and animal anthrax outbreak in Songwe Region (December 2018 to January 2019) using structured questionnaires from key-informants. We performed a cost analysis by entering direct costs data into the OCT, grouped into seven cost categories: labor, office, travel and transport, communication, laboratory support, medical countermeasures, and consultancies. RESULTS: The total cost for investigating and responding to this outbreak was estimated at 102,232 United States dollars (USD), with travel and transport identified as the highest cost category (62,536 USD) and communication and consultancies as the lowest, with no expenditure, for the combined human and animal health sectors. CONCLUSIONS: Multisectoral investigation and response may become complex due to coordination challenges, thus allowing escalation of public health impacts. A standardized framework for collecting and analysing cost data is vital to understanding the nature of outbreaks, in anticipatory planning, in outbreak investigation and in reducing time to intervention. Pre-emptive use of the OCT will also reduce overall and specific (response period) intervention costs for the disease. Additional aggregation of the costs by government ministries, departments and tiers will improve the use of the tool to enhance sectoral budget planning for disease outbreaks in a multisectoral response.","notes":"2352-7714:Bodenham, Rebecca F:Mtui-Malamsha, Niwael:Gatei, Wangeci:Woldetsadik, Mahlet A:Cassell, Cynthia H:Salyer, Stephanie J:Halliday, Jo E B:Nonga, Hezron E:Swai, Emmanuel S:Makungu, Selemani:Mwakapeje, Elibariki:Bernard, Jubilate:Bebay, Charles:Makonnen, Yilma J:Fasina, Folorunso O:Journal Article:One Health. 2021 Apr 30;13:100259. doi: 10.1016/j.onehlt.2021.100259. eCollection 2021 Dec.","url":"https://pubmed.ncbi.nlm.nih.gov/34013015","author_address":"Institute of Biodiversity, Animal Health and Comparative Medicine, University of Glasgow, Glasgow, UK.:Emergency Centre for Transboundary Animal Diseases (ECTAD), Food and Agriculture Organization of the United Nations (FAO), Dar es Salaam, United Republic of Tanzania.:Division of Global Health Protection, Center for Global Health, US Centers for Disease Control and Prevention (CDC), Atlanta, GA, USA.:Directorate of Veterinary Services, Ministry of Livestock and Fisheries, Dodoma, United Republic of Tanzania.:Ministry of Health, Community Development, Gender, Elderly and Children, Dodoma, United Republic of Tanzania.:One Health Coordination Desk, Office of the Prime Minister, Dodoma, United Republic of Tanzania.:Emergency Centre for Transboundary Animal Diseases (ECTAD) Regional Office for Eastern Africa, Food and Agriculture Organization of the United Nations (FAO), Nairobi, Kenya.:Emergency Centre for Transboundary Animal Diseases (ECTAD), Food and Agriculture Organization of the United Nations (FAO), Rome, Italy.","language":"eng","doi":"10.1016/j.onehlt.2021.100259"}
,{"record_number":"14551","reference_type":"Generic","author":"Centers for Disease Control and Prevention (CDC)","year":"2010","title":"Gastrointestinal anthrax after an animal-hide drumming event - New Hampshire and Massachusetts, 2009","secondary_title":"MMWR Morb Mortal Wkly Rep","volume":"59","number":"28","pages":"872-877","section":"872","edition":"7/23/2022","date":"23-07","short_title":"Gastrointestinal anthrax after an animal-hide drumming event - New Hampshire and Massachusetts, 2009","custom_1":"Public Health Articles Noted in the Media","custom_2":"MMWR in the Media","custom_3":"CIDRAP News (July 22, 2010): http://www.cidrap.umn.edu/cidrap/content/bt/anthrax/news/jul2210anthrax.html: : Los Angeles Times (July 23, 2010): http://www.latimes.com/news/health/boostershots/la-heb-anthrax-drums-20100722,0,6211131.story: : United Press International (July 22, 2010): http://www.upi.com/Health_News/2010/07/22/CDC-Woman-gets-GI-anthrax-while-drumming/UPI-22861279848074/","custom_8":"2:30","accession_number":"20651643","abstract":"On December 24, 2009, a woman aged 24 years from New Hampshire was confirmed to have gastrointestinal anthrax on the basis of clinical findings and a Bacillus anthracis blood culture isolate. Her symptoms began on December 5. One day before symptom onset, she had participated in a drumming event at a community organization's building where animal-hide drums of multiple ages and origins were played. This report describes the case and subsequent investigation, which identified 84 persons potentially exposed to anthrax, including those persons at the drumming event and those who lived or worked at the event site. Review of New Hampshire disease surveillance data and clinical microbiology records for periods before and after the event identified no additional anthrax cases. Initial qualitative environmental testing of the event site yielded three positive samples (two from drum heads and one composite sample of three electrical outlets in the main drumming room). Wider, targeted, semi-quantitative environmental testing of the site and additional drums yielded six positive samples (two from one drum and four from environmental locations in the building). These results suggested that aerosolization of spores from drumheads had occurred. All isolates obtained from environmental and drum samples matched the patient's isolate by multiple-locus variable-number tandem repeat analysis using eight loci (MLVA-8). Public health agencies and persons with exposure to animal-hide drums should be aware of the potential, although remote, risk for anthrax exposure associated with these drums.","url":"http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5928a3.htm?s_cid=mm5928a3_w"}
,{"record_number":"15466","reference_type":"Generic","author":"Traxler, R. M. N., T.;Asanishvili, Z.;Geleishvili, M.;Rukhadze, K.;Maghlakelidze, G.;Broladze, M.;Kokhreidze, M.;Maes, E. F.;Reynolds, D.;Salman, M.;Shadomy, S. V.;Rao, S.","year":"2019","title":"Knowledge, attitudes, and practices related to anthrax and animal care: A case-control study in Georgia","secondary_title":"PLoS One","volume":"14","number":"10","pages":"e0224176","edition":"10/19/2019","short_title":"Knowledge, attitudes, and practices related to anthrax and animal care: A case-control study in Georgia","isbn_issn":"1932-6203","custom_1":"CDC Authored Publications","custom_2":"Disease Reservoirs and Vectors","custom_8":"11:44","accession_number":"31626684","abstract":"INTRODUCTION: Anthrax is endemic in Georgia and recent outbreaks prompted a livestock-handler case-control study with a component to evaluate anthrax knowledge, attitudes, and practices (KAP) among livestock handlers or owners. METHODS: Cases were handlers of livestock with confirmed animal anthrax from June 2013-May 2015. Handlers of four matched unaffected animals were selected as controls, two from the same village as the case animal (\"village control\") and two from 3-10 km away (\"area control\"). Descriptive statistics were reported and conditional logistic regression was performed to estimate the magnitude of the association of cases with specific study KAP factors. RESULTS: Cases were more likely male, had lower level college education, less animal care experience, and provided more animal care to their cattle. Cases had lower odds of burying a suddenly dead animal compared to all controls (Odds Ratio [OR]: 0.32, 95% Confidence interval [CI]:0.12, 0.88) and area controls (OR: 0.32, 95% CI: 0.11, 0.91). On an 8-point knowledge scale, cases having an animal with anthrax had a 1.31 times greater knowledge score compared to all controls (95% CI: 1.03, 1.67). Cases had higher odds of ever having human anthrax or knowing another person who had anthrax compared to all controls (OR: 4.56, 95% CI: 1.45, 14.30) and area controls (OR: 7.16, 95% CI: 1.52, 33.80). DISCUSSION: Cases were more knowledgeable of anthrax and had better anthrax prevention practices, but these are likely a result of the case investigation and ring vaccination following the death of their animal. CONCLUSIONS: The findings reveal a low level of knowledge and practices related to anthrax control and prevention, and will guide educational material development to fill these gaps.","notes":"1932-6203:Traxler, Rita M:ORCID: http://orcid.org/0000-0001-7580-4116:Napetvaridze, Tsira:Asanishvili, Zviad:Geleishvili, Marika:Rukhadze, Ketevan:Maghlakelidze, Giorgi:Broladze, Mariam:Kokhreidze, Maka:Maes, Edmond F:Reynolds, Debby:Salman, Mo:Shadomy, Sean V:Rao, Sangeeta:Journal Article:United States:PLoS One. 2019 Oct 18;14(10):e0224176. doi: 10.1371/journal.pone.0224176. eCollection 2019.","url":"https://www.ncbi.nlm.nih.gov/pubmed/31626684","author_address":"Centers for Disease Control and Prevention (CDC), Division of High-Consequence Pathogens and Pathology, National Center for Emerging and Zoonotic Infectious Diseases (NCEZID), Atlanta, Georgia, United States of America.:National Food Agency (NFA) of Ministry of Environmental Protection and Agriculture of Georgia (MEPA), Tbilisi, Georgia.:CDC, Division of Global Health Protection, Center for Global Health, Atlanta, Georgia, United States of America.:Department of Rural Development and Vocational Education (DRDVE) of Georgian Institute of Public Affairs (GIPA), Tbilisi, Georgia.:National Center for Disease Control and Prevention (NCDC), Tbilisi, Georgia.:Laboratory of the Ministry of Agriculture (LMA), Tbilisi, Georgia.:CDC, Global Immunization Division, Center for Global Health, Atlanta, Georgia, United States of America.:Department of Clinical Sciences, Colorado State University, Fort Collins, Colorado, United States of America.:CDC One Health Office, NCEZID, Atlanta, Georgia, United States of America.","database_provider":"NLM","language":"eng","doi":"10.1371/journal.pone.0224176"}
,{"record_number":"16556","reference_type":"Generic","author":"Soroka, S. D. S., J. M.,  Semenova, V. A.,  Li, H.,  Foster, L.,  Quinn, C. P.,","year":"2010","title":"A two-stage, multilevel quality control system for serological assays in anthrax vaccine clinical trials","secondary_title":"Biologicals","edition":"9/30/2010","date":"26-09","short_title":"A two-stage, multilevel quality control system for serological assays in anthrax vaccine clinical trials","isbn_issn":"1095-8320 (Electronic): 1045-1056 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"2:40","accession_number":"20875951","abstract":"A two-stage, multilevel assay quality control (QC) system was designed and implemented for two high stringency QC anthrax serological assays; a quantitative anti-PA IgG enzyme-linked immunosorbent assay (ELISA) and an anthrax lethal toxin neutralization activity (TNA) assay. The QC system and the assays were applied for the congressionally mandated Centers for Disease Control and Prevention (CDC) Phase 4 human clinical trial of anthrax vaccine adsorbed (AVA, BioThrax). A total of 57,284 human serum samples were evaluated by anti-PA enzyme-linked immunosorbent assay (ELISA) and 11,685 samples by anthrax lethal toxin neutralization activity (TNA) assay. The QC system demonstrated overall sample acceptance rates of 86% for ELISA and 90% for the TNA assays respectively. Monitoring of multiple assay and test sample variables showed no significant long term trends or degradation in any of the critical assay reagents or reportable values for both assays. Assay quality control data establish the functionality of the quality control system and demonstrates the reliability of the serological data generated using these assays.","notes":"Biologicals : journal of the International Association of Biological Standardization: Biologicals. 2010 Sep 26.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v2iss40_Authors_Soroka.pdf","author_address":"Microbial Pathogenesis and Immune Response (MPIR) Laboratory, Meningitis and Vaccine Preventable Diseases Branch, Division of Bacterial Diseases, National Center for Immunization and Respiratory Diseases, Centers for Disease Control and Prevention (CDC), Atlanta, GA, United States.","database_provider":"NLM","language":"Eng","doi":"10.1016/j.biologicals.2010.09.001"}
,{"record_number":"16685","reference_type":"Journal Article","author":"Aceng, F. L.;Ario, A. R.;Alitubeera, P. H.;Neckyon, M. M.;Kadobera, D.;Sekamatte, M.;Okethwangu, D.;Bulage, L.;Harris, J. R.;Nguma, W.;Ndumu, D. B.;Buule, J.;Nyakarahuka, L.;Zhu, B. P.","year":"2021","title":"Cutaneous anthrax associated with handling carcasses of animals that died suddenly of unknown cause: Arua District, Uganda, January 2015-August 2017","secondary_title":"PLoS Negl Trop Dis","volume":"15","number":"8","pages":"e0009645","edition":"8/24/2021","date":"Aug","short_title":"Cutaneous anthrax associated with handling carcasses of animals that died suddenly of unknown cause: Arua District, Uganda, January 2015-August 2017","isbn_issn":"1935-2727 (Print):1935-2727","custom_1":"CDC Authored Publications","custom_2":"Zoonotic and Vectorborne Diseases","custom_8":"13:32","accession_number":"34424893","abstract":"BACKGROUND: Anthrax is a zoonotic disease that can be transmitted to humans from infected animals. During May-June 2017, three persons with probable cutaneous anthrax were reported in Arua District, Uganda; one died. All had recently handled carcasses of livestock that died suddenly and a skin lesion from a deceased person tested positive by PCR for Bacillus anthracis. During July, a bull in the same community died suddenly and the blood sample tested positive by PCR for Bacillus anthracis. The aim of this investigation was to establish the scope of the problem, identify exposures associated with illness, and recommend evidence-based control measures. METHODS: A probable case was defined as acute onset of a papulo-vesicular skin lesion subsequently forming an eschar in a resident of Arua District during January 2015-August 2017. A confirmed case was a probable case with a skin sample testing positive by polymerase chain reaction (PCR) for B. anthracis. Cases were identified by medical record review and active community search. In a case-control study, exposures between case-patients and frequency- and village-matched asymptomatic controls were compared. Key animal health staff were interviewed to learn about livestock deaths. RESULTS: There were 68 case-patients (67 probable, 1 confirmed), and 2 deaths identified. Cases occurred throughout the three-year period, peaking during dry seasons. All cases occurred following sudden livestock deaths in the villages. Case-patients came from two neighboring sub-counties: Rigbo (attack rate (AR) = 21.9/10,000 population) and Rhino Camp (AR = 1.9/10,000). Males (AR = 24.9/10,000) were more affected than females (AR = 0.7/10,000). Persons aged 30-39 years (AR = 40.1/10,000 population) were most affected. Among all cases and 136 controls, skinning (ORM-H = 5.0, 95%CI: 2.3-11), butchering (ORM-H = 22, 95%CI: 5.5-89), and carrying the carcass of livestock that died suddenly (ORM-H = 6.9, 95%CI: 3.0-16) were associated with illness. CONCLUSIONS: Exposure to carcasses of animals that died suddenly was a likely risk factor for cutaneous anthrax in Arua District during 2015-2017. The recommendations are investigation of anthrax burden in livestock, prevention of animal infections through vaccinations, safe disposal of the carcasses, public education on risk factors for infection and prompt treatment of illness following exposure to animals that died suddenly.","notes":"1935-2735:Aceng, Freda Loy:Orcid: 0000-0003-3029-8947:Ario, Alex Riolexus:Orcid: 0000-0002-3560-1952:Alitubeera, Phoebe Hilda:Orcid: 0000-0003-2406-6509:Neckyon, Mukasa Matinda:Kadobera, Daniel:Sekamatte, Musa:Okethwangu, Denis:Orcid: 0000-0001-8421-6359:Bulage, Lilian:Harris, Julie R:Nguma, Willy:Ndumu, Deo Birungi:Orcid: 0000-0001-8986-2050:Buule, Joshua:Orcid: 0000-0002-1561-4908:Nyakarahuka, Luke:Orcid: 0000-0002-2944-9157:Zhu, Bao-Ping:Orcid: 0000-0003-0065-0153:Journal Article:PLoS Negl Trop Dis. 2021 Aug 23;15(8):e0009645. doi: 10.1371/journal.pntd.0009645. eCollection 2021 Aug.","url":"https://pubmed.ncbi.nlm.nih.gov/34424893","author_address":"Uganda Public Health Fellowship Program, Kampala, Uganda.:Ministry of Health, Kampala, Uganda.:Arua District Local Government, Arua, Uganda.:Zoonotic Disease Coordination Office, Kampala, Uganda.:African Field Epidemiology Network, Kampala, Uganda.:Workforce and Institute Development Branch, Division of Global Health Protection, Center for Global Health, US Centers for Disease Control and Prevention, Atlanta, Georgia, United States of America.:Ministry of Agriculture, Animal Industries and Fisheries, Entebbe, Uganda.:Uganda Virus Research Institute, Entebbe, Uganda.:US Centers for Disease Control and Prevention, Kampala, Uganda.","language":"eng","doi":"10.1371/journal.pntd.0009645"}
,{"record_number":"17183","reference_type":"Journal Article","author":"Abayneh, T.;Getachew, B.;Gelaye, E.;Traxler, R.;Vieira, A. R.","year":"2021","title":"Viability evaluation of freeze dried and suspension anthrax spore vaccine formulations stored at different temperatures","secondary_title":"Vaccine","edition":"9/21/2021","date":"15-09","short_title":"Viability evaluation of freeze dried and suspension anthrax spore vaccine formulations stored at different temperatures","isbn_issn":"0264-410x","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"13:36","accession_number":"34538525","keywords":"Anthrax:Freeze dried vaccine:Viability evaluation:competing financial interests or personal relationships that could have appeared to:influence the work reported in this paper.","abstract":"Anthrax is endemic in Ethiopia with sporadic outbreaks despite the regular vaccination of domestic livestock. This has raised concerns on the effectiveness of the vaccination strategy which may be associated with breaches in the vaccine cold chain maintenance. This study was aimed at demonstrating the tolerance of anthrax vaccine to cold chain breaches through evaluation of viable spore counts expressed as colony forming units per mL (CFU/mL) of freeze-dried and suspension anthrax vaccines stored at 5 °C, 20 °C and 37 °C for up to 6 months. Both vaccine formulations maintained above the recommended minimum required titre (2 × 10(6) culturable spores per dose for cattle, buffaloes and horses, and not <1 × 10(6) for sheep and goats) for up to 6 months at 5 °C storage. In storage at 20 °C, the viability of freeze-dried anthrax vaccine maintained the minimum required titre up to 6 months while up to 90 days in case of the suspension formulation. Both types of vaccine formulations maintained the minimum titre per dose for up to 30 days at 37 °C storage. Generally, both vaccine formulations showed similar trends in titre fall in all of the three storage temperatures (5 °C, 20 °C and 37 °C) as observed in the almost linearly overlapping 95% confidence intervals (CI) up to day 90 at 5 °C and 20 °C storages while up to day 30 at 37 °C storage. However, a significant (P < 0.05) drop in titre was observed after day 90 for storages at 5 °C and 20 °C, and after day 30 for 37 °C storage as observed in the non overlapping 95% CI from the average titres of previous time points. This study showed that if temperature excursion occurs above the recommended temperature range (4-8 °C) during storage or transport, the vaccine should remain effective and can still be used in vaccination programs.","notes":"1873-2518:Abayneh, T:Getachew, B:Gelaye, E:Traxler, R:Vieira, A R:Journal Article:Netherlands:Vaccine. 2021 Sep 15:S0264-410X(21)01202-0. doi: 10.1016/j.vaccine.2021.09.023.","url":"https://pubmed.ncbi.nlm.nih.gov/34538525","author_address":"National Veterinary Institute, P.O.Box 19, Bishoftu/Debrezeit, Ethiopia. Electronic address: takeletefera99@gmail.com.:National Veterinary Institute, P.O.Box 19, Bishoftu/Debrezeit, Ethiopia.:Centers for Disease Control and Prevention, Atlanta, GA, USA.","language":"eng","doi":"10.1016/j.vaccine.2021.09.023"}
,{"record_number":"18498","reference_type":"Generic","author":"Kuklenyik, Z. B., A. E.,  Lins, R.,  Quinn, C. P.,  Gallegos-Candela, M.,  Woolfitt, A.,  Pirkle, J. L.,  Barr, J. R.,","year":"2011","title":"Comparison of MALDI-TOF-MS and HPLC-ESI-MS/MS for endopeptidase activity-based quantification of anthrax lethal factor in serum","secondary_title":"Anal Chem","edition":"2/10/2011","date":"2-Aug","short_title":"Comparison of MALDI-TOF-MS and HPLC-ESI-MS/MS for endopeptidase activity-based quantification of anthrax lethal factor in serum","isbn_issn":"1520-6882 (Electronic): 0003-2700 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"3:07","accession_number":"21302970","abstract":"Diagnosing and treating anthrax at the earliest stage of disease is critical. We developed a method to diagnose anthrax at early stages of infection by detecting anthrax lethal factor (LF) at the attomol/mL level in plasma or serum. This method uses antibody capture and quantification of LF endoproteinase activity by isotope dilution matrix-assisted laser-desorption ionization (MALDI) time-of-flight (TOF) mass spectrometry (MS). Many public health laboratories do not use MALDI-TOF-MS; thus, we have adapted the LF method for detection by electrospray ionization (ESI) tandem MS (MS/MS), which allowed comparison of both MS platforms for LF quantification. Calibration curves were linear from 0.05-2.5 ng/mL when measured after 2 h and from 0.005-1.0 ng/mL after 18 h incubation time. The limit of detection was 0.005 ng/mL using a 200 muL sample. The coefficient of variation for quality control samples was 6-12% for both MS platforms. Samples used to perform cross-validation included 158 serum samples from a study in rabbits exposed to anthrax spores by inhalation. Some were treated with anthrax immune globulin before exposure. Concentrations measured by ESI-MS/MS matched those by MALDI-TOF-MS with p = 0.99 (r(2) = 0.997) and -0.25% mean relative difference (+/-9% standard deviation). This study shows that isotope dilution MALDI-TOF-MS is a robust and precise quantitative MS platform.","notes":"Analytical chemistry: Anal Chem. 2011 Feb 8.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v3iss7_Authors_Kuklenyik.pdf","author_address":"National Center for Environmental Health, Centers for Disease Control and Prevention , 4770 Buford Hwy, NE Atlanta, Georgia 30341, United States.","database_provider":"NLM","language":"Eng","doi":"10.1021/ac1030144"}
,{"record_number":"18890","reference_type":"Generic","author":"Saile, E. B., G. J.,  Buskas, T.,  Carlson, R. W.,  Kannenberg, E. L.,  Barr, J. R.,  Boyer, A. E.,  Gallegos-Candela, M.,  Quinn, C. P.,","year":"2011","title":"Antibody responses to a spore carbohydrate antigen as a marker of non-fatal inhalation anthrax in Rhesus macaques","secondary_title":"Clin Vaccine Immunol","edition":"3/11/2011","date":"3-Sep","short_title":"Antibody responses to a spore carbohydrate antigen as a marker of non-fatal inhalation anthrax in Rhesus macaques","isbn_issn":"1556-679X (Electronic): 1556-679X (Linking)","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"3:11","accession_number":"21389148","abstract":"The Bacillus anthracis exosporium protein BclA contains an O-linked antigenic tetrasaccharide whose terminal sugar is known as anthrose (3). We hypothesized that serologic responses to anthrose may have diagnostic value in confirming exposure to aerosolized B. anthracis. We evaluated the serologic responses to a synthetic anthrose-containing trisaccharide (ATS) in a group of five Rhesus macaques (RM) that survived inhalation anthrax following exposure to B. anthracis Ames spores. Two of five animals were treated with ciprofloxacin starting at 48 (RM2, RM3) hours and two at 72 hours (RM4, RM5) post-exposure; one animal was untreated (RM1). Infection was confirmed by blood culture and detection of anthrax toxin lethal factor (LF) in plasma. Anti-ATS IgG responses were determined at 14, 21, 28, and 35 days post-exposure with pre-exposure serum as a control. All animals, irrespective of ciprofloxacin treatment, mounted a specific, measurable anti-ATS IgG response. The earliest detectable responses were on day 14 (RM1, RM2, RM5) and at days 21 (RM4) and 28 (RM3). Specificity of the anti-ATS responses was demonstrated by competitive inhibition enzyme immunoassay (CIEIA) in which a two-fold excess of carbohydrate (wt/wt) in a bovine serum albumin (BSA) conjugate of the oligosaccharide (ATS-BSA) effected >94% inhibition, whereas a structural analog lacking the 3-hydroxy-3-methyl-butyryl moiety at the C-4\" of the anthrosyl residue had no inhibition activity. These data suggest that anti-ATS antibody responses may be used to identify aerosol exposure to B. anthracis spores. The anti-ATS antibody responses were detectable during administration of cipropfloxacin.","notes":"Clinical and vaccine immunology : CVI: Clin Vaccine Immunol. 2011 Mar 9.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v3iss11_Authors_Saile.pdf","author_address":"Centers for Disease Control and Prevention, National Center for Immunization and Respiratory Diseases, Division of Bacterial Diseases, 1600 Clifton Rd., MS D-11, Atlanta, GA 30333; Complex Carbohydrate Research Center, University of Georgia, 315 Riverbend Road, Athens, GA 30602; Centers for Disease Control and Prevention, National Center for Environmental Health, 4770 Buford Highway NE, Atlanta, GA 30341; Department of Microbiology and Biotechnology, University of Tubingen, D-72076 Tubingen, Germany; Battelle Memorial Institute, Centers for Disease Control and Prevention, 4770 Buford Highway NE, Atlanta, Georgia 30341.","database_provider":"NLM","language":"Eng","doi":"10.1128/cvi.00475-10"}
,{"record_number":"18898","reference_type":"Generic","author":"Tropper, J. A., C.,  Vinion, C.,  Sapkota, S.,","year":"2011","title":"Tracking antimicrobials dispensed during an anthrax attack: a case study from the New Hampshire anthrax exercise","secondary_title":"J Emerg Manag","volume":"9","number":"1","pages":"65-69","short_title":"Tracking antimicrobials dispensed during an anthrax attack: a case study from the New Hampshire anthrax exercise","custom_1":"CDC Authored Publications","custom_2":"Informatics","custom_4":"http://docexpress.cdc.gov/illiad/illiad.dll?Action=10&Form=30&rft.issn=1543-5865&rft.volume=9&rft.genre=article&rft.auinit=J&rft.pub=Prime+National+Pub.+Corp.&rft.issue=1&rft.doi=10.5055%2Fjem.2011.0047&rft.place=Weston%2C+MA&rft.title=Journal+of+emergency+management&id=10.5055%2Fjem.2011.0047&linktype=openurl&rft.atitle=Tracking+antimicrobials+dispensed+during+an+anthrax+attack&rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Aarticle&rft.auinit1=J&rft.date=2011&url_ver=Z39.88-2004&rft.aulast=Tropper&rft.epage=69&rft.spage=65&rfr_id=CDC:ScienceClips(Via+SFX)","custom_8":"3:11","abstract":"The Countermeasure and Response Administration (CRA) system is a Centers for Disease Control and Prevention informatics application developed to track countermeasures, including medical interventions (eg, vaccinations and pharmaceuticals) and nonmedical interventions (eg, patient isolation, quarantine, and personal protective equipment), administered during a public health response. This case study follows the use of CRA as a supplement to paper-based processes during an exercise in which antimicrobials dispensed to individual exposed persons were captured after a simulated bioterrorist attack of anthrax spores. The exercise was conducted by the New Hampshire Division of Public Health Services on April 14, 2007. Automated systems like CRA can track when medications are dispensed. The data can then be used for performance metrics, statistics, and in locating victims for follow-up study. Given that this case study was limited to a single location in a relatively rural setting, the authors concluded that more study is needed to compare the feasibility of using an automated system rather than paper-based processes for effectively managing a very large-scale urgent public health response.","doi":"10.5055/jem.2011.0047"}
,{"record_number":"18984","reference_type":"Generic","author":"Lembo, T. H., K.,  Auty, H.,  Beesley, C. A.,  Bessell, P.,  Packer, C.,  Halliday, J.,  Fyumagwa, R.,  Hoare, R.,  Ernest, E.,  Mentzel, C.,  Mlengeya, T.,  Stamey, K.,  Wilkins, P. P.,  Cleaveland, S.,","year":"2011","title":"Serologic surveillance of anthrax in the Serengeti ecosystem, Tanzania, 1996-2009","secondary_title":"Emerg Infect Dis","volume":"17","number":"3","pages":"387-394","edition":"3/12/2011","date":"Mar","short_title":"Serologic surveillance of anthrax in the Serengeti ecosystem, Tanzania, 1996-2009","isbn_issn":"1080-6059 (Electronic): 1080-6040 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Zoonoses","custom_8":"3:12 GH","accession_number":"21392428","abstract":"Bacillus anthracis, the bacterium that causes anthrax, is responsible for varying death rates among animal species. Difficulties in case detection, hazardous or inaccessible carcasses, and misdiagnosis hinder surveillance. Using case reports and a new serologic assay that enables multispecies comparisons, we examined exposure to and illness caused by B. anthracis in different species in the Serengeti ecosystem in Tanzania during 1996-2009 and the utility of serosurveillance. High seroprevalence among carnivores suggested regular nonfatal exposure. Seropositive wildebeest and buffalo showed that infection was not invariably fatal among herbivores, whereas absence of seropositivity in zebras and frequent detection of fatal cases indicated high susceptibility. Exposure patterns in dogs reflected known patterns of endemicity and provided new information about anthrax in the ecosystem, which indicated the potential of dogs as indicator species. Serosurveillance is a valuable tool for monitoring and detecting anthrax and may shed light on mechanisms responsible for species-specific variability in exposure, susceptibility, and mortality rates.","notes":"Emerging infectious diseases: Emerg Infect Dis. 2011 Mar;17(3):387-394.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v3iss12_Authors_Lembo.pdf","author_address":"University of Glasgow, Glasgow, Scotland (T. Lembo, K. Hampson, H. Auty, P. Bessell, S. Cleaveland); Lincoln Park Zoo, Chicago, Illinois, USA (T. Lembo); Centers for Disease Control and Prevention, Atlanta, Georgia, USA (C.A. Beesley, K. Stamey, P.P. Wilkins); University of Minnesota, St. Paul, Minnesota, USA (C. Packer); University of Edinburgh, Edinburgh, Scotland (J. Halliday); Tanzania Wildlife Research Institute, Arusha, Tanzania (R. Fyumagwa, R. Hoare, E. Ernest); Endangered Wildlife Trust.","database_provider":"NLM","language":"Eng"}
,{"record_number":"20236","reference_type":"Generic","author":"Duncan, K. O. S., T. L.,","year":"2011","title":"Primary cutaneous infection with Bacillus megaterium mimicking cutaneous anthrax","secondary_title":"J Am Acad Dermatol","volume":"65","number":"2","pages":"e60-61","edition":"7/19/2011","date":"Aug","short_title":"Primary cutaneous infection with Bacillus megaterium mimicking cutaneous anthrax","isbn_issn":"1097-6787 (Electronic): 0190-9622 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Communicable Diseases","custom_8":"3:32","accession_number":"21763557","notes":"Duncan, Karynne O: Smith, Theresa L: United States: Journal of the American Academy of Dermatology: J Am Acad Dermatol. 2011 Aug;65(2):e60-1.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v3iss32_Authors_Duncan.pdf","author_address":"Private Practice, Saint Helena, California.","database_provider":"NLM","language":"eng","doi":"10.1016/j.jaad.2011.02.024"}
,{"record_number":"20339","reference_type":"Generic","author":"Steelfisher, G. B., R.,  Ross, L. J.,  Collins, B. C.,  Ben-Porath, E. N.,  Bekheit, M. M.,  Mailhot, J. R.,","year":"2011","title":"Public response to an anthrax attack: reactions to mass prophylaxis in a scenario involving inhalation anthrax from an unidentified source","secondary_title":"Biosecur Bioterror","edition":"8/9/2011","date":"8-May","short_title":"Public response to an anthrax attack: reactions to mass prophylaxis in a scenario involving inhalation anthrax from an unidentified source","isbn_issn":"1557-850X (Electronic): 1538-7135 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"3:33","accession_number":"21819225","label":"CDC Authored Publications","abstract":"An attack with Bacillus anthracis (\"anthrax\") is a known threat to the United States. When weaponized, it can cause inhalation anthrax, the deadliest form of the disease. Due to the rapid course of inhalation anthrax, delays in initiation of antibiotics may decrease survival chances. Because a rapid response would require cooperation from the public, there is a need to understand the public's response to possible mass dispensing programs. To examine the public's response to a mass prophylaxis program, this study used a nationally representative poll of 1,092 adults, supplemented by a targeted focus on 3 metropolitan areas where anthrax attacks occurred in 2001: New York City (n=517), Washington, DC (n=509), and Trenton/Mercer County, NJ (n=507). The poll was built around a \"worst-case scenario\" in which cases of inhalation anthrax are discovered without an identified source and the entire population of a city or town is asked to receive antibiotic prophylaxis within a 48-hour period. Findings from this poll provide important signs of public willingness to comply with public health recommendations for obtaining antibiotics from a dispensing site, although they also indicate that public health officials may face several challenges to compliance, including misinformation about the contagiousness of inhalation anthrax; fears about personal safety in crowds; distrust of government agencies to provide sufficient, safe, and effective medicine; and hesitation about ingesting antibiotic pills after receiving them. In general, people living in areas where anthrax attacks occurred in 2001 had responses similar to those of the nation as a whole.","notes":"Biosecurity and bioterrorism : biodefense strategy, practice, and science: Biosecur Bioterror. 2011 Aug 5.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v3iss33_Authors_Steelfisher.pdf","author_address":"Gillian K. SteelFisher, PhD, MSc, is a Research Scientist and Assistant Director, Harvard Opinion Research Program ; Mark M. Bekheit, JD, is a Research Assistant; and Johanna R. Mailhot, MSc, is a Research Specialist; all are in the Harvard School of Public Health, Boston, Massachusetts. Robert J. Blendon, ScD, is Professor of Health Policy and Political Analysis, Harvard School of Public Health and Harvard Kennedy School of Government, Boston and Cambridge, MA. Laura J. Ross, MPH, is Health Communication Specialist, Centers for Disease Control and Prevention, Office of Public Health Preparedness and Response, Division of Strategic National Stockpile, Atlanta, Georgia . Blanche C. Collins, PhD, MHSE, is Health Education Specialist, Division of STD Prevention, Centers for Disease Control and Prevention, Atlanta. Eran N. Ben-Porath, PhD, is Research Director, Social Science Research Solutions, Media, Pennsylvania. The findings and conclusions in this report are those of the authors and do not necessarily represent the official position of the Harvard School of Public Health or the Centers for Disease Control and Prevention.","database_provider":"NLM","language":"Eng","doi":"10.1089/bsp.2011.0005"}
,{"record_number":"20705","reference_type":"Generic","author":"Boyer, A. E. Q., C. P.,  Beesley, C. A.,  Gallegos-Candela, M.,  Marston, C. K.,  Cronin, L. X.,  Lins, R. C.,  Stoddard, R. A.,  Li, H.,  Schiffer, J.,  Hossain, M. J.,  Chakraborty, A.,  Rahman, M.,  Luby, S. P.,  Shieh, W. J.,  Zaki, S.,  Barr, J. R.,  Hoffmaster, A. R.,","year":"2011","title":"Lethal factor toxemia and anti-protective antigen antibody activity in naturally acquired cutaneous anthrax","secondary_title":"J Infect Dis","edition":"9/13/2011","date":"9-Sep","short_title":"Lethal factor toxemia and anti-protective antigen antibody activity in naturally acquired cutaneous anthrax","isbn_issn":"1537-6613 (Electronic): 0022-1899 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Communicable Diseases","custom_8":"3:38 GH","accession_number":"21908727","abstract":"Cutaneous anthrax outbreaks occurred in Bangladesh from August to October 2009. As part of the epidemiological response and to confirm anthrax diagnoses, serum samples were collected from suspected case patients with observed cutaneous lesions. Anthrax lethal factor (LF), anti-protective antigen (anti-PA) immunoglobulin G (IgG), and anthrax lethal toxin neutralization activity (TNA) levels were determined in acute and convalescent serum of 26 case patients with suspected cutaneous anthrax from the first and largest of these outbreaks. LF (0.005-1.264 ng/mL) was detected in acute serum from 18 of 26 individuals. Anti-PA IgG and TNA were detected in sera from the same 18 individuals and ranged from 10.0 to 679.5 mcg/mL and 27 to 593 units, respectively. Seroconversion to serum anti-PA and TNA was found only in case patients with measurable toxemia. This is the first report of quantitative analysis of serum LF in cutaneous anthrax and the first to associate acute stage toxemia with subsequent antitoxin antibody responses.","notes":"The Journal of infectious diseases: J Infect Dis. 2011 Sep 9.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v3iss38_Authors_Boyer.pdf","author_address":"Centers for Disease Control and Prevention.","database_provider":"NLM","language":"Eng","doi":"10.1093/infdis/jir543"}
,{"record_number":"21711","reference_type":"Generic","author":"Marston, C. K. A., C. A.,  Beaudry, J.,  Price, E. P.,  Wolken, S. R.,  Pearson, T.,  Keim, P.,  Hoffmaster, A. R.,","year":"2011","title":"Molecular epidemiology of anthrax cases associated with recreational use of animal hides and yarn in the United States","secondary_title":"PLoS One","volume":"6","number":"12","pages":"e28274","edition":"12/17/2011","short_title":"Molecular epidemiology of anthrax cases associated with recreational use of animal hides and yarn in the United States","isbn_issn":"1932-6203 (Electronic): 1932-6203 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Genetics and Genomics","custom_8":"4:1 GH","accession_number":"22174783","abstract":"To determine potential links between the clinical isolate to animal products and their geographic origin, we genotyped (MLVA-8, MVLA-15, and canSNP analysis) 80 environmental and 12 clinical isolates and 2 clinical specimens from five cases of anthrax (California in 1976 [n = 1], New York in 2006 [n = 1], Connecticut in 2007 [n = 2], and New Hampshire in 2009[n = 1]) resulting from recreational handling of animal products. For the California case, four clinical isolates were identified as MLVA-8 genotype (GT) 76 and in the canSNP A.Br.Vollum lineage, which is consistent with the Pakistani origin of the yarn. Twenty eight of the California isolates were in the A.Br.Vollum canSNP lineage and one isolate was in the A.Br. 003/004 canSNP sub-group. All 52 isolates and both clinical specimens related to the New York and Connecticut cases were MLVA-8 GT 1. The animal products associated with the NY and CT cases were believed to originate from West Africa, but no isolates from this region are available to be genotyped for comparison. All isolates associated with the New Hampshire case were identical and had a new genotype (GT 149). Isolates from the NY, CT and NH cases diverge from the established canSNP phylogeny near the base of the A.Br.011/009. This report illustrates the power of the current genotyping methods and the dramatically different epidemiological conditions that can lead to infections (i.e., contamination by a single genotype versus widespread contamination of numerous genotypes). These cases illustrate the need to acquire and genotype global isolates so that accurate assignments can be made about isolate origins.","notes":"Marston, Chung K: Allen, Christina A: Beaudry, Jodi: Price, Erin P: Wolken, Spenser R: Pearson, Talima: Keim, Paul: Hoffmaster, Alex R: United States: PloS one: PLoS One. 2011;6(12):e28274. Epub 2011 Dec 9.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v4iss1_Authors_Marston.pdf","author_address":"Bacterial Special Pathogens Branch, Division of High-Consequence Pathogens and Pathology, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, United States of America.","database_provider":"NLM","language":"eng","doi":"10.1371/journal.pone.0028274"}
,{"record_number":"21762","reference_type":"Generic","author":"Stewart, B. Z., Y.,  Rose Jr, C. E.,  Tokars, J. I.,  Martin, S. W.,  Franzke, L. H.,  McNeil, M. M.,","year":"2012","title":"Health-related quality of life in the anthrax vaccination program for workers in the laboratory response network","secondary_title":"Vaccine","edition":"1/11/2012","date":"1-Jun","short_title":"Health-related quality of life in the anthrax vaccination program for workers in the laboratory response network","alternate_title":"Vaccine","isbn_issn":"1873-2518 (Electronic): 0264-410X (Linking)","custom_1":"CDC Authored Publications","custom_2":"Immunity and Immunization","custom_8":"4:02","accession_number":"22230591","abstract":"BACKGROUND: In 2002 CDC initiated the Anthrax Vaccination Program (AVP) to provide voluntary pre-exposure vaccination with Anthrax Vaccine Adsorbed (AVA) for persons at high risk of exposure to Bacillus anthracis spores. There has been concern that AVA could be associated with long term impairment of mental and/or physical health. OBJECTIVES: To ascertain whether physical and mental functional status, as measured by the SF-36v2 health survey (Medical Outcomes Trust, Boston, MA), of AVA recipients and controls changed differently over time. METHODS: We enrolled 437 exposed (received AVA) and 139 control subjects. The exposed group received AVA under then-current Advisory Committee on Immunization Practices (ACIP) recommendations. SF-36v2 surveys were completed at 0, 12, and 30 months. SF-36v2 physical and mental scores both range from 0 to 100 with an estimated national average of 50 points. RESULTS: For physical scores, the average change from baseline was -0.53 for exposed vs. -0.67 for controls at 12 months (p=0.80) and -1.09 for exposed vs. -1.97 for controls at 30 months (p=0.23). For mental scores, the average change from baseline was -1.50 for exposed vs. -1.64 for controls at 12 months (p=0.86) and -2.11 for exposed vs. -0.24 for controls at 30 months (p=0.06). In multivariable analysis, the difference in mental score change between exposed vs. controls at 30 months was less pronounced (p=0.37) but other findings were similar to univariate analyses. CONCLUSIONS: These results do not favor an association between receipt of AVA and an altered health related quality of life over a 30-month period.","notes":"Vaccine. 2012 Jan 6.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v4iss2_Authors_Stewart.pdf","author_address":"Immunization Safety Office, Division of Healthcare Quality Promotion, National Center for Emerging and Zoonotic Infectious Diseases, Atlanta, GA, United States; Centers for Disease Control and Prevention, Atlanta, GA, United States.","database_provider":"NLM","language":"Eng","doi":"10.1016/j.vaccine.2011.12.128"}
,{"record_number":"22042","reference_type":"Generic","author":"Vieira, A. R. S., J. S., Traxler, R. M., Hendricks, K. A., Kadzik, M. E., Marston, C. K., Kolton, C. B., Stoddard, R. A., Hoffmaster, A. R., Bower, W. A., Walke, H. T.,","year":"2017","title":"Enhancing surveillance and diagnostics in anthrax-endemic countries","secondary_title":"Emerg Infect Dis","volume":"23","number":"13","edition":"11/21/2017","date":"Dec","short_title":"Enhancing surveillance and diagnostics in anthrax-endemic countries","alternate_title":"Emerging infectious diseases","isbn_issn":"1080-6040","custom_1":"CDC Authored Publications","custom_2":"Global Health","custom_8":"10:06","accession_number":"29155651","keywords":"Bacillus anthracis:Bangladesh:Ethiopia:Georgia:Ghana:India:anthrax:bacteria:bioterrorism and preparedness:diagnostics:endemic:enteric infections:global health security:outbreak response:respiratory infections:surveillance:zoonoses","abstract":"Naturally occurring anthrax disproportionately affects the health and economic welfare of poor, rural communities in anthrax-endemic countries. However, many of these countries have limited anthrax prevention and control programs. Effective prevention of anthrax outbreaks among humans is accomplished through routine livestock vaccination programs and prompt response to animal outbreaks. The Centers for Disease Control and Prevention uses a 2-phase framework when providing technical assistance to partners in anthrax-endemic countries. The first phase assesses and identifies areas for improvement in existing human and animal surveillance, laboratory diagnostics, and outbreak response. The second phase provides steps to implement improvements to these areas. We describe examples of implementing this framework in anthrax-endemic countries. These activities are at varying stages of completion; however, the public health impact of these initiatives has been encouraging. The anthrax framework can be extended to other zoonotic diseases to build on these efforts, improve human and animal health, and enhance global health security.","notes":"1080-6059:Vieira, Antonio R:Salzer, Johanna S:Traxler, Rita M:Hendricks, Katherine A:Kadzik, Melissa E:Marston, Chung K:Kolton, Cari B:Stoddard, Robyn A:Hoffmaster, Alex R:Bower, William A:Walke, Henry T:Journal Article:United States:Emerg Infect Dis. 2017 Dec;23(13). doi: 10.3201/eid2313.170431.","url":"https://www.ncbi.nlm.nih.gov/pubmed/29155651","database_provider":"NLM","language":"eng","doi":"10.3201/eid2313.170431"}
,{"record_number":"22760","reference_type":"Generic","author":"Weiner, Z. P. B., A. E.,  Gallegos-Candela, M.,  Cardani, A. N.,  Barr, J. R.,  Glomski, I. J.,","year":"2012","title":"Debridement increases survival in a mouse model of subcutaneous anthrax","secondary_title":"PLoS One","volume":"7","number":"2","pages":"e30201","edition":"3/7/2012","short_title":"Debridement increases survival in a mouse model of subcutaneous anthrax","alternate_title":"PloS one","isbn_issn":"1932-6203 (Electronic): 1932-6203 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"4:12","accession_number":"22393351","abstract":"Anthrax is caused by infection with Bacillus anthracis, a spore-forming Gram-positive bacterium. A major virulence factor for B. anthracis is an immunomodulatory tripartite exotoxin that has been reported to alter immune cell chemotaxis and activation. It has been proposed that B. anthracis infections initiate through entry of spores into the regional draining lymph nodes where they germinate, grow, and disseminate systemically via the efferent lymphatics. If this model holds true, it would be predicted that surgical removal of infected tissues, debridement, would have little effect on the systemic dissemination of bacteria. This model was tested through the development of a mouse debridement model. It was found that removal of the site of subcutaneous infection in the ear increased the likelihood of survival and reduced the quantity of spores in the draining cervical lymph nodes (cLN). At the time of debridement 12 hours post-injection measurable levels of exotoxins were present in the ear, cLN, and serum, yet leukocytes within the cLN were activated; countering the concept that exotoxins inhibit the early inflammatory response to promote bacterial growth. We conclude that the initial entry of spores into the draining lymph node of cutaneous infections alone is not sufficient to cause systemic disease and that debridement should be considered as an adjunct to antibiotic therapy.","notes":"Weiner, Zachary P: Boyer, Anne E: Gallegos-Candela, Maribel: Cardani, Amber N: Barr, John R: Glomski, Ian J: United States: PLoS One. 2012;7(2):e30201. Epub 2012 Feb 29.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v4iss12_Authors_Weiner.pdf","author_address":"Department of Microbiology, University of Virginia, Charlottesville, Virginia, United States of America.","database_provider":"NLM","language":"eng","doi":"10.1371/journal.pone.0030201"}
,{"record_number":"23410","reference_type":"Generic","author":"Ngundi, M. M. M., B. D.,  Little, S. F.,  Quinn, C. P.,  Corbett, C. R.,  Brady, R. A.,  Burns, D. L.,","year":"2012","title":"Analysis of defined combinations of monoclonal antibodies in anthrax toxin neutralization assays and their synergistic action","secondary_title":"Clin Vaccine Immunol","volume":"19","number":"5","pages":"731-739","edition":"3/24/2012","date":"May","short_title":"Analysis of defined combinations of monoclonal antibodies in anthrax toxin neutralization assays and their synergistic action","alternate_title":"Clinical and vaccine immunology : CVI","isbn_issn":"1556-679X (Electronic): 1556-679X (Linking)","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"4:21","accession_number":"22441391","abstract":"Antibodies against the protective antigen (PA) component of anthrax toxin play an important role in protection against disease caused by Bacillus anthracis. In this study, we examined defined combinations of PA-specific monoclonal antibodies for their ability to neutralize anthrax toxin in cell culture assays. We observed additive, synergistic, and antagonistic effects of the antibodies depending on the specific antibody combination examined and the specific assay used. Synergistic toxin-neutralizing antibody interactions were examined in more detail. We found that one mechanism that can lead to antibody synergy is the bridging of PA monomers by one antibody, with resultant bivalent binding of the second antibody. These results may aid in optimal design of new vaccines and antibody therapies against anthrax.","notes":"Ngundi, Miriam M: Meade, Bruce D: Little, Stephen F: Quinn, Conrad P: Corbett, Cindi R: Brady, Rebecca A: Burns, Drusilla L: United States: Clin Vaccine Immunol. 2012 May;19(5):731-9. Epub 2012 Mar 21.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v4iss21_Authors_Ngundi.pdf","author_address":"Center for Biologics Evaluation and Research, Food and Drug Administration, Bethesda, Maryland, USA.","database_provider":"NLM","language":"eng","doi":"10.1128/cvi.05714-11"}
,{"record_number":"24253","reference_type":"Generic","author":"Quinn, C. P. S., C. L.,  Niemuth, N. A.,  Li, H.,  Semenova, V. A.,  Rudge, T. L.,  Mayfield, H. J.,  Schiffer, J.,  Mittler, R. S.,  Ibegbu, C. C.,  Wrammert, J.,  Ahmed, R.,  Brys, A. M.,  Hunt, R. E.,  Levesque, D.,  Estep, J. E.,  Barnewall, R. E.,  Robinson, D. M.,  Plikaytis, B. D.,  Marano, N.,","year":"2012","title":"A three dose intramuscular schedule of anthrax vaccine adsorbed generates sustained humoral and cellular immune responses to protective antigen and provides long term protection against inhalation anthrax in rhesus macaques","secondary_title":"Clin Vaccine Immunol","edition":"8/31/2012","date":"29-08","short_title":"A three dose intramuscular schedule of anthrax vaccine adsorbed generates sustained humoral and cellular immune responses to protective antigen and provides long term protection against inhalation anthrax in rhesus macaques","alternate_title":"Clinical and vaccine immunology : CVI","isbn_issn":"1556-679X (Electronic): 1556-679X (Linking)","custom_1":"CDC Authored Publications","custom_2":"Immunity and Immunization","custom_8":"4:35","accession_number":"22933399","abstract":"A 3 dose (0, 1, 6 months) intramuscular (3-IM) priming series of a human dose (HuAVA) and dilutions up to 1:10 of anthrax vaccine adsorbed (AVA) provided statistically significant levels of protection (60-100%) against inhalation anthrax for up to 4 years in rhesus macaques.Serum anti-protective antigen (PA) IgG and lethal toxin neutralization activity (TNA) were detectable following a single injection of HuAVA or 1:5 AVA, or two injections of diluted vaccine (1:10, 1:20, 1:40 AVA). Anti-PA and TNA were highly correlated (overall r(2) = 0.89 for log(10) transformed data). Peak responses were at 6.5 months (mo). In general, with the exception of animals receiving 1:40 AVA, serum anti-PA and TNA responses remained significantly above control levels at 28.5mo (last time point measured for 1:20 AVA) and through 50.5mo in HuAVA, 1:5 and 1:10 AVA groups (p <0.05).PA-specific IFN-gamma and IL-4 CD4(+) cell frequencies and T cell stimulation indices were sustained to 50.5mo (last time point measured). PA-specific memory B cell frequencies were highly variable, but in general were detectable in PBMC by 2mo, significantly above controls by 7mo, and remained detectable in the HuAVA, 1:5 and 1:20 AVA groups to 42mo (last time point measured).HuAVA and diluted AVA elicited a combined Th1/Th2 response and robust immunological priming with sustained production of high avidity PA-specific functional antibody, long term immune cell competence and immunological memory (30mo for 1:20 AVA; 52mo for 1:10 AVA). Vaccinated animals surviving inhalation anthrax developed high magnitude anamnestic anti-PA IgG and TNA responses.","notes":"Quinn, Conrad P: Sabourin, Carol L: Niemuth, Nancy A: Li, Han: Semenova, Vera A: Rudge, Thomas L: Mayfield, Heather J: Schiffer, Jarad: Mittler, Robert S: Ibegbu, Chris C: Wrammert, Jens: Ahmed, Rafi: Brys, April M: Hunt, Robert E: Levesque, Denyse: Estep, James E: Barnewall, Roy E: Robinson, David M: Plikaytis, Brian D: Marano, Nina: Clin Vaccine Immunol. 2012 Aug 29.","url":"http://intranet.cdc.gov/phlic/digitalrepository/ScienceClips/v4iss35_Authors_Quinn.pdf","author_address":"Centers for Disease Control and Prevention (CDC), Atlanta, GA 30333.","database_provider":"Nlm","language":"Eng","doi":"10.1128/cvi.00324-12"}
,{"record_number":"25195","reference_type":"Generic","author":"Dauphin, L. A. M., C. K.,  Bhullar, V.,  Baker, D.,  Rahman, M.,  Hossain, M. J.,  Chakraborty, A.,  Khan, S. U.,  Hoffmaster, A. R.,","year":"2012","title":"Swab protocol for rapid laboratory diagnosis of cutaneous anthrax","secondary_title":"J Clin Microbiol","volume":"50","number":"12","pages":"3960-3967","edition":"10/5/2012","date":"Dec","short_title":"Swab protocol for rapid laboratory diagnosis of cutaneous anthrax","alternate_title":"Journal of clinical microbiology","isbn_issn":"1098-660X (Electronic): 0095-1137 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"4:50","accession_number":"23035192","abstract":"The clinical laboratory diagnosis of cutaneous anthrax is generally established by conventional microbiological methods, such as culture and directly straining smears of clinical specimens. However, these methods rely on recovery of viable Bacillus anthracis cells from swabs of cutaneous lesions and often yield negative results. This study developed a rapid protocol for detection of B. anthracis on clinical swabs. Three types of swabs, flocked-nylon, rayon, and polyester, were evaluated by 3 extraction methods, the swab extraction tube system (SETS), sonication, and vortex. Swabs were spiked with virulent B. anthracis cells, and the methods were compared for their efficiency over time by culture and real-time PCR. Viability testing indicated that the SETS yielded greater recovery of B. anthracis from 1-day-old swabs; however, reduced viability was consistent for the 3 extraction methods after 7 days and nonviability was consistent by 28 days. Real-time PCR analysis showed that the PCR amplification was not impacted by time for any swab extraction method and that the SETS method provided the lowest limit of detection. When evaluated using lesion swabs from cutaneous anthrax outbreaks, the SETS yielded culture-negative, PCR-positive results. This study demonstrated that swab extraction methods differ in their efficiency of recovery of viable B. anthracis cells. Furthermore, the results indicated that culture is not reliable for isolation of B. anthracis from swabs at >/=7 days. Thus, we recommend the use of the SETS method with subsequent testing by culture and real-time PCR for diagnosis of cutaneous anthrax from clinical swabs of cutaneous lesions.","notes":"Dauphin, Leslie A: Marston, Chung K: Bhullar, Vinod: Baker, Daniel: Rahman, Mahmudur: Hossain, M Jahangir: Chakraborty, Apurba: Khan, Salah Uddin: Hoffmaster, Alex R: United States: J Clin Microbiol. 2012 Dec;50(12):3960-7. doi: 10.1128/JCM.02076-12. Epub 2012 Oct 3.","url":"http://phlic.cdc.gov/docs/ScienceClips/PDFs/v4iss50_Authors_Dauphin.pdf","author_address":"Bioterrorism Rapid Response and Advanced Technology (BRRAT) Laboratory.","database_provider":"NLM","language":"eng","doi":"10.1128/jcm.02076-12"}
,{"record_number":"25316","reference_type":"Generic","author":"Schiffer, J. M. M., P.,  Garza, I.,  Steward-Clark, E.,  Korman, L. T.,  Pittman, P. R.,  Mei, J. V.,  Quinn, C. P.,","year":"2012","title":"Quantitative assessment of anthrax vaccine immunogenicity using the dried blood spot matrix","secondary_title":"Biologicals","edition":"12/26/2012","date":"19-12","short_title":"Quantitative assessment of anthrax vaccine immunogenicity using the dried blood spot matrix","alternate_title":"Biologicals : journal of the International Association of Biological Standardization","isbn_issn":"1095-8320 (Electronic): 1045-1056 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"5:01","accession_number":"23266055","abstract":"The collection, processing and transportation to a testing laboratory of large numbers of clinical samples during an emergency response situation present significant cost and logistical issues. Blood and serum are common clinical samples for diagnosis of disease. Serum preparation requires significant on-site equipment and facilities for immediate processing and cold storage, and significant costs for cold-chain transport to testing facilities. The dried blood spot (DBS) matrix offers an alternative to serum for rapid and efficient sample collection with fewer on-site equipment requirements and considerably lower storage and transport costs. We have developed and validated assay methods for using DBS in the quantitative anti-protective antigen IgG enzyme-linked immunosorbent assay (ELISA), one of the primary assays for assessing immunogenicity of anthrax vaccine and for confirmatory diagnosis of Bacillus anthracis infection in humans. We have also developed and validated high-throughput data analysis software to facilitate data handling for large clinical trials and emergency response.","notes":"Schiffer, Jarad M: Maniatis, Panagiotis: Garza, Ilana: Steward-Clark, Evelene: Korman, Lawrence T: Pittman, Phillip R: Mei, Joanne V: Quinn, Conrad P: Biologicals. 2012 Dec 19. pii: S1045-1056(12)00180-7. doi: 10.1016/j.biologicals.2012.11.003.","url":"http://phlic.cdc.gov/docs/ScienceClips/PDFs/v5iss1_Authors_Schiffer.pdf","author_address":"Centers for Disease Control and Prevention, United States. Electronic address: jschiffer@cdc.gov.","database_provider":"NLM","language":"Eng","doi":"10.1016/j.biologicals.2012.11.003"}
,{"record_number":"25325","reference_type":"Generic","author":"SteelFisher, G. K. B., R. J.,  Brule, A. S.,  Ben-Porath, E. N.,  Ross, L. J.,  Atkins, B. M.,","year":"2012","title":"Public response to an anthrax attack: a multiethnic perspective","secondary_title":"Biosecur Bioterror","volume":"10","number":"4","pages":"401-411","edition":"12/19/2012","date":"Dec","short_title":"Public response to an anthrax attack: a multiethnic perspective","alternate_title":"Biosecurity and bioterrorism : biodefense strategy, practice, and science","isbn_issn":"1557-850X (Electronic): 1538-7135 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"5:01","accession_number":"23244501","abstract":"The 2001 anthrax attacks emphasized the need to develop outreach that would more effectively support racial/ethnic minority populations during a bioterrorism incident. Given the importance of antibiotic prophylaxis in a future anthrax attack, it should be a priority to better support racial/ethnic minorities in mass dispensing programs. To examine the needs and perspectives of racial/ethnic minorities, this study used a nationally representative poll of 1,852 adults, including 1,240 whites, 261 African Americans, and 282 Hispanics. The poll examined public reactions to a ''worst-case scenario'' in which cases of inhalation anthrax are discovered without an identified source and the entire population of a city or town is asked to receive antibiotic prophylaxis within 48 hours. Findings suggest willingness across all racial/ethnic groups to comply with recommendations to seek prophylaxis at dispensing sites. However, findings also indicate possible barriers for racial/ethnic minorities, including greater concern about pill safety and multiple attacks as well as lesser knowledge about inhalation anthrax. Across all racial/ethnic groups, roughly half would prefer to receive antibiotics at mass dispensing sites rather than through the US Postal Service. People in racial/ethnic minority groups were more likely to say this preference stems from a desire to speak with staff or to exchange medication formulation or type. Findings suggest the need for tailored outreach to racial/ethnic minorities through, for example, emphasis on key messages and enhanced understandability in communications, increased staff for answering questions in relevant dispensing sites, and long-term trust building with racial/ethnic minority communities.","notes":"Steelfisher, Gillian K: Blendon, Robert J: Brule, Amanda S: Ben-Porath, Eran N: Ross, Laura J: Atkins, Bret M: Biosecur Bioterror. 2012 Dec;10(4):401-411.","url":"http://phlic.cdc.gov/docs/ScienceClips/PDFs/v5iss1_Authors_SteelFisher.pdf","author_address":"Gillian K. SteelFisher, PhD, is Assistant Director, Harvard Opinion Research Program; Robert J. Blendon, ScD, is Senior Associate Dean for Policy Translation and Leadership Development, Professor of Health Policy and Political Analysis, and Executive Director, Harvard Opinion Research Program; and Amanda S. Brule, MA, is a Research Assistant; all in the Department of Health Policy and Management, Harvard School of Public Health, Boston, MA. Laura J. Ross, PhD, is Lead Health Communication Specialist, and Bret Atkins, PhD, is Health Communications Specialist, both in the Division of State and Local Readiness, Centers for Disease Control and Prevention, Atlanta, GA. Eran N. Ben-Porath, PhD, is Research Director, Social Science Research Solutions, Media, PA. The findings and conclusions in this report are those of the authors and do not necessarily represent the official position of their institutions and employers.","database_provider":"NLM","language":"Eng","doi":"10.1089/bsp.2012.0041"}
,{"record_number":"27350","reference_type":"Generic","author":"Meaney-Delman, D. R., S. A.,  Beigi, R. H.,  Zotti, M. E.,  Hutchings, Y.,  Bower, W. A.,  Treadwell, T. A.,  Jamieson, D. J.,","year":"2013","title":"Prophylaxis and treatment of anthrax in pregnant women","secondary_title":"Obstet Gynecol","volume":"122","number":"4","pages":"885-900","edition":"10/3/2013","date":"Oct","short_title":"Prophylaxis and treatment of anthrax in pregnant women","alternate_title":"Obstetrics and gynecology","isbn_issn":"0029-7844","custom_1":"CDC Authored Publications","custom_2":"Drug Safety","custom_8":"5:39","accession_number":"24084549","abstract":"OBJECTIVE: To review the safety and pharmacokinetics of antimicrobials recommended for anthrax postexposure prophylaxis and treatment in pregnant women. DATA SOURCES: Articles were identified in the PubMed database from inception through December 2012 by searching the keywords ([\"pregnancy]\" and [generic antibiotic drug name]). Additionally, we searched clinicaltrials.gov and conducted hand searches of references from REPROTOX, TERIS, review articles, and Briggs' Drugs in Pregnancy and Lactation. METHODS OF STUDY SELECTION: Articles included in the review contain primary data related to the safety and pharmacokinetics among pregnant women of 14 antimicrobials recommended for anthrax postexposure prophylaxis and treatment (amoxicillin, ampicillin, chloramphenicol, clindamycin, ciprofloxacin, doripenem, doxycycline, levofloxacin, linezolid, meropenem, moxifloxacin, penicillin, rifampin, and vancomycin). TABULATION, INTEGRATION, AND RESULTS: The PubMed search identified 3,850 articles for review. Reference hand searching yielded nine additional articles. In total, 112 articles met the inclusion criteria. CONCLUSIONS: Overall, safety and pharmacokinetic information is limited for these antimicrobials. Although small increases in risks for certain anomalies have been observed with some antimicrobials recommended for prophylaxis and treatment of anthrax, the absolute risk of these antimicrobials appears low. Given the high morbidity and mortality associated with anthrax, antimicrobials should be dosed appropriately to ensure that antibiotic levels can be achieved and sustained. Dosing adjustments may be necessary for the beta-lactam antimicrobials and the fluoroquinolones to achieve therapeutic levels in pregnant women. Data indicate that the beta-lactam antimicrobials, the fluoroquinolones, and, to a lesser extent, clindamycin enter the fetal compartment, an important consideration in the treatment of anthrax, because these antimicrobials may provide additional fetal benefit in the second and third trimesters of pregnancy.","notes":"1873-233x: Meaney-Delman, Dana: Rasmussen, Sonja A: Beigi, Richard H: Zotti, Marianne E: Hutchings, Yalonda: Bower, William A: Treadwell, Tracee A: Jamieson, Denise J: Journal Article: United States: Obstet Gynecol. 2013 Oct;122(4):885-900. doi: 10.1097/AOG.0b013e3182a5fdfd.","url":"http://phlic.cdc.gov/docs/ScienceClips/PDFs/v5iss39_Authors_Meaney-Delman.pdf","author_address":"Centers for Disease Control and Prevention, Atlanta, Georgia; and the Department of Obstetrics, Gynecology and Reproductive Sciences, Division of Reproductive Infectious Diseases and Obstetric Specialties, Magee-Women's Hospital of the University of Pittsburgh Medical Center, Pittsburgh, Pennsylvania.","database_provider":"Nlm","language":"eng","doi":"10.1097/AOG.0b013e3182a5fdfd"}
,{"record_number":"27772","reference_type":"Generic","author":"Wright, J. G. P., B. D.,  Rose, C. E.,  Parker, S. D.,  Babcock, J.,  Keitel, W.,  El Sahly, H.,  Poland, G. A.,  Jacobson, R. M.,  Keyserling, H. L.,  Semenova, V. A.,  Li, H.,  Schiffer, J.,  Dababneh, H.,  Martin, S. K.,  Martin, S. W.,  Marano, N.,  Messonnier, N. E.,  Quinn, C. P.,","year":"2013","title":"Effect of reduced dose schedules and intramuscular injection of anthrax vaccine adsorbed on immunological response and safety profile: a randomized trial","secondary_title":"Vaccine","edition":"1/1/2014","date":"24-12","short_title":"Effect of reduced dose schedules and intramuscular injection of anthrax vaccine adsorbed on immunological response and safety profile: a randomized trial","alternate_title":"Vaccine","isbn_issn":"0264-410x","custom_1":"CDC Authored Publications","custom_2":"Immunity and Immunization","custom_8":"6:02","accession_number":"24373307","abstract":"OBJECTIVE: We evaluated an alternative administration route, reduced schedule priming series, and increased intervals between booster doses for anthrax vaccine adsorbed (AVA). AVA's originally licensed schedule was 6 subcutaneous (SQ) priming injections administered at months (m) 0, 0.5, 1, 6, 12 and 18 with annual boosters; a simpler schedule is desired. METHODS: Through a multicenter randomized, double blind, non-inferiority Phase IV human clinical trial, the originally licensed schedule was compared to four alternative and two placebo schedules. 8-SQ group participants received 6 SQ injections with m30 and m42 \"annual\" boosters; participants in the 8-IM group received intramuscular (IM) injections according to the same schedule. Reduced schedule groups (7-IM, 5-IM, 4-IM) received IM injections at m0, m1, m6; at least one of the m0.5, m12, m18, m30 vaccine doses were replaced with saline. All reduced schedule groups received a m42 booster. Post-injection blood draws were taken two to four weeks following injection. Non-inferiority of the alternative schedules was compared to the 8-SQ group at m2, m7, and m43. Reactogenicity outcomes were proportions of injection site and systemic adverse events (AEs). RESULTS: The 8-IM group's m2 response was non-inferior to the 8-SQ group for the three primary endpoints of anti-protective antigen IgG geometric mean concentration (GMC), geometric mean titer, and proportion of responders with a 4-fold rise in titer. At m7 anti-PA IgG GMCs for the three reduced dosage groups were non-inferior to the 8-SQ group GMCs. At m43, 8-IM, 5-IM, and 4-IM group GMCs were superior to the 8-SQ group. Solicited injection site AEs occurred at lower proportions in the IM group compared to SQ. Route of administration did not influence the occurrence of systemic AEs. A 3 dose IM priming schedule with doses administered at m0, m1, and m6 elicited long term immunological responses and robust immunological memory that was efficiently stimulated by a single booster vaccination at 42 months. CONCLUSIONS: A priming series of 3 intramuscular doses administered at m0, m1, and m6 with a triennial booster was non-inferior to more complex schedules for achieving antibody response.","notes":"1873-2518: Wright, Jennifer G: Plikaytis, Brian D: Rose, Charles E: Parker, Scott D: Babcock, Janiine: Keitel, Wendy: El Sahly, Hana: Poland, Gregory A: Jacobson, Robert M: Keyserling, Harry L: Semenova, Vera A: Li, Han: Schiffer, Jarad: Dababneh, Hanan: Martin, Sandra K: Martin, Stacey W: Marano, Nina: Messonnier, Nancy E: Quinn, Conrad P: Journal article: Vaccine. 2013 Dec 24. pii: S0264-410X(13)01415-1. doi: 10.1016/j.vaccine.2013.10.039.","url":"http://phlic.cdc.gov/docs/ScienceClips/PDFs/6-2-Authors-24373307.pdf","author_address":"Centers for Disease Control and Prevention, 1600 Clifton Road, Atlanta, GA 30333, United States. Electronic address: jgwright@cdc.gov.: Centers for Disease Control and Prevention, 1600 Clifton Road, Atlanta, GA 30333, United States.: Alabama Vaccine Research Clinic, University of Alabama at Birmingham, 908 20th Street South, Birmingham, AL 35294-2050, United States.: Walter Reed Army Institute for Research, 503 Robert Grant Avenue, Silver Springs, MD 20910-7500, United States.: Departments of Molecular Virology & Microbiology and Medicine, Baylor College of Medicine, One Baylor Plaza, Houston, TX 77030, United States.: Mayo Clinic and Foundation, 611C Guggenheim Building, 200 First Street SW, Rochester, MN 55905, United States.: Emory University School of Medicine, 2015 Uppergate Drive, Atlanta, GA 30322, United States.","database_provider":"Nlm","language":"Eng","doi":"10.1016/j.vaccine.2013.10.039"}
,{"record_number":"28310","reference_type":"Generic","author":"Griffith, J. B., D.,  Shadomy, S.,  Lehman, M.,  Pesik, N.,  Tostenson, S.,  Delaney, L.,  Tiller, R.,  Devries, A.,  Gomez, T.,  Sullivan, M.,  Blackmore, C.,  Stanek, D.,  Lynfield, R.,","year":"2014","title":"Investigation of inhalation anthrax case, United States","secondary_title":"Emerg Infect Dis","volume":"20","number":"2","pages":"280-283","edition":"1/23/2014","date":"Feb","short_title":"Investigation of inhalation anthrax case, United States","alternate_title":"Emerging infectious diseases","isbn_issn":"1080-6040","custom_1":"CDC Authored Publications","custom_2":"Zoonoses","custom_8":"6:10","accession_number":"24447835","abstract":"Inhalation anthrax occurred in a man who vacationed in 4 US states where anthrax is enzootic. Despite an extensive multi-agency investigation, the specific source was not detected, and no additional related human or animal cases were found. Although rare, inhalation anthrax can occur naturally in the United States.","notes":"1080-6059: Griffith, Jayne: Blaney, David: Shadomy, Sean: Lehman, Mark: Pesik, Nicki: Tostenson, Samantha: Delaney, Lisa: Tiller, Rebekah: Devries, Aaron: Gomez, Thomas: Sullivan, Maureen: Blackmore, Carina: Stanek, Danielle: Lynfield, Ruth: Anthrax Investigation Team: Journal Article: United States: Emerg Infect Dis. 2014 Feb;20(2):280-3. doi: 10.3201/eid2002.130021.","url":"http://phlic.cdc.gov/docs/ScienceClips/PDFs/6-10-Authors-24447835.pdf","database_provider":"Nlm","language":"eng","doi":"10.3201/eid2002.130021"}
,{"record_number":"28334","reference_type":"Generic","author":"Sprenkle, M. D. G., J.,  Marinelli, W.,  Boyer, A. E.,  Quinn, C. P.,  Pesik, N. T.,  Hoffmaster, A.,  Keenan, J.,  Juni, B. A.,  Blaney, D. D.,","year":"2014","title":"Lethal factor and anti-protective antigen IgG levels associated with inhalation anthrax, Minnesota, USA","secondary_title":"Emerg Infect Dis","volume":"20","number":"2","pages":"310-314","edition":"1/23/2014","date":"Feb","short_title":"Lethal factor and anti-protective antigen IgG levels associated with inhalation anthrax, Minnesota, USA","alternate_title":"Emerging infectious diseases","isbn_issn":"1080-6040","custom_1":"CDC Authored Publications","custom_2":"Zoonoses","custom_8":"6:10","accession_number":"24447456","abstract":"Bacillus anthracis was identified in a 61-year-old man hospitalized in Minnesota, USA. Cooperation between the hospital and the state health agency enhanced prompt identification of the pathogen. Treatment comprising antimicrobial drugs, anthrax immune globulin, and pleural drainage led to full recovery; however, the role of passive immunization in anthrax treatment requires further evaluation.","notes":"1080-6059: Sprenkle, Mark D: Griffith, Jayne: Marinelli, William: Boyer, Anne E: Quinn, Conrad P: Pesik, Nicki T: Hoffmaster, Alex: Keenan, Joseph: Juni, Billie A: Blaney, David D: Journal Article: United States: Emerg Infect Dis. 2014 Feb;20(2):310-4. doi: 10.3201/eid2002.130245.","url":"http://phlic.cdc.gov/docs/ScienceClips/PDFs/6-10-Authors-24447456.pdf","database_provider":"Nlm","language":"eng","doi":"10.3201/eid2002.130245"}
,{"record_number":"28974","reference_type":"Generic","author":"Pondo, T. R., C. E.,  Martin, S. W.,  Keitel, W. A.,  Keyserling, H. L.,  Babcock, J.,  Parker, S.,  Jacobson, R. M.,  Poland, G. A.,  McNeil, M. M.,","year":"2014","title":"Evaluation of sex, race, body mass index and pre-vaccination serum progesterone levels and post-vaccination serum anti-anthrax protective immunoglobulin G on injection site adverse events following anthrax vaccine adsorbed (AVA) in the CDC AVA human clinical trial","secondary_title":"Vaccine","edition":"4/29/2014","date":"23-04","short_title":"Evaluation of sex, race, body mass index and pre-vaccination serum progesterone levels and post-vaccination serum anti-anthrax protective immunoglobulin G on injection site adverse events following anthrax vaccine adsorbed (AVA) in the CDC AVA human clinical trial","alternate_title":"Vaccine","isbn_issn":"0264-410x","custom_1":"CDC Authored Publications","custom_2":"Immunity and Immunization","custom_8":"6:19","accession_number":"24768633","abstract":"BACKGROUND: Anthrax vaccine adsorbed (AVA) administered intramuscularly (IM) results in fewer adverse events (AEs) than subcutaneous (SQ) administration. Women experience more AEs than men. Antibody response, female hormones, race, and body mass index (BMI) may contribute to increased frequency of reported injection site AEs. METHODS: We analyzed data from the CDC anthrax vaccine adsorbed human clinical trial. This double blind, randomized, placebo controlled trial enrolled 1563 participants and followed them through 8 injections (AVA or placebo) over a period of 42 months. For the trial's vaccinated cohort (n=1267), we used multivariable logistic regression to model the effects of study group (SQ or IM), sex, race, study site, BMI, age, and post-vaccination serum anti-PA IgG on occurrence of AEs of any severity grade. Also, in a women-only subset (n=227), we assessed effect of pre-vaccination serum progesterone level and menstrual phase on AEs. RESULTS: Participants who received SQ injections had significantly higher proportions of itching, redness, swelling, tenderness and warmth compared to the IM study group after adjusting for other risk factors. The proportions of redness, swelling, tenderness and warmth were all significantly lower in blacks vs. non-black participants. We found arm motion limitation, itching, pain, swelling and tenderness were more likely to occur in participants with the highest anti-PA IgG concentrations. In the SQ study group, redness and swelling were more common for obese participants compared to participants who were not overweight. Females had significantly higher proportions of all AEs compared to males. Menstrual phase was not associated with any AEs. CONCLUSIONS: Female and non-black participants had a higher proportion of AVA associated AEs and higher anti-PA IgG concentrations. Antibody responses to other vaccines may also vary by gender and race. Further studies may provide better understanding for higher proportions of AEs in women and non-black participants.","notes":"1873-2518: Pondo, Tracy: Jr, Charles E Rose: Martin, Stacey W: Keitel, Wendy A: Keyserling, Harry L: Babcock, Janiine: Parker, Scott: Jacobson, Robert M: Poland, Gregory A: McNeil, Michael M: Journal article: Vaccine. 2014 Apr 23. pii: S0264-410X(14)00551-9. doi: 10.1016/j.vaccine.2014.04.025.","url":"http://phlic.cdc.gov/docs/ScienceClips/PDFs/6-19-Authors-24768633.pdf","author_address":"Division of Bacterial Diseases, National Center for Immunization and Respiratory Diseases, Centers for Disease Control and Prevention, Atlanta, GA, United States. Electronic address: dio2@cdc.gov.: Division of Bacterial Diseases, National Center for Immunization and Respiratory Diseases, Centers for Disease Control and Prevention, Atlanta, GA, United States.: Baylor College of Medicine, Houston, TX, United States.: Emory University School of Medicine, Atlanta, GA, United States.: Walter Reed Army Institute of Research, Washington, DC, United States.: University of Alabama at Birmingham, Birmingham, AL, United States.: Mayo Clinic, Rochester, MN, United States.: Immunization Safety Office, Division of Healthcare Quality Promotion, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, GA, United States.","database_provider":"Nlm","language":"Eng","doi":"10.1016/j.vaccine.2014.04.025"}
,{"record_number":"29177","reference_type":"Generic","author":"Stoddard, R. A. Q., C. P.,  Schiffer, J. M.,  Boyer, A. E.,  Goldstein, J.,  Bagarozzi, D. A.,  Soroka, S. D.,  Dauphin, L. A.,  Hoffmaster, A. R.,","year":"2014","title":"Detection of anthrax protective antigen (PA) using europium labeled anti-PA monoclonal antibody and time-resolved fluorescence","secondary_title":"J Immunol Methods","edition":"5/27/2014","date":"22-05","short_title":"Detection of anthrax protective antigen (PA) using europium labeled anti-PA monoclonal antibody and time-resolved fluorescence","alternate_title":"Journal of immunological methods","isbn_issn":"0022-1759","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"6:22","accession_number":"24857756","abstract":"Inhalation anthrax is a rare but acute infectious disease following adsorption of Bacillus anthracis spores through the lungs. The disease has a high fatality rate if untreated, but early and correct diagnosis has a significant impact on case patient recovery. The early symptoms of inhalation anthrax are, however, non-specific and current anthrax diagnostics are primarily dependent upon culture and confirmatory real-time PCR. Consequently, there may be a significant delay in diagnosis and targeted treatment. Rapid, culture-independent diagnostic tests are therefore needed, particularly in the context of a large scale emergency response. The aim of this study was to evaluate the ability of monoclonal antibodies to detect anthrax toxin proteins that are secreted early in the course of B. anthracis infection using a time-resolved fluorescence (TRF) immunoassay. We selected monoclonal antibodies that could detect protective antigen (PA), as PA83 and also PA63 and LF in the lethal toxin complex. The assay reliable detection limit (RDL) was 6.63 x 10-6muM (0.551ng/ml) for PA83 and 2.51 x 10-5muM (1.58ng/ml) for PA63. Despite variable precision and accuracy of the assay, PA was detected in 9 out of 10 sera samples from anthrax confirmed case patients with cutaneous (n=7), inhalation (n=2), and gastrointestinal (n=1) disease. Anthrax Immune Globulin (AIG), which has been used in treatment of clinical anthrax, interfered with detection of PA. This study demonstrates a culture-independent method of diagnosing anthrax through use of monoclonal antibodies to detect PA and LF in the lethal toxin complex.","notes":"1872-7905: Stoddard, Robyn A: Quinn, Conrad P: Schiffer, Jarad M: Boyer, Anne E: Goldstein, Jason: Bagarozzi, Dennis A: Soroka, Stephen D: Dauphin, Leslie A: Hoffmaster, Alex R: Journal article: J Immunol Methods. 2014 May 22. pii: S0022-1759(14)00153-7. doi: 10.1016/j.jim.2014.05.008.","url":"http://phlic.cdc.gov/docs/ScienceClips/PDFs/6-22-Authors-24857756.pdf","author_address":"Centers for Disease Control and Prevention (CDC), 1600 Clifton Rd., Atlanta, GA 30333, USA. Electronic address: RAStoddard@cdc.gov.: Centers for Disease Control and Prevention (CDC), 1600 Clifton Rd., Atlanta, GA 30333, USA.","database_provider":"Nlm","language":"Eng","doi":"10.1016/j.jim.2014.05.008"}
,{"record_number":"29225","reference_type":"Generic","author":"Bradley, J. S. P., G.,  Krug, S. E.,  Bower, W. A.,  Cohn, A. C.,  Meaney-Delman, D.,  Pavia, A. T.,","year":"2014","title":"Pediatric anthrax clinical management","secondary_title":"Pediatrics","edition":"4/30/2014","date":"28-04","short_title":"Pediatric anthrax clinical management","alternate_title":"Pediatrics","isbn_issn":"0031-4005","custom_1":"CDC Authored Publications","custom_2":"Zoonoses","custom_8":"6:23","accession_number":"24777226","abstract":"Anthrax is a zoonotic disease caused by Bacillus anthracis, which has multiple routes of infection in humans, manifesting in different initial presentations of disease. Because B anthracis has the potential to be used as a biological weapon and can rapidly progress to systemic anthrax with high mortality in those who are exposed and untreated, clinical guidance that can be quickly implemented must be in place before any intentional release of the agent. This document provides clinical guidance for the prophylaxis and treatment of neonates, infants, children, adolescents, and young adults up to the age of 21 (referred to as \"children\") in the event of a deliberate B anthracis release and offers guidance in areas where the unique characteristics of children dictate a different clinical recommendation from adults.","notes":"1098-4275: Bradley, John S: Peacock, Georgina: Krug, Steven E: Bower, William A: Cohn, Amanda C: Meaney-Delman, Dana: Pavia, Andrew T: AAP COMMITTEE ON INFECTIOUS DISEASES and DISASTER PREPAREDNESS ADVISORY COUNCIL: Journal article: Pediatrics. 2014 Apr 28.","url":"http://phlic.cdc.gov/docs/ScienceClips/PDFs/6-23-Authors-24777226.pdf","database_provider":"Nlm","language":"Eng","doi":"10.1542/peds.2014-0563"}
,{"record_number":"30047","reference_type":"Generic","author":"Chateau, A. L., J. M., Oh, S. Y., Abshire, T., Friedlander, A., Quinn, C. P., Missiakas, D. M., Schneewind, O.,","year":"2017","title":"Galactosylation of the secondary cell wall polysaccharide of Bacillus anthracis and its contribution to anthrax pathogenesis","secondary_title":"J Bacteriol","edition":"12/13/2017","date":"12-Nov","short_title":"Galactosylation of the secondary cell wall polysaccharide of Bacillus anthracis and its contribution to anthrax pathogenesis","alternate_title":"Journal of bacteriology","isbn_issn":"0021-9193","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"10:01","accession_number":"29229702","abstract":"Bacillus anthracis, the causative agent of anthrax disease, elaborates a secondary cell wall polysaccharide (SCWP) that is essential for bacterial growth and cell division. B. anthracis SCWP is comprised of trisaccharide repeats, [-->4)-beta-ManNAc-(1-->4)-beta-GlcNAc-(1-->6)-alpha-GlcNAc-(1-->], where alpha-GlcNAc is substituted with alpha-Gal and beta-Gal at O3 and O4, respectively, and beta-GlcNAc is substituted with alpha-Gal at O3. The genes whose products promote the galactosylation of B. anthracis SCWP are not yet known. We show here that expression of galE1, encoding a UDP-glucose 4-epimerase necessary for the synthesis of UDP-galactose, is required for B. anthracis SCWP galactosylation. The galE1 mutant assembles S-layer and S-layer associated proteins, which associate with ketal-pyruvylated SCWP via their S-layer homology domains in a manner similar to wild-type B. anthracis, but displays a defect in gamma-phage murein hydrolase binding to SCWP. Further, deletion of galE1 diminishes capsulation of B. anthracis with poly-D-gamma-glutamic acid (PDGA) and causes a reduction in bacterial virulence. These data suggest that SCWP galactosylation is required for the physiologic assembly of the B. anthracis cell wall envelope and for the pathogenesis of anthrax disease.IMPORTANCE Unlike virulent Bacillus anthracis isolates, B. anthracis CDC684 synthesizes secondary cell wall polysaccharide (SCWP) trisaccharide repeats without galactosyl modification, exhibits diminished growth in vitro in broth cultures and is severely attenuated in an animal model of anthrax. To examine whether SCWP galactosylation is a requirement for anthrax disease, we generated B. anthracis 34F2 and Ames variants lacking UDP-glucose 4-epimerase by mutating the genes galE1 and galE2 We identified galE1 as necessary for SCWP galactosylation. Deletion of galE1 decreased B. anthracis vegetative form poly-D-gamma-glutamic acid (PDGA) capsulation and increased the bacterial inoculum required to produce lethal disease in mice, indicating that SCWP galactosylation is indeed a determinant of anthrax disease.","notes":"1098-5530:Chateau, Alice:Lunderberg, Justin Mark:Oh, So Young:Abshire, Teresa:Friedlander, Arthur:Quinn, Conrad P:Missiakas, Dominique M:Schneewind, Olaf:ORCID: http://orcid.org/0000-0001-9652-3823:Journal Article:United States:J Bacteriol. 2017 Dec 11. pii: JB.00562-17. doi: 10.1128/JB.00562-17.","url":"https://www.ncbi.nlm.nih.gov/pubmed/29229702","author_address":"Howard Taylor Ricketts Laboratory, Argonne National Laboratory, Lemont, Illinois, USA, and Department of Microbiology, University of Chicago, Chicago, Illinois, USA.:Diagnostic Systems Division and Headquarters , United States Army Medical Research Institute of Infectious Diseases, 1425 Porter Street, Frederick, Maryland, USA.:Centers for Disease Control and Prevention, 1600 Clifton Road, Atlanta, GA 30329, USA.","database_provider":"NLM","language":"eng","doi":"10.1128/jb.00562-17"}
,{"record_number":"30051","reference_type":"Generic","author":"Gallegos-Candela, M. B., A. E., Woolfitt, A. R., Brumlow, J., Lins, R. C., Quinn, C. P., Hoffmaster, A. R., Meister, G., Barr, J. R.,","year":"2017","title":"Validated MALDI-TOF-MS method for anthrax lethal factor provides early diagnosis and evaluation of therapeutics","secondary_title":"Anal Biochem","edition":"12/12/2017","date":"12-Jul","short_title":"Validated MALDI-TOF-MS method for anthrax lethal factor provides early diagnosis and evaluation of therapeutics","alternate_title":"Analytical biochemistry","isbn_issn":"0003-2697","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"10:01","accession_number":"29224733","keywords":"Anthrax:Bacillus anthracis:Bacterial protein toxin:Enzyme activity:Isotope-dilution mass spectrometry:Lethal factor","abstract":"Anthrax lethal factor (LF) is a zinc-dependent endoprotease and a critical virulence factor for Bacillus anthracis, the causative agent of anthrax. The mass spectrometry (MS) method for total-LF quantification includes three steps; 1) LF specific antibody capture/concentration, 2) LF-specific hydrolysis of a peptide substrate, and 3) detection and quantification of LF-cleaved peptides by isotope-dilution MALDI-TOF/MS. Recombinant LF spiked plasma was used for calibration and quality control (QC) materials. Specificity was 100% from analysis of serum and plasma from 383 non-infected humans, 31 rabbits, and 24 rhesus macaques. Sensitivity was 100% from 32 human clinical anthrax cases including infections by inhalation, ingestion, cutaneous and injection exposures and experimental infections for 29 rabbits and 24 rhesus macaques with inhalation anthrax. Robustness evaluation included sample storage, serum and plasma, antimicrobial and antitoxin effects and long-term performance. Data from 100 independent runs gave detection limits 0.01 ng/mL (111 amol/mL) for the 4-h method and 0.0027 ng/mL (30 amol/mL) for an alternate 20-h method. QC precision ranged from 7.7 to 14.8% coefficient of variation and accuracy from 0.2 to 9.8% error. The validated LF MS method provides sensitive quantification of anthrax total-LF using a robust high throughput platform for early diagnosis and evaluation of therapeutics during an anthrax emergency.","notes":"1096-0309:Gallegos-Candela, Maribel:Boyer, Anne E:Woolfitt, Adrian R:Brumlow, Judy:Lins, Renato C:Quinn, Conrad P:Hoffmaster, Alex R:Meister, Gabriel:Barr, John R:Journal Article:United States:Anal Biochem. 2017 Dec 7. pii: S0003-2697(17)30500-6. doi: 10.1016/j.ab.2017.12.007.","url":"https://www.ncbi.nlm.nih.gov/pubmed/29224733","author_address":"Centers for Disease Control and Prevention, 4770 Buford Highway Mailstop F-50, Atlanta, GA 30341, USA.:Centers for Disease Control and Prevention, 4770 Buford Highway Mailstop F-50, Atlanta, GA 30341, USA. Electronic address: aboyer@cdc.gov.:Battelle Atlanta Analytical Services, 2987 Clairmont Road NE, Suite 450, Atlanta, GA 30329, USA.:Centers for Disease Control and Prevention, 1600 Clifton Road, Atlanta, GA 30329, USA.:Battelle Biomedical Research Center, 1425 Plain City Georgesville Rd, West Jefferson, OH 43162, USA.","database_provider":"NLM","language":"eng","doi":"10.1016/j.ab.2017.12.007"}
,{"record_number":"30277","reference_type":"Generic","author":"Peksa, G. D. R., M. J., Beyer, A. R., Weber, E. K., Johnson, K.,","year":"2017","title":"A calculation tool and process to pre-position pharmaceuticals for anthrax post-exposure prophylaxis","secondary_title":"Health Secur","volume":"15","number":"6","pages":"569-574","edition":"11/15/2017","date":"Nov/Dec","short_title":"A calculation tool and process to pre-position pharmaceuticals for anthrax post-exposure prophylaxis","alternate_title":"Health security","isbn_issn":"2326-5094","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"10:02","accession_number":"29135306","keywords":"Anthrax:Countermeasures:Infectious diseases:Public health preparedness/response","abstract":"Anthrax, caused by Bacillus anthracis, is considered a severe bioterrorism threat because of its high mortality rate. The Chicago Healthcare System Coalition for Preparedness and Response (CHSCPR) aims to pre-position antibiotic medical countermeasures (MCMs) at healthcare facilities in order to provide on-site anthrax post-exposure prophylaxis. Pharmacists proposed moving toward a new process that involved the development of a standardized calculation methodology for acquiring supply drugs. This was an interventional quality improvement project aimed at optimizing inventory, acquisition, and distribution of antibiotic MCMs for anthrax post-exposure prophylaxis at Chicago hospitals for hospital personnel, associated first responders, and their families. The primary goal of the project was to pre-position a sufficient quantity of pharmaceuticals to allow Chicago hospitals to function as closed points of dispensing (PODs) for 72 hours; a secondary goal was to provide a 96-hour supply of anthrax post-exposure prophylaxis. A total of 35 Chicago hospitals were invited to participate in this intervention study, and 30 hospitals agreed to participate. Based on our calculation tool, we initially identified 6 (20%) hospitals with adequate oral doxycycline and ciprofloxacin inventory to last 72 hours and 3 (10%) hospitals with inventory to last 96 hours as a closed POD for anthrax post-exposure prophylaxis. The necessary quantities of medication needed to establish 72 and 96 hours of anthrax post-exposure prophylaxis were calculated by the CHSCPR and negotiated with a drug wholesaler to obtain product with maximum shelf-life and discounted pricing. Acting as a group purchaser, the CHSCPR organized drop shipment of medication directly to facilities from a wholesaler. This systematically calculated, pre-deployed pharmaceutical cache enhanced availability of antibiotic MCMs for anthrax post-exposure prophylaxis in 30 Chicago hospitals, allowing them to function as closed PODs for 96 hours during an incident.","notes":"2326-5108:Peksa, Gary D:Robbins, Michael J:Beyer, Alexis R:Weber, Elisabeth K:Johnson, Keneatha:Journal Article:United States:Health Secur. 2017 Nov/Dec;15(6):569-574. doi: 10.1089/hs.2017.0032. Epub 2017 Nov 14.","url":"https://www.ncbi.nlm.nih.gov/pubmed/29135306","database_provider":"NLM","language":"eng","doi":"10.1089/hs.2017.0032"}
,{"record_number":"31377","reference_type":"Generic","author":"Boyer, A. E. G.-C., M.,  Quinn, C. P.,  Woolfitt, A. R.,  Brumlow, J. O.,  Isbell, K.,  Hoffmaster, A. R.,  Lins, R. C.,  Barr, J. R.,","year":"2015","title":"High-sensitivity MALDI-TOF MS quantification of anthrax lethal toxin for diagnostics and evaluation of medical countermeasures","secondary_title":"Anal Bioanal Chem","edition":"2/13/2015","date":"2-Dec","short_title":"High-sensitivity MALDI-TOF MS quantification of anthrax lethal toxin for diagnostics and evaluation of medical countermeasures","alternate_title":"Analytical and bioanalytical chemistry","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"7:08","accession_number":"25673244","abstract":"Inhalation anthrax has a rapid progression and high fatality rate. Pathology and death from inhalation of Bacillus anthracis spores are attributed to the actions of secreted protein toxins. Protective antigen (PA) binds and imports the catalytic component lethal factor (LF), a zinc endoprotease, and edema factor (EF), an adenylyl cyclase, into susceptible cells. PA-LF is termed lethal toxin (LTx) and PA-EF, edema toxin. As the universal transporter for both toxins, PA is an important target for vaccination and immunotherapeutic intervention. However, its quantification has been limited to methods of relatively low analytic sensitivity. Quantification of LTx may be more clinically relevant than LF or PA alone because LTx is the toxic form that acts on cells. A method was developed for LTx-specific quantification in plasma using anti-PA IgG magnetic immunoprecipitation of PA and quantification of LF activity that co-purified with PA. The method was fast (<4 h total time to detection), sensitive at 0.033 ng/mL LTx in plasma for the fast analysis (0.0075 ng/mL LTx in plasma for an 18 h reaction), precise (6.3-9.9 % coefficient of variation), and accurate (0.1-12.7 %error; n >/= 25). Diagnostic sensitivity was 100 % (n = 27 animal/clinical cases). Diagnostic specificity was 100 % (n = 141). LTx was detected post-antibiotic treatment in 6/6 treated rhesus macaques and 3/3 clinical cases of inhalation anthrax and as long as 8 days post-treatment. Over the course of infection in two rhesus macaques, LTx was first detected at 0.101 and 0.237 ng/mL at 36 h post-exposure and increased to 1147 and 12,107 ng/mL in late-stage anthrax. This demonstrated the importance of LTx as a diagnostic and therapeutic target. This method provides a sensitive, accurate tool for anthrax toxin detection and evaluation of PA-directed therapeutics.","notes":"1618-2650: Boyer, Anne E: Gallegos-Candela, Maribel: Quinn, Conrad P: Woolfitt, Adrian R: Brumlow, Judith O: Isbell, Katherine: Hoffmaster, Alex R: Lins, Renato C: Barr, John R: Journal article: Anal Bioanal Chem. 2015 Feb 12.","url":"Http://intranet.cdc.gov/library/docs/science_clips/vol_7/issue_8/7-8-Authors-25673244.pdf: http://download.springer.com/static/pdf/552/art%253A10.1007%252Fs00216-015-8509-5.pdf?auth66=1424792596_7514b4a52d5cf260d061e6a236e5b1d8&ext=.pdf","author_address":"Centers for Disease Control and Prevention, Atlanta, GA, 30341, USA.","database_provider":"NLM","language":"Eng","doi":"10.1007/s00216-015-8509-5"}
,{"record_number":"31601","reference_type":"Generic","author":"Place, R. C. H., D.,  Howell, J. M.,  Mayer, T. A.,","year":"2007","title":"Bioterrorism-related inhalational anthrax: can extrapolated adult guidelines be applied to a pediatric population?","secondary_title":"Biosecur Bioterror","volume":"5","number":"1","pages":"35-42","edition":"4/18/2007","date":"Mar","short_title":"Bioterrorism-related inhalational anthrax: can extrapolated adult guidelines be applied to a pediatric population?","alternate_title":"Biosecurity and bioterrorism : biodefense strategy, practice, and science","isbn_issn":"1538-7135 (Print): 1538-7135","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Disaster Control and Emergency Services - Pediatric Preparedness","custom_8":"7:11","accession_number":"17437350","keywords":"Adolescent: Adult: Anthrax/*diagnosis: *Bioterrorism: Child: Emergency Service, Hospital: Guidelines as Topic: Humans: *Inhalation Exposure: Medical Audit: Pediatrics: Retrospective Studies: Triage/standards: Virginia","abstract":"OBJECTIVE: Since the 2001 anthrax attacks, an extensive body of literature has evolved, but there has been a limited focus on the management of pediatric-specific issues. We looked at the symptom complexes of all pediatric patients presenting to the emergency department of our hospital during this period and examined whether their presentations would likely allow current guidelines to be used as potential screening criteria to identify children infected with anthrax. METHODS: We retrospectively reviewed emergency department records of all adult and pediatric patients (up to the age of 21 years) at Inova Fairfax Hospital during this time, when a large, and at the time ill-defined, group in the Washington, DC, metropolitan area was at risk for pulmonary anthrax. Two cases of anthrax infection were identified at this hospital in exposed adult postal workers. Screening algorithms (described by Mayer et al. and Hupert et al.) were applied to adult and pediatric patients with the presence of fever (38 degrees C), tachycardia, or other symptoms compatible with pulmonary anthrax. Specifically, the usefulness of these guidelines as potential screening tools to identify possibly infected children was examined. RESULTS: Of 767 pediatric patients seen in the emergency department during the study period, 312 met criteria for review (41%; 95% CI: 37-44%). Four adult patients (0.4%; 95% CI: 0.1-0.9%) had at least five clinical symptoms, fever, and tachycardia; two of them had inhalational anthrax. No pediatric patient presented with five or more clinical symptoms. Twelve children (3.9%; 95% CI: 2-6.6%) presented with four clinical symptoms; five of the 12 had neither fever nor tachycardia. Children, particularly infants and toddlers, presented with nonspecific symptom complexes primarily limited to fever, vomiting, cough, and trouble breathing. CONCLUSIONS: Existing guidelines are likely to be unreliable as a screening tool for inhalational anthrax in children, largely because of the children's inability to adequately communicate a suggestive symptom complex.","notes":"Place, Rick C: Hanfling, Dan: Howell, John M: Mayer, Thom A: Journal Article: United States: Biosecur Bioterror. 2007 Mar;5(1):35-42.","url":"http://intranet.cdc.gov/library/docs/science_clips/vol_7/issue_11/7-11-GrandRounds-17437350.pdf: http://online.liebertpub.com/doi/pdfplus/10.1089/bsp.2006.0011","author_address":"Department of Emergency Medicine, Inova Fairfax Hospital, Falls Church, Virginia 22042, USA. linsonplace@aol.com","database_provider":"NLM","language":"eng","doi":"10.1089/bsp.2006.0011"}
,{"record_number":"32319","reference_type":"Generic","author":"Schiffer, J. M. C., L.,  Dalton, S.,  Niemuth, N. A.,  Sabourin, C. L.,  Quinn, C. P.,","year":"2015","title":"Bridging non-human primate correlates of protection to reassess the anthrax vaccine adsorbed booster schedule in humans","secondary_title":"Vaccine","edition":"6/15/2015","date":"6-Oct","short_title":"Bridging non-human primate correlates of protection to reassess the anthrax vaccine adsorbed booster schedule in humans","isbn_issn":"1873-2518 (Electronic): 0264-410X (Linking)","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"7:26","accession_number":"26072016","keywords":"Ava: Animal model: Anthrax: Anthrax vaccine adsorbed: Bacillus anthracis: Biothrax: Clinical trial: Correlates of protection: Non-clinical trial","abstract":"Anthrax vaccine adsorbed (AVA, BioThrax(R)) is approved for use in humans as a priming series of 3 intramuscular (i.m.) injections (0, 1, 6 months; 3-IM) with boosters at 12 and 18 months, and annually thereafter for those at continued risk of infection. A reduction in AVA booster frequency would lessen the burden of vaccination, reduce the cumulative frequency of vaccine associated adverse events and potentially expand vaccine coverage by requiring fewer doses per schedule. Because human inhalation anthrax studies are neither feasible nor ethical, AVA efficacy estimates are determined using cross-species bridging of immune correlates of protection (COP) identified in animal models. We have previously reported that the AVA 3-IM priming series provided high levels of protection in non-human primates (NHP) against inhalation anthrax for up to 4 years after the first vaccination. Penalized logistic regressions of those NHP immunological data identified that anti-protective antigen (anti-PA) IgG concentration measured just prior to infectious challenge was the most accurate single COP. In the present analysis, cross-species logistic regression models of this COP were used to predict probability of survival during a 43 month study in humans receiving the current 3-dose priming and 4 boosters (12, 18, 30 and 42 months; 7-IM) and reduced schedules with boosters at months 18 and 42 only (5-IM), or at month 42 only (4-IM). All models predicted high survival probabilities for the reduced schedules from 7 to 43 months. The predicted survival probabilities for the reduced schedules were 86.8% (4-IM) and 95.8% (5-IM) at month 42 when antibody levels were lowest. The data indicated that 4-IM and 5-IM are both viable alternatives to the current AVA pre-exposure prophylaxis schedule.","notes":"Schiffer, Jarad M: Chen, Ligong: Dalton, Shannon: Niemuth, Nancy A: Sabourin, Carol L: Quinn, Conrad P: Vaccine. 2015 Jun 10. pii: S0264-410X(15)00765-3. doi: 10.1016/j.vaccine.2015.05.091.","url":"Http://intranet.cdc.gov/library/docs/science_clips/vol_7/issue_26/7-26-Authors-26072016.pdf","author_address":"Centers for Disease Control and Prevention (CDC), Atlanta, GA 30333, United States. Electronic address: jschiffer@cdc.gov.: Atlanta Research and Education Foundation (AREF), Decatur, GA 30033, United States.: Battelle, 505 King Avenue, Columbus, OH 43210, United States.: Centers for Disease Control and Prevention (CDC), Atlanta, GA 30333, United States.","database_provider":"NLM","language":"Eng","doi":"10.1016/j.vaccine.2015.05.091"}
,{"record_number":"32466","reference_type":"Generic","author":"Navdarashvili, A. D., T. J.,  Geleishvili, M.,  Haberling, D. L.,  Kharod, G. A.,  Rush, T. H.,  Maes, E.,  Zakhashvili, K.,  Imnadze, P.,  Bower, W. A.,  Walke, H. T.,  Shadomy, S. V.,","year":"2015","title":"Human anthrax outbreak associated with livestock exposure: Georgia, 2012","secondary_title":"Epidemiol Infect","pages":"44573","edition":"6/20/2015","date":"19-06","short_title":"Human anthrax outbreak associated with livestock exposure: Georgia, 2012","isbn_issn":"1469-4409 (Electronic): 0950-2688 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Zoonoses","custom_8":"7:28 GH","accession_number":"26088361","keywords":"Anthrax: bacterial infections: control: epidemiology: zoonoses","abstract":"Human anthrax cases reported in the country of Georgia increased 75% from 2011 (n = 81) to 2012 (n = 142). This increase prompted a case-control investigation using 67 culture- or PCR-confirmed cases and 134 controls matched by residence and gender to investigate risk factor(s) for infection during the month before case onset. Independent predictors most strongly associated with disease in the multivariable modelling were slaughtering animals [odds ratio (OR) 7.3, 95% confidence interval (CI) 2.9-18.1, P 1 km; 15 (12%) of 125 had sick livestock; and 11 (9%) of 128 respondents reported finding dead livestock. We recommend joint public health and veterinary anthrax case investigations to identify areas of increased risk for livestock anthrax outbreaks, annual anthrax vaccination of livestock in those areas, and public awareness education.","notes":"Navdarashvili, A: Doker, T J: Geleishvili, M: Haberling, D L: Kharod, G A: Rush, T H: Maes, E: Zakhashvili, K: Imnadze, P: Bower, W A: Walke, H T: Shadomy, S V: Anthrax Investigation Team: Epidemiol Infect. 2015 Jun 19:1-12.","url":"Http://intranet.cdc.gov/library/docs/science_clips/vol_7/issue_28/7-28-Authors-26088361.pdf","author_address":"Georgia National Center for Disease Control and Public Health,Georgia Ministry of Health,Tbilisi,Georgia.: Epidemic Intelligence Service,Centers for Disease Control and Prevention,Atlanta,GA,USA.: South Caucasus Field Epidemiology and Laboratory Training Program,Tbilisi,Georgia.: Division of High Consequence Diseases and Pathology,Centers for Disease Control and Prevention,Atlanta,GA,USA.: Bacterial Special Pathogens Branch,Division of High-Consequence Pathogens and Pathology,Centers for Disease Control and Prevention,Atlanta,GA,USA.","database_provider":"NLM","language":"Eng","doi":"10.1017/s0950268815001442"}
,{"record_number":"32809","reference_type":"Generic","author":"Ackelsberg, J. R., J.,  Hughes, S.,  Petersen, J.,  Mead, P.,  Schriefer, M.,  Kingry, L.,  Hoffmaster, A.,  Gee, J. E.,","year":"2015","title":"Lack of evidence for plague or anthrax on the New York City subway","secondary_title":"Cell Sys","volume":"1","number":"1","pages":"44656","short_title":"Lack of evidence for plague or anthrax on the New York City subway","isbn_issn":"24054712 (ISSN)","custom_1":"CDC Authored Publications","custom_2":"Communicable Diseases","custom_7":"15","custom_8":"7:34","abstract":"Ackelsberg et al point out a lack of evidence in the dataset of Afshinekoo et al. for the presence of plague and anthrax on the New York City subway.","notes":"Cited By :1: Export Date: 14 August 2015","url":"Http://intranet.cdc.gov/library/docs/science_clips/vol_7/issue_34/7-34-Authors-Ackelsberg.pdf","author_address":"New York City Department of Health and Mental Hygiene, Queens, NY, United States: Centers for Disease Control and Prevention, 3156 Rampart Road, Fort Collins, CO, United States: Centers for Disease Control and Prevention, 1600 Clifton Road, Atlanta, GA, United States","name_of_database":"Scopus","doi":"10.1016/j.cels.2015.07.008"}
,{"record_number":"34078","reference_type":"Generic","author":"Marano, N. P., B. D.,  Martin, S. W.,  Rose, C.,  Semenova, V. A.,  Martin, S. K.,  Freeman, A. E.,  et al.,","year":"2008","title":"Effects of a reduced dose schedule and intramuscular administration of anthrax vaccine adsorbed on immunogenicity and safety at 7 months: a randomized trial","secondary_title":"JAMA","volume":"300","number":"13","pages":"1532-1543","edition":"10/2/2008","date":"10-Jan","short_title":"Effects of a reduced dose schedule and intramuscular administration of anthrax vaccine adsorbed on immunogenicity and safety at 7 months: a randomized trial","isbn_issn":"1538-3598 (Electronic): 0098-7484 (Linking)","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Laboratory Sciences - Laboratory Safety:","custom_8":"7:49","accession_number":"18827210","keywords":"Adult: Anthrax Vaccines/ administration & dosage/adverse effects/ immunology: Antibodies, Bacterial/immunology: Bacillus anthracis/immunology: Double-Blind Method: Drug Administration Schedule: Female: Humans: Immunoglobulin G/immunology: Injections, In","abstract":"CONTEXT: In 1999, the US Congress directed the Centers for Disease Control and Prevention to conduct a pivotal safety and efficacy study of anthrax vaccine adsorbed (AVA). OBJECTIVE: To determine the effects on serological responses and injection site adverse events (AEs) resulting from changing the route of administration of AVA from subcutaneous (s.q.) to intramuscular (i.m.) and omitting the week 2 dose from the licensed schedule. DESIGN, SETTING, AND PARTICIPANTS: Assessment of the first 1005 enrollees in a multisite, randomized, double-blind, noninferiority, phase 4 human clinical trial (ongoing from May 2002). INTERVENTION: Healthy adults received AVA by the s.q. (reference group) or i.m. route at 0, 2, and 4 weeks and 6 months (4-SQ or 4-IM; n = 165-170 per group) or at a reduced 3-dose schedule (3-IM; n = 501). A control group (n = 169) received saline injections at the same time intervals. MAIN OUTCOME MEASURES: Noninferiority at week 8 and month 7 of anti-protective antigen IgG geometric mean concentration (GMC), geometric mean titer (GMT), and proportion of responders with a 4-fold rise in titer (%4 x R). Reactogenicity outcomes were proportions of injection site and systemic AEs. RESULTS: At week 8, the 4-IM group (GMC, 90.8 microg/mL; GMT, 1114.8; %4 x R, 97.7) was noninferior to the 4-SQ group (GMC, 105.1 microg/mL; GMT, 1315.4; %4 x R, 98.8) for all 3 primary end points. The 3-IM group was noninferior for only the %4 x R (GMC, 52.2 microg/mL; GMT, 650.6; %4 x R, 94.4). At month 7, all groups were noninferior to the licensed regimen for all end points. Solicited injection site AEs assessed during examinations occurred at lower proportions in the 4-IM group compared with 4-SQ. The odds ratio for ordinal end point pain reported immediately after injection was reduced by 50% for the 4-IM vs 4-SQ groups (P < .001). Route of administration did not significantly influence the occurrence of systemic AEs. CONCLUSIONS: The 4-IM and 3-IM regimens of AVA provided noninferior immunological priming by month 7 when compared with the 4-SQ licensed regimen. Intramuscular administration significantly reduced the occurrence of injection site AEs. Trial Registration clinicaltrials.gov Identifier: NCT00119067.","notes":"Marano, Nina: Plikaytis, Brian D: Martin, Stacey W: Rose, Charles: Semenova, Vera A: Martin, Sandra K: Freeman, Alison E: Li, Han: Mulligan, Mark J: Parker, Scott D: Babcock, Janiine: Keitel, Wendy: El Sahly, Hana: Poland, Gregory A: Jacobson, Robert M: Keyserling, Harry L: Soroka, Stephen D: Fox, Sarah P: Stamper, John L: McNeil, Michael M: Perkins, Bradley A: Messonnier, Nancy: Quinn, Conrad P: Anthrax Vaccine Research Program Working Group: Clinical Trial, Phase IV: Comparative Study: Multicenter Study: Randomized Controlled Trial: Research Support, Non-U.S. Gov't: Research Support, U.S. Gov't, P.H.S.: United States: JAMA. 2008 Oct 1;300(13):1532-43. doi: 10.1001/jama.300.13.1532.","url":"http://www.ncbi.nlm.nih.gov/pubmed/18827210/?otool=cdciclib","author_address":"Centers for Disease Control and Prevention, Atlanta, GA 30333, USA.","database_provider":"NLM","language":"eng","doi":"10.1001/jama.300.13.1532"}
,{"record_number":"34081","reference_type":"Generic","author":"Wright, J. G. P., B. D.,  Rose, C. E.,  Parker, S. D.,  Babcock, J.,  Keitel, W.,  El Sahly, H.,  et al.,","year":"2014","title":"Effect of reduced dose schedules and intramuscular injection of anthrax vaccine adsorbed on immunological response and safety profile: a randomized trial","secondary_title":"Vaccine","volume":"32","number":"8","pages":"1019-1028","edition":"1/1/2014","date":"2-Dec","short_title":"Effect of reduced dose schedules and intramuscular injection of anthrax vaccine adsorbed on immunological response and safety profile: a randomized trial","isbn_issn":"1873-2518 (Electronic): 0264-410X (Linking)","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Laboratory Sciences - Laboratory Safety:","custom_8":"7:49","accession_number":"24373307","keywords":"Adult: Anthrax/ prevention & control: Anthrax Vaccines/ administration & dosage: Antibodies, Bacterial/blood: Antibody Formation: Double-Blind Method: Female: Humans: Immunization, Secondary: Immunoglobulin G/blood: Injections, Intramuscular: Male: Midd","abstract":"OBJECTIVE: We evaluated an alternative administration route, reduced schedule priming series, and increased intervals between booster doses for anthrax vaccine adsorbed (AVA). AVA's originally licensed schedule was 6 subcutaneous (SQ) priming injections administered at months (m) 0, 0.5, 1, 6, 12 and 18 with annual boosters; a simpler schedule is desired. METHODS: Through a multicenter randomized, double blind, non-inferiority Phase IV human clinical trial, the originally licensed schedule was compared to four alternative and two placebo schedules. 8-SQ group participants received 6 SQ injections with m30 and m42 \"annual\" boosters; participants in the 8-IM group received intramuscular (IM) injections according to the same schedule. Reduced schedule groups (7-IM, 5-IM, 4-IM) received IM injections at m0, m1, m6; at least one of the m0.5, m12, m18, m30 vaccine doses were replaced with saline. All reduced schedule groups received a m42 booster. Post-injection blood draws were taken two to four weeks following injection. Non-inferiority of the alternative schedules was compared to the 8-SQ group at m2, m7, and m43. Reactogenicity outcomes were proportions of injection site and systemic adverse events (AEs). RESULTS: The 8-IM group's m2 response was non-inferior to the 8-SQ group for the three primary endpoints of anti-protective antigen IgG geometric mean concentration (GMC), geometric mean titer, and proportion of responders with a 4-fold rise in titer. At m7 anti-PA IgG GMCs for the three reduced dosage groups were non-inferior to the 8-SQ group GMCs. At m43, 8-IM, 5-IM, and 4-IM group GMCs were superior to the 8-SQ group. Solicited injection site AEs occurred at lower proportions in the IM group compared to SQ. Route of administration did not influence the occurrence of systemic AEs. A 3 dose IM priming schedule with doses administered at m0, m1, and m6 elicited long term immunological responses and robust immunological memory that was efficiently stimulated by a single booster vaccination at 42 months. CONCLUSIONS: A priming series of 3 intramuscular doses administered at m0, m1, and m6 with a triennial booster was non-inferior to more complex schedules for achieving antibody response.","notes":"Wright, Jennifer G: Plikaytis, Brian D: Rose, Charles E: Parker, Scott D: Babcock, Janiine: Keitel, Wendy: El Sahly, Hana: Poland, Gregory A: Jacobson, Robert M: Keyserling, Harry L: Semenova, Vera A: Li, Han: Schiffer, Jarad: Dababneh, Hanan: Martin, Sandra K: Martin, Stacey W: Marano, Nina: Messonnier, Nancy E: Quinn, Conrad P: Multicenter Study: Randomized Controlled Trial: Research Support, U.S. Gov't, P.H.S.: Netherlands: Vaccine. 2014 Feb 12;32(8):1019-28. doi: 10.1016/j.vaccine.2013.10.039. Epub 2013 Dec 25.","url":"http://www.ncbi.nlm.nih.gov/pubmed/24373307/?otool=cdciclib","author_address":"Centers for Disease Control and Prevention, 1600 Clifton Road, Atlanta, GA 30333, United States. Electronic address: jgwright@cdc.gov.: Centers for Disease Control and Prevention, 1600 Clifton Road, Atlanta, GA 30333, United States.: Alabama Vaccine Research Clinic, University of Alabama at Birmingham, 908 20th Street South, Birmingham, AL 35294-2050, United States.: Walter Reed Army Institute for Research, 503 Robert Grant Avenue, Silver Springs, MD 20910-7500, United States.: Departments of Molecular Virology & Microbiology and Medicine, Baylor College of Medicine, One Baylor Plaza, Houston, TX 77030, United States.: Mayo Clinic and Foundation, 611C Guggenheim Building, 200 First Street SW, Rochester, MN 55905, United States.: Emory University School of Medicine, 2015 Uppergate Drive, Atlanta, GA 30322, United States.","name_of_database":"PubMed","database_provider":"NLM","language":"eng","doi":"10.1016/j.vaccine.2013.10.039"}
,{"record_number":"34088","reference_type":"Generic","author":"Bower, W. A. H., K.,  Pillai, S.,  Guarnizo, J.,  Meaney-Delman, D.,","year":"2015","title":"Clinical framework and medical countermeasure use during an anthrax mass-casualty incident","secondary_title":"MMWR Recomm Rep","volume":"64","number":"4","pages":"44583","edition":"12/4/2015","short_title":"Clinical framework and medical countermeasure use during an anthrax mass-casualty incident","alternate_title":"MMWR. Recommendations and reports : Morbidity and mortality weekly report. Recommendations and reports / Centers for Disease Control","isbn_issn":"1057-5987","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"7:49","accession_number":"26632963","abstract":"In 2014, CDC published updated guidelines for the prevention and treatment of anthrax (Hendricks KA, Wright ME, Shadomy SV, et al. Centers for Disease Control and Prevention expert panel meetings on prevention and treatment of anthrax in adults. Emerg Infect Dis 2014;20[2]. Available at http://wwwnc.cdc.gov/eid/article/20/2/13-0687_article.htm). These guidelines provided recommended best practices for the diagnosis and treatment of persons with naturally occurring or bioterrorism-related anthrax in conventional medical settings. An aerosolized release of Bacillus anthracis spores over densely populated areas could become a mass-casualty incident. To prepare for this possibility, the U.S. government has stockpiled equipment and therapeutics (known as medical countermeasures [MCMs]) for anthrax prevention and treatment. However, previously developed, publicly available clinical recommendations have not addressed the use of MCMs or clinical management during an anthrax mass-casualty incident, when the number of patients is likely to exceed the ability of the health care infrastructure to provide conventional standards of care and supplies of MCMs might be inadequate to meet the demand required. To address this gap, in 2013, CDC conducted a series of systematic reviews of the scientific literature on anthrax to identify evidence that could help clinicians and public health authorities set guidelines for intravenous antimicrobial and antitoxin use, diagnosis of anthrax meningitis, and management of common anthrax-specific complications in the setting of a mass-casualty incident. Evidence from these reviews was presented to professionals with expertise in anthrax, critical care, and disaster medicine during a series of workgroup meetings that were held from August 2013 through March 2014. In March 2014, a meeting was held at which 102 subject matter experts discussed the evidence and adapted the existing best practices guidance to a clinical use framework for the judicious, efficient, and rational use of stockpiled MCMs for the treatment of anthrax during a mass-casualty incident, which is described in this report. This report addresses elements of hospital-based acute care, specifically antitoxins and intravenous antimicrobial use, and the diagnosis and management of common anthrax-specific complications during a mass-casualty incident. The recommendations in this report should be implemented only after predefined triggers have been met for shifting from conventional to contingency or crisis standards of care, such as when the magnitude of cases might lead to impending shortages of intravenous antimicrobials, antitoxins, critical care resources (e.g., chest tubes and chest drainage systems), or diagnostic capability. This guidance does not address primary triage decisions, anthrax postexposure prophylaxis, hospital bed or workforce surge capacity, or the logistics of dispensing MCMs. Clinicians, hospital administrators, state and local health officials, and planners can use these recommendations to assist in the development of crisis protocols that will ensure national preparedness for an anthrax mass-casualty incident.","notes":"1545-8601: Prepared by: Bower, William A: Hendricks, Katherine: Pillai, Satish: Guarnizo, Julie: Meaney-Delman, Dana: Journal Article: United States: MMWR Recomm Rep. 2015 Dec 4;64(4):1-22. doi: 10.15585/mmwr.rr6404a1.","url":"http://www.ncbi.nlm.nih.gov/pubmed/26632963/?otool=cdciclib","name_of_database":"PubMed MMWR strategy","database_provider":"NLM","language":"eng","doi":"10.15585/mmwr.rr6404a1"}
,{"record_number":"34170","reference_type":"Generic","author":"Pillai, S. H., E.,  Guarnizo, J. T.,  Hoyle, J.,  Katharios-Lanwermeyer, S.,  Turski, T. K.,  Bower, W.,  Hendricks, K.,  Meaney-Delman, D.,","year":"2015","title":"Antimicrobial treatment for systemic anthrax: Analysis of cases from 1945 to 2014 identified through a systematic literature review","secondary_title":"Health Secur","edition":"12/2/2015","date":"12-Jan","short_title":"Antimicrobial treatment for systemic anthrax: Analysis of cases from 1945 to 2014 identified through a systematic literature review","alternate_title":"Health security","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"7:49 GH","accession_number":"26623698","abstract":"Systemic anthrax is associated with high mortality. Current national guidelines, developed for the individualized treatment of systemic anthrax, outline the use of combination intravenous antimicrobials for a minimum of 2 weeks, bactericidal and protein synthesis inhibitor antimicrobials for all cases of systemic anthrax, and at least 3 antimicrobials with good blood-brain barrier penetration for anthrax meningitis. However, in an anthrax mass casualty incident, large numbers of anthrax cases may create challenges in meeting antimicrobial needs. To further inform our understanding of the role of antimicrobials in treating systemic anthrax, a systematic review of the English-language literature was conducted to identify cases of systemic anthrax treated with antimicrobials for which a clinical outcome was recorded. A total of 149 cases of systemic anthrax were identified. Among the identified 59 cases of cutaneous anthrax, 33 were complicated by meningitis (76% mortality), while 26 simply had evidence of the systemic inflammatory response syndrome (4% mortality); 21 of 26 (81%) of this latter group received monotherapy. Subsequent analysis regarding combination antimicrobial therapy was restricted to the remaining 123 cases of more severe anthrax (overall 67% mortality). Recipients of combination bactericidal and protein synthesis inhibitor therapy had a 45% survival versus 28% in the absence of combination therapy (p = 0.07). For meningitis cases (n = 77), survival was greater for those receiving 3 or more antimicrobials over the course of treatment (3 of 4; 75%), compared to receipt of 1 or 2 antimicrobials (12 of 73; 16%) (p = 0.02). Median parenteral antimicrobial duration was 14 days. Combination bactericidal and protein synthesis inhibitor therapy may be appropriate in severe anthrax disease, particularly anthrax meningitis, in a mass casualty incident.","notes":"2326-5108: Pillai, Satish: Huang, Eileen: Guarnizo, Julie T: Hoyle, Jamechia: Katharios-Lanwermeyer, Stefan: Turski, Theresa K: Bower, William: Hendricks, Kate: Meaney-Delman, Dana: Journal article: Health Secur. 2015 Dec 1.","url":"http://www.ncbi.nlm.nih.gov/pubmed/26623698/?otool=cdciclib","author_address":"Satish K. Pillai, MD, is Medical Officer; Eileen Huang, MPH, is an ORISE Fellow, Office of the Director; Julie T. Guarnizo is a Public Health Advisor; and Dana Meaney-Delman, MD, MPH, is Senior Medical Advisor for Preparedness, Office of the Director; all in the National Center for Emerging and Zoonotic Infectious Diseases/Division of Preparedness and Emerging Infections, Centers for Disease Control and Prevention (CDC), Atlanta, Georgia . Stefan Katharios-Lanwermeyer, MPH, is an ORISE Fellow; William A. Bower, MD, is a Captain, US Public Health Service, and Epidemiology Team Lead; and Kate Hendricks, MD, MPH&TM, is Medical Officer; all in the Bacterial Special Pathogens Branch, Division of High-Consequence Pathogens and Pathology, CDC, Atlanta. Theresa K. Turski, MPH, is a Public Health Advisor, Division of Global Health Protection, CDC, Atlanta. Jamechia D. Hoyle, DHSc, MPH, MS, is Adjunct Faculty, Department of Global and Community Health, George Mason University, Fairfax, Virginia.","name_of_database":"PubMed 11/28-12/8/2015 Update","database_provider":"NLM","language":"Eng","doi":"10.1089/hs.2015.0033"}
,{"record_number":"34662","reference_type":"Generic","author":"King, J. C., Jr.,  Gao, Y.,  Quinn, C. P.,  Dreier, T. M.,  Vianney, C.,  Espeland, E. M.,","year":"2015","title":"Evaluation of anthrax vaccine safety in 18 to 20 year olds: a first step towards age de-escalation studies in adolescents","secondary_title":"Vaccine","volume":"33","number":"21","pages":"2470-2476","edition":"4/8/2015","date":"15-05","short_title":"Evaluation of anthrax vaccine safety in 18 to 20 year olds: a first step towards age de-escalation studies in adolescents","isbn_issn":"1873-2518 (Electronic): 0264-410X (Linking)","custom_1":"CDC Authored Publications","custom_2":"Immunity and Immunization","custom_8":"8:05","accession_number":"25850022","keywords":"Adolescent: Adult: Age Factors: Anthrax/ prevention & control: Anthrax Vaccines/administration & dosage/ adverse effects/immunology: Antibodies, Bacterial/blood: Drug-Related Side Effects and Adverse Reactions/epidemiology/ pathology: Female: Humans: In","abstract":"BACKGROUND/OBJECTIVES: Anthrax vaccine adsorbed (AVA, BioThrax((R))) is recommended for post-exposure prophylaxis administration for the US population in response to large-scale Bacillus anthracis spore exposure. However, no information exists on AVA use in children and ethical barriers exist to performing pre-event pediatric AVA studies. A Presidential Ethics Commission proposed a potential pathway for such studies utilizing an age de-escalation process comparing safety and immunogenicity data from 18 to 20 year-olds to older adults and if acceptable proceeding to evaluations in younger adolescents. We conducted exploratory summary re-analyses of existing databases from 18 to 20 year-olds (n=74) compared to adults aged 21 to 29 years (n=243) who participated in four previous US government funded AVA studies. METHODS: Data extracted from studies included elicited local injection-site and systemic adverse events (AEs) following AVA doses given subcutaneously at 0, 2, and 4 weeks. Additionally, proportions of subjects with >/=4-fold antibody rises from baseline to post-second and post-third AVA doses (seroresponse) were obtained. RESULTS: Rates of any elicited local AEs were not significantly different between younger and older age groups for local events (79.2% vs. 83.8%, P=0.120) or systemic events (45.4% vs. 50.5%, P=0.188). Robust and similar proportions of seroresponses to vaccination were observed in both age groups. CONCLUSIONS: AVA was safe and immunogenic in 18 to 20 year-olds compared to 21 to 29 year-olds. These results provide initial information to anthrax and pediatric specialists if AVA studies in adolescents are required.","notes":"King, James C Jr: Gao, Yonghong: Quinn, Conrad P: Dreier, Thomas M: Vianney, Cabrini: Espeland, Eric M: HHS100200700037C/PHS HHS/United States: Research Support, U.S. Gov't, P.H.S.: Netherlands: Vaccine. 2015 May 15;33(21):2470-6. doi: 10.1016/j.vaccine.2015.03.071. Epub 2015 Apr 5.","url":"http://www.ncbi.nlm.nih.gov/pubmed/25850022/?otool=cdciclib","author_address":"Tunnell Contracting, Serving the Mission of: Health and Human Services (HHS)/Assistant Secretary for Preparedness and Response(ASPR)/Biomedical Advanced Research and Development Authority(BARDA), Thomas P. O'Neill Federal Building (FOB8), 200 C Street, SW, Washington, DC 20024. Electronic address: james.king@hhs.gov.: Health and Human Services (HHS)/Assistant Secretary for Preparedness and Response(ASPR)/Biomedical Advanced Research and Development Authority(BARDA), United States.: MPIR Laboratory, MVPD/DBD/NCIRD, Centers for Disease Control & Prevention, MS-D01, Bldg. 23, Room 8-161, 1600 Clifton Road, Atlanta, GA 30333, United States.: Tunnell Contracting, Serving the Mission of: Health and Human Services (HHS)/Assistant Secretary for Preparedness and Response(ASPR)/Biomedical Advanced Research and Development Authority(BARDA), Thomas P. O'Neill Federal Building (FOB8), 200 C Street, SW, Washington, DC 20024.: GAP Solutions Inc. Supporting the Mission of Health and Human Services (HHS)/Assistant Secretary for Preparedness and Response(ASPR)/Biomedical Advanced Research and Development Authority(BARDA), United States.","name_of_database":"PubMed","database_provider":"NLM","language":"eng","doi":"10.1016/j.vaccine.2015.03.071"}
,{"record_number":"34956","reference_type":"Generic","author":"Quinn, C. P. S., C. L.,  Schiffer, J. M.,  Niemuth, N. A.,  Semenova, V. A.,  Li, H.,  Rudge, T. L.,  Brys, A. M.,  Mittler, R. S.,  Ibegbu, C. C.,  Wrammert, J.,  Ahmed, R.,  Parker, S. D.,  Babcock, J.,  Keitel, W.,  Poland, G. A.,  Keyserling, H. L.,  Sahly, H. E.,  Jacobson, R. M.,  Marano, N.,  Plikaytis, B. D.,  Wright, J. G.,","year":"2016","title":"Humoral and cell mediated immune responses to alternate booster schedules of anthrax vaccine adsorbed in humans","secondary_title":"Clin Vaccine Immunol","edition":"2/13/2016","date":"2-Oct","short_title":"Humoral and cell mediated immune responses to alternate booster schedules of anthrax vaccine adsorbed in humans","isbn_issn":"1556-679X (Electronic): 1556-679X (Linking)","custom_1":"CDC Authored Publications","custom_2":"Immunity and Immunization","custom_8":"8:09","accession_number":"26865594","abstract":"Protective antigen (PA)-specific antibody and cell mediated immune (CMI) responses to annual and alternate booster schedules of Anthrax Vaccine Adsorbed (AVA, BioThrax(R)) were characterized in humans over 43 months. Study participants received 1 of 6 vaccination schedules: 3-dose intramuscular (IM) priming series (0, 1, 6 months) with a single booster at 42 months (4-IM); 3-dose IM priming with boosters at 18 and 42 months (5-IM); 3-dose IM priming with boosters at 12, 18, 30 and 42 months (7-IM); the 1970 licensed priming series of 6 doses (0, 0.5, 1, 6, 12, 18 months) and two annual boosters (30, 42 months) administered either subcutaneous (SQ) (8-SQ) or IM (8-IM); or saline placebo control at all eight time-points.Antibody response profiles included serum anti-PA IgG levels, subclass distributions, avidity, and lethal toxin neutralization activity (TNA). CMI profiles included frequencies of IFN-gamma and IL-4 secreting cells and memory B cells (MBCs), lymphocyte proliferation indices (SI) and induction of IFN-gamma, IL-2, IL-4, IL-6, IL-1beta and TNF-alpha mRNA levels.All active schedules elicited high avidity PA-specific IgG, TNA, MBCs and T cell responses with a mixed Th1/Th2 profile and Th2 dominance. Anti-PA IgG and TNA were highly correlated (e.g. Month 7, r2 = 0.86, p < 0.0001, log10 transformed) and declined in the absence of boosters. Boosters administered IM generated the highest antibody responses. Increasing time intervals between boosters generated faster and statistically superior antibody responses to the final Month 42 vaccination. CMI responses to the 3-dose IM priming remained elevated up to 43 Months.","notes":"Quinn, Conrad P: Sabourin, Carol L: Schiffer, Jarad M: Niemuth, Nancy A: Semenova, Vera A: Li, Han: Rudge, Thomas L: Brys, April M: Mittler, Robert S: Ibegbu, Chris C: Wrammert, Jens: Ahmed, Rafi: Parker, Scott D: Babcock, Janiine: Keitel, Wendy: Poland, Gregory A: Keyserling, Harry L: Sahly, Hana El: Jacobson, Robert M: Marano, Nina: Plikaytis, Brian D: Wright, Jennifer G: Clin Vaccine Immunol. 2016 Feb 10. pii: CVI.00696-15.","url":"http://www.ncbi.nlm.nih.gov/pubmed/26865594/?otool=cdciclib","author_address":"Centers for Disease Control and Prevention (CDC), Atlanta, GA 30333 cquinn@cdc.gov.: Battelle, 505 King Avenue, Columbus, OH 43210.: Centers for Disease Control and Prevention (CDC), Atlanta, GA 30333.: Emory Vaccine Center and Yerkes National Primate Center, Emory University, Atlanta, GA 30329. Emory Vaccine Center and Yerkes National Primate Center, Emory University, Atlanta, GA 30329.: Emory Vaccine Center and Yerkes National Primate Center, Emory University, Atlanta, GA 30329.: University of Alabama at Birmingham, Birmingham, AL.: Walter Reed Army Institute for Research, Silver Spring, MD.: Baylor College of Medicine, Houston, TX.: Mayo Clinic, Rochester, MN.: Emory University School of Medicine, Atlanta, GA.","name_of_database":"PubMed","database_provider":"NLM","language":"Eng","doi":"10.1128/cvi.00696-15"}
,{"record_number":"35203","reference_type":"Generic","author":"Schiffer, J. M. M., M. M.,  Quinn, C. P.,","year":"2016","title":"Recent developments in the understanding and use of anthrax vaccine adsorbed: Achieving more with less","secondary_title":"Expert Rev Vaccines","edition":"3/5/2016","date":"3-Apr","short_title":"Recent developments in the understanding and use of anthrax vaccine adsorbed: Achieving more with less","alternate_title":"Expert review of vaccines","isbn_issn":"1476-0584","custom_1":"CDC Authored Publications","custom_2":"Immunity and Immunization","custom_8":"8:12","accession_number":"26942655","keywords":"Anthrax: Antibody formation: Bacillus anthracis: BioThrax: Correlates of protection: Humans: Nonhuman primate: Post-exposure prophylaxis: Pre-exposure prophylaxis: Vaccines","abstract":"Anthrax Vaccine Adsorbed (AVA, BioThrax) is the only Food and Drug Administration (FDA) approved vaccine for the prevention of anthrax in humans. Recent improvements in pre-exposure prophylaxis (PrEP) use of AVA include intramuscular (IM) administration and simplification of the priming series to three doses over six months. Administration IM markedly reduced the frequency, severity and duration of injection site reactions. Refinement of animal models for inhalation anthrax, identification of immune correlates of protection and cross-species modeling have created opportunities for reductions in the PrEP booster schedule and were pivotal in FDA approval of a post-exposure prophylaxis (PEP) indication. Clinical and nonclinical studies of accelerated PEP schedules and divided doses may provide prospects for shortening the PEP antimicrobial treatment period. These data may assist in determining feasibility of expanded coverage in a large-scale emergency when vaccine demand may exceed availability. Enhancements to the AVA formulation may broaden the vaccine's PEP application.","notes":"1744-8395: Schiffer, Jarad M: McNeil, Michael M: Quinn, Conrad P: Journal article: Expert Rev Vaccines. 2016 Mar 4.","url":"http://www.ncbi.nlm.nih.gov/pubmed/26942655/?otool=cdciclib","author_address":"a MPIR Laboratory, Meningitis and Vaccine Preventable Diseases Branch, Division of Bacterial Diseases , National Center for Immunization and Respiratory Diseases, Centers for Disease Control and Prevention (CDC) , 1600 Clifton Road, Atlanta , GA 30329 .: b Immunization Safety Office, Division of Healthcare Quality Promotion , National Center for Emerging and Zoonotic Infectious Diseases , 1825 Century Center, Century Boulevard, Atlanta , GA 30345 .: c Meningitis and Vaccine Preventable Diseases Branch, Division of Bacterial Diseases , National Center for Immunization and Respiratory Diseases, Centers for Disease Control and Prevention (CDC) , 1600 Clifton Road, Atlanta , GA 30329 .","database_provider":"NLM","language":"Eng","doi":"10.1586/14760584.2016.1162104"}
,{"record_number":"35461","reference_type":"Generic","author":"Katharios-Lanwermeyer, S. H., J. E.,  Person, M.,  Sejvar, J.,  Haberling, D.,  Tubbs, H.,  Meaney-Delman, D.,  Pillai, S. K.,  Hupert, N.,  Bower, W. A.,  Hendricks, K.,","year":"2016","title":"Identifying meningitis during an anthrax mass casualty incident: Systematic review of systemic anthrax since 1880","secondary_title":"Clin Infect Dis","edition":"3/31/2016","date":"29-03","short_title":"Identifying meningitis during an anthrax mass casualty incident: Systematic review of systemic anthrax since 1880","isbn_issn":"1537-6591 (Electronic): 1058-4838 (Linking)","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"8:15","accession_number":"27025833","abstract":"BACKGROUND: Bacillus anthracis, the causative agent of anthrax, is a potential bioterrorism agent. Anthrax meningitis is a common manifestation ofB. anthracisinfection, has high mortality, and requires more aggressive treatment than anthrax without meningitis. Rapid identification and treatment of anthrax meningitis are essential for successful management of an anthrax mass casualty incident. METHODS: Three hundred six published reports from 1880 through 2013 met pre-defined inclusion criteria. We calculated descriptive statistics for abstracted cases and conducted multivariable regression on separate derivation and validation cohorts to identify clinical diagnostic and prognostic factors for anthrax meningitis. RESULTS: One hundred thirty-two of 363 (36%) cases with systemic anthrax met anthrax meningitis criteria. Severe headache, altered mental status, meningeal signs, and other neurological signs at presentation independently predicted meningitis in the derivation cohort and were tested as a four-item assessment tool for use during anthrax mass casualty incidents. Presence of any one factor on admission had a sensitivity for finding anthrax meningitis of 89% (83%) in the adult (pediatric) validation cohorts. Anthrax meningitis was unlikely in the absence of any of these signs or symptoms (LR-=0.12 [0.19] for adult [pediatric] cohorts), while presence of two or more made meningitis very likely (LR+=26.5 [30.0]). Survival of anthrax meningitis was predicted by treatment with a bactericidal agent (P=0.005) and use of multiple antimicrobials (P=0.01). CONCLUSIONS: We developed an evidence-based assessment tool for screening patients for meningitis during an anthrax mass casualty incident; its use could improve both patient outcomes and resource allocation in such an event.","notes":"Katharios-Lanwermeyer, Stefan: Holty, Jon-Erik: Person, Marissa: Sejvar, James: Haberling, Dana: Tubbs, Heather: Meaney-Delman, Dana: Pillai, Satish K: Hupert, Nathaniel: Bower, William A: Hendricks, Katherine: Clin Infect Dis. 2016 Mar 29. pii: ciw184.","url":"http://www.ncbi.nlm.nih.gov/pubmed/27025833/?otool=cdciclib","author_address":"Division of High-consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.: Pulmonary, Critical Care and Sleep Medicine Section, VA Palo Alto Healthcare System Department of Medicine, Stanford University, Stanford, CA, USA.: Division of Preparedness and Emerging Infections, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.: National Center for Emerging Infections Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.: Departments of Healthcare Policy and Research and of Medicine, Weill Medical College, Cornell University; New York Presbyterian Hospital, New York, NY, USA.","name_of_database":"PUBMED","database_provider":"NLM","language":"Eng","doi":"10.1093/cid/ciw184"}
,{"record_number":"35784","reference_type":"Generic","author":"Quinn, C. P. S., C. L.,  Schiffer, J. M.,  Niemuth, N. A.,  Semenova, V. A.,  Li, H.,  Rudge, T. L.,  Brys, A. M.,  Mittler, R. S.,  Ibegbu, C. C.,  Wrammert, J.,  Ahmed, R.,  Parker, S. D.,  Babcock, J.,  Keitel, W.,  Poland, G. A.,  Keyserling, H. L.,  El Sahly, H.,  Jacobson, R. M.,  Marano, N.,  Plikaytis, B. D.,  Wright, J. G.,","year":"2016","title":"Humoral and cell-mediated immune responses to alternate booster schedules of anthrax vaccine adsorbed in humans","secondary_title":"Clin Vaccine Immunol","volume":"23","number":"4","pages":"326-338","edition":"2/13/2016","date":"Apr","short_title":"Humoral and cell-mediated immune responses to alternate booster schedules of anthrax vaccine adsorbed in humans","isbn_issn":"1556-679X (Electronic): 1556-679X (Linking)","custom_1":"CDC Authored Publications","custom_2":"Immunity and Immunization","custom_8":"8:21","accession_number":"26865594","abstract":"Protective antigen (PA)-specific antibody and cell-mediated immune (CMI) responses to annual and alternate booster schedules of anthrax vaccine adsorbed (AVA; BioThrax) were characterized in humans over 43 months. Study participants received 1 of 6 vaccination schedules: a 3-dose intramuscular (IM) priming series (0, 1, and 6 months) with a single booster at 42 months (4-IM); 3-dose IM priming with boosters at 18 and 42 months (5-IM); 3-dose IM priming with boosters at 12, 18, 30, and 42 months (7-IM); the 1970 licensed priming series of 6 doses (0, 0.5, 1, 6, 12, and 18 months) and two annual boosters (30 and 42 months) administered either subcutaneously (SQ) (8-SQ) or IM (8-IM); or saline placebo control at all eight time points. Antibody response profiles included serum anti-PA IgG levels, subclass distributions, avidity, and lethal toxin neutralization activity (TNA). CMI profiles included frequencies of gamma interferon (IFN-gamma)- and interleukin 4 (IL-4)-secreting cells and memory B cells (MBCs), lymphocyte stimulation indices (SI), and induction of IFN-gamma, IL-2, IL-4, IL-6, IL-1beta, and tumor necrosis factor alpha (TNF-alpha) mRNA. All active schedules elicited high-avidity PA-specific IgG, TNA, MBCs, and T cell responses with a mixed Th1-Th2 profile and Th2 dominance. Anti-PA IgG and TNA were highly correlated (e.g., month 7,r(2)= 0.86,P< 0.0001, log10transformed) and declined in the absence of boosters. Boosters administered IM generated the highest antibody responses. Increasing time intervals between boosters generated antibody responses that were faster than and superior to those obtained with the final month 42 vaccination. CMI responses to the 3-dose IM priming remained elevated up to 43 months. (This study has been registered at ClinicalTrials.gov under registration no. NCT00119067.).","notes":"Quinn, Conrad P: Sabourin, Carol L: Schiffer, Jarad M: Niemuth, Nancy A: Semenova, Vera A: Li, Han: Rudge, Thomas L: Brys, April M: Mittler, Robert S: Ibegbu, Chris C: Wrammert, Jens: Ahmed, Rafi: Parker, Scott D: Babcock, Janiine: Keitel, Wendy: Poland, Gregory A: Keyserling, Harry L: El Sahly, Hana: Jacobson, Robert M: Marano, Nina: Plikaytis, Brian D: Wright, Jennifer G: United States: Clin Vaccine Immunol. 2016 Apr 4;23(4):326-38. doi: 10.1128/CVI.00696-15. Print 2016 Apr.","url":"http://www.ncbi.nlm.nih.gov/pubmed/26865594/?otool=cdciclib","author_address":"Centers for Disease Control and Prevention, Atlanta, Georgia, USA cquinn@cdc.gov.: Battelle, Columbus, Ohio, USA.: Centers for Disease Control and Prevention, Atlanta, Georgia, USA.: Emory Vaccine Center, Emory University, Atlanta, Georgia, USA Yerkes National Primate Center, Emory University, Atlanta, Georgia, USA.: Emory Vaccine Center, Emory University, Atlanta, Georgia, USA.: University of Alabama at Birmingham, Birmingham, Alabama, USA.: Walter Reed Army Institute for Research, Silver Spring, Maryland, USA.: Baylor College of Medicine, Houston, Texas, USA.: Mayo Clinic, Rochester, Minnesota, USA.: Emory University School of Medicine, Atlanta, Georgia, USA.","name_of_database":"PubMed","database_provider":"NLM","language":"eng","doi":"10.1128/cvi.00696-15"}
,{"record_number":"35795","reference_type":"Generic","author":"Sivko, G. S. S., G. V.,  Tordoff, K. P.,  Taylor, K. L.,  Glaze, E.,  VanRaden, M.,  Schiffer, J. M.,  Hewitt, J. A.,  Quinn, C. P.,  Nuzum, E. O.,","year":"2016","title":"Evaluation of early immune response-survival relationship in cynomolgus macaques after anthrax vaccine adsorbed vaccination and Bacillus anthracis spore challenge","secondary_title":"Vaccine","edition":"5/8/2016","date":"5-Apr","short_title":"Evaluation of early immune response-survival relationship in cynomolgus macaques after anthrax vaccine adsorbed vaccination and Bacillus anthracis spore challenge","alternate_title":"Vaccine","isbn_issn":"0264-410x","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"8:21","accession_number":"27155494","keywords":"Anthrax: Bacillus anthracis: BioThrax: Correlates of protection","abstract":"Anthrax vaccine adsorbed (AVA, BioThrax) is approved by the US Food and Drug Administration for post-exposure prophylaxis (PEP) of anthrax in adults. The PEP schedule is 3 subcutaneous (SC) doses (0, 14 and 28 days), in conjunction with a 60 day course of antimicrobials. The objectives of this study were to understand the onset of protection from AVA PEP vaccination and to assess the potential for shortening the duration of antimicrobial treatment (http://www.phe.gov/Preparedness/mcm/phemce/Documents/2014-phemce-sip.pdf). We determined the efficacy against inhalation anthrax in nonhuman primates (NHP) of the first two doses of the PEP schedule by infectious challenge at the time scheduled for receipt of the third PEP dose (Day 28). Forty-eight cynomolgus macaques were randomized to five groups and vaccinated with serial dilutions of AVA on Days 0 and 14. NHP were exposed to Bacillus anthracis Ames spores on Day 28 (target dose 200 LD50 equivalents). Anti-protective antigen (PA) IgG and toxin neutralizing antibody (TNA) responses to vaccination and in post-challenge survivors were determined. Post-challenge blood and selected tissue samples were assessed for B. anthracis at necropsy or end of study (Day 56). Pre-challenge humoral immune responses correlated with survival, which ranged from 24 to 100% survival depending on vaccination group. Surviving, vaccinated animals had elevated anti-PA IgG and TNA levels for the duration of the study, were abacteremic, exhibited no apparent signs of infection, and had no gross or microscopic lesions. However, survivors had residual spores in lung tissues. We conclude that the first two doses of the PEP schedule provide high levels of protection by the scheduled timing of the third dose. These data may also support consideration of a shorter duration PEP antimicrobial regimen.","notes":"1873-2518: Sivko, G S: Stark, G V: Tordoff, K P: Taylor, K L: Glaze, E: VanRaden, M: Schiffer, J M: Hewitt, J A: Quinn, C P: Nuzum, E O: Journal article: Vaccine. 2016 May 4. pii: S0264-410X(16)30202-X. doi: 10.1016/j.vaccine.2016.04.048.","url":"http://www.ncbi.nlm.nih.gov/pubmed/27155494/?otool=cdciclib","author_address":"Battelle Memorial Institute, Columbus, OH 43201, USA. Electronic address: sivkog@battelle.org.: Battelle Memorial Institute, Columbus, OH 43201, USA.: Division of Microbiology and Infectious Diseases, National Institute of Allergy and Infectious Diseases, Bethesda, MD 20892-9825, USA.: Centers for Disease Control and Prevention, Atlanta, GA 30329-4027, USA.","name_of_database":"PubMed","database_provider":"NLM","language":"Eng","doi":"10.1016/j.vaccine.2016.04.048"}
,{"record_number":"36115","reference_type":"Generic","author":"Marston, C. K. I., H.,  Lee, P.,  Churchwell, G.,  Gumke, M.,  Stanek, D.,  Gee, J. E.,  Boyer, A. E.,  Gallegos-Candela, M.,  Barr, J. R.,  Li, H.,  Boulay, D.,  Cronin, L.,  Quinn, C. P.,  Hoffmaster, A. R.,","year":"2016","title":"Anthrax toxin-expressing Bacillus cereus isolated from an anthrax-like eschar","secondary_title":"PLoS One","volume":"11","number":"6","pages":"e0156987","edition":"6/4/2016","short_title":"Anthrax toxin-expressing Bacillus cereus isolated from an anthrax-like eschar","alternate_title":"PloS one","isbn_issn":"1932-6203","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"8:25","accession_number":"27257909","abstract":"Bacillus cereus isolates have been described harboring Bacillus anthracis toxin genes, most notably B. cereus G9241, and capable of causing severe and fatal pneumonias. This report describes the characterization of a B. cereus isolate, BcFL2013, associated with a naturally occurring cutaneous lesion resembling an anthrax eschar. Similar to G9241, BcFL2013 is positive for the B. anthracis pXO1 toxin genes, has a multi-locus sequence type of 78, and a pagA sequence type of 9. Whole genome sequencing confirms the similarity to G9241. In addition to the chromosome having an average nucleotide identity of 99.98% when compared to G9241, BcFL2013 harbors three plasmids with varying homology to the G9241 plasmids (pBCXO1, pBC210 and pBFH_1). This is also the first report to include serologic testing of patient specimens associated with this type of B. cereus infection which resulted in the detection of anthrax lethal factor toxemia, a quantifiable serum antibody response to protective antigen (PA), and lethal toxin neutralization activity.","notes":"1932-6203: Marston, Chung K: Ibrahim, Hisham: Lee, Philip: Churchwell, George: Gumke, Megan: Stanek, Danielle: Gee, Jay E: Boyer, Anne E: Gallegos-Candela, Maribel: Barr, John R: Li, Han: Boulay, Darbi: Cronin, Li: Quinn, Conrad P: Hoffmaster, Alex R: Journal Article: United States: PLoS One. 2016 Jun 3;11(6):e0156987. doi: 10.1371/journal.pone.0156987. eCollection 2016.","url":"http://www.ncbi.nlm.nih.gov/pubmed/27257909/?otool=cdciclib","author_address":"National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, GA, United States of America.: Villages Regional Hospital, Lady Lake, FL, United States of America.: Bureau of Public Health Laboratories, Florida Department of Health, Jacksonville, FL, United States of America.: Bureau of Epidemiology, Florida Department of Health, Tallahassee, FL, United States of America.: National Center for Environmental Health, Centers for Disease Control and Prevention, Atlanta, GA, United States of America.: National Center for Immunization and Respiratory Diseases, Centers for Disease Control and Prevention, Atlanta, GA, United States of America.","database_provider":"NLM","language":"eng","doi":"10.1371/journal.pone.0156987"}
,{"record_number":"36901","reference_type":"Generic","author":"Stark, G. V. S., G. S.,  VanRaden, M.,  Schiffer, J.,  Taylor, K. L.,  Hewitt, J. A.,  Quinn, C. P.,  Nuzum, E. O.,","year":"2016","title":"Cross-species prediction of human survival probabilities for accelerated anthrax vaccine absorbed (AVA) regimens and the potential for vaccine and antibiotic dose sparing","secondary_title":"Vaccine","edition":"8/26/2016","date":"22-08","short_title":"Cross-species prediction of human survival probabilities for accelerated anthrax vaccine absorbed (AVA) regimens and the potential for vaccine and antibiotic dose sparing","alternate_title":"Vaccine","isbn_issn":"0264-410x","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"8:36","accession_number":"27558619","keywords":"Anthrax: Bacillus anthracis: Bootstrap: Correlate of protection: Cross-species prediction: Logistic regression","abstract":"Anthrax vaccine adsorbed (AVA, BioThrax) was recently approved by the Food and Drug Administration (FDA) for a post-exposure prophylaxis (PEP) indication in adults 18-65 years of age. The schedule is three doses administered subcutaneous (SC) at 2-week intervals (0, 2, and 4weeks), in conjunction with a 60-day course of antimicrobials. The Public Health Emergency Medical Countermeasures Enterprise (PHEMCE) developed an animal model to support assessment of a shortened antimicrobial PEP duration following Bacillus anthracis exposure. A nonhuman primate (NHP) study was completed to evaluate the efficacy of a two dose anthrax vaccine absorbed (AVA) schedule (0, 2weeks) aerosol challenged with high levels of B. anthracis spores at week4- the time point at which humans would receive the third vaccination of the approved PEP schedule. Here we use logistic regression models to combine the survival data from the NHP study along with serum anthrax lethal toxin neutralizing activity (TNA) and anti-PA IgG measured by enzyme linked immunosorbent assay (ELISA) data to perform a cross-species analysis to estimate survival probabilities in vaccinated human populations at this time interval (week4 of the PEP schedule). The bridging analysis demonstrated that high levels of NHP protection also yield high predicted probability of human survival just 2weeks after the second dose of vaccine with the full or half antigen dose regimen. The absolute difference in probability of human survival between the full and half antigen dose was estimated to be at most approximately 20%, indicating that more investigation of the half-antigen dose for vaccine dose sparing strategies may be warranted.","notes":"1873-2518: Stark, G V: Sivko, G S: VanRaden, M: Schiffer, J: Taylor, K L: Hewitt, J A: Quinn, C P: Nuzum, E O: Journal article: Vaccine. 2016 Aug 22. pii: S0264-410X(16)30465-0. doi: 10.1016/j.vaccine.2016.06.041.","url":"http://www.ncbi.nlm.nih.gov/pubmed/27558619/?otool=cdciclib","author_address":"Battelle Memorial Institute, Columbus, OH 43201, USA. Electronic address: starkg@battelle.org.: Battelle Memorial Institute, Columbus, OH 43201, USA.: Division of Microbiology and Infectious Diseases, National Institute of Allergy and Infectious Diseases, Bethesda, MD 20892-9825, USA.: Centers for Disease Control and Prevention, Atlanta, GA 30329-4027, USA.","name_of_database":"PubMed","database_provider":"NLM","language":"Eng","doi":"10.1016/j.vaccine.2016.06.041"}
,{"record_number":"37666","reference_type":"Generic","author":"Semenova, V. A. S.-C., E.,  Maniatis, P.,  Epperson, M.,  Sabnis, A.,  Schiffer, J.,","year":"2016","title":"Validation of high throughput screening of human sera for detection of anti-PA IgG by Enzyme-Linked Immunosorbent Assay (ELISA) as an emergency response to an anthrax incident","secondary_title":"Biologicals","edition":"11/7/2016","date":"11-Jan","short_title":"Validation of high throughput screening of human sera for detection of anti-PA IgG by Enzyme-Linked Immunosorbent Assay (ELISA) as an emergency response to an anthrax incident","alternate_title":"Biologicals : journal of the International Association of Biological Standardization","isbn_issn":"1045-1056","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"8:47","accession_number":"27814939","keywords":"Anthrax: Emergency response: Human sera: Screening: Validation","abstract":"To improve surge testing capability for a response to a release of Bacillus anthracis, the CDC anti-Protective Antigen (PA) IgG Enzyme-Linked Immunosorbent Assay (ELISA) was re-designed into a high throughput screening format. The following assay performance parameters were evaluated: goodness of fit (measured as the mean reference standard r2), accuracy (measured as percent error), precision (measured as coefficient of variance (CV)), lower limit of detection (LLOD), lower limit of quantification (LLOQ), dilutional linearity, diagnostic sensitivity (DSN) and diagnostic specificity (DSP). The paired sets of data for each sample were evaluated by Concordance Correlation Coefficient (CCC) analysis. The goodness of fit was 0.999; percent error between the expected and observed concentration for each sample ranged from -4.6% to 14.4%. The coefficient of variance ranged from 9.0% to 21.2%. The assay LLOQ was 2.6 mug/mL. The regression analysis results for dilutional linearity data were r2 = 0.952, slope = 1.02 and intercept = -0.03. CCC between assays was 0.974 for the median concentration of serum samples. The accuracy and precision components of CCC were 0.997 and 0.977, respectively. This high throughput screening assay is precise, accurate, sensitive and specific. Anti-PA IgG concentrations determined using two different assays proved high levels of agreement. The method will improve surge testing capability 18-fold from 4 to 72 sera per assay plate.","notes":"1095-8320: Semenova, Vera A: Steward-Clark, Evelene: Maniatis, Panagiotis: Epperson, Monica: Sabnis, Amit: Schiffer, Jarad: Journal Article: England: Biologicals. 2016 Nov 1. pii: S1045-1056(16)30111-7. doi: 10.1016/j.biologicals.2016.09.012.","url":"http://www.ncbi.nlm.nih.gov/pubmed/27814939/?otool=cdciclib","author_address":"Centers for Disease Control and Prevention (CDC), 1600 Clifton Rd., Atlanta, GA 30329, USA. Electronic address: vsemenova@cdc.gov.: Centers for Disease Control and Prevention (CDC), 1600 Clifton Rd., Atlanta, GA 30329, USA.","database_provider":"NLM","language":"Eng","doi":"10.1016/j.biologicals.2016.09.012"}
,{"record_number":"38187","reference_type":"Generic","author":"Cui, X. N., L. D.,  Sun, J.,  Booth, M.,  Donaldson, L.,  Quinn, C. P.,  Boyer, A. E.,  Hendricks, K.,  Shadomy, S.,  Bothma, P.,  Judd, O.,  McConnell, P.,  Bower, W. A.,  Eichacker, P. Q.,","year":"2017","title":"Analysis of anthrax immune globulin intravenous with antimicrobial treatment in injection drug users, Scotland, 2009-2010","secondary_title":"Emerg Infect Dis","volume":"23","number":"1","pages":"56-65","edition":"12/17/2016","date":"Jan","short_title":"Analysis of anthrax immune globulin intravenous with antimicrobial treatment in injection drug users, Scotland, 2009-2010","alternate_title":"Emerging infectious diseases","isbn_issn":"1080-6040","custom_1":"CDC Authored Publications","custom_2":"Substance Use and Abuse","custom_8":"9:02","accession_number":"27983504","keywords":"Aig-iv: Bacillus anthracis: Scotland: United Kingdom: anthrax: anthrax immune globulin intravenous: bacteria: infection: injection drug users: treatment","abstract":"We studied anthrax immune globulin intravenous (AIG-IV) use from a 2009-2010 outbreak of Bacillus anthracis soft tissue infection in injection drug users in Scotland, UK, and we compared findings from 15 AIG-IV recipients with findings from 28 nonrecipients. Death rates did not differ significantly between recipients and nonrecipients (33% vs. 21%). However, whereas only 8 (27%) of 30 patients at low risk for death (admission sequential organ failure assessment score of 0-5) received AIG-IV, 7 (54%) of the 13 patients at high risk for death (sequential organ failure assessment score of 6-11) received treatment. AIG-IV recipients had surgery more often and, among survivors, had longer hospital stays than did nonrecipients. AIG-IV recipients were sicker than nonrecipients. This difference and the small number of higher risk patients confound assessment of AIG-IV effectiveness in this outbreak.","notes":"1080-6059: Cui, Xizhong: Nolen, Leisha D: Sun, Junfeng: Booth, Malcolm: Donaldson, Lindsay: Quinn, Conrad P: Boyer, Anne E: Hendricks, Katherine: Shadomy, Sean: Bothma, Pieter: Judd, Owen: McConnell, Paul: Bower, William A: Eichacker, Peter Q: Journal Article: United States: Emerg Infect Dis. 2017 Jan;23(1):56-65. doi: 10.3201/eid2301.160608.","url":"https://www.ncbi.nlm.nih.gov/pubmed/27983504/?otool=cdciclib","database_provider":"NLM","language":"eng","doi":"10.3201/eid2301.160608"}
,{"record_number":"38218","reference_type":"Generic","author":"Nolen, L. D. T., R. M.,  Kharod, G. A.,  Kache, P. A.,  Katharios-Lanwermeyer, S.,  Hendricks, K. A.,  Shadomy, S. V.,  Bower, W. A.,  Meaney-Delman, D.,  Walke, H. T.,","year":"2016","title":"Postexposure prophylaxis after possible anthrax exposure: Adherence and adverse events","secondary_title":"Health Secur","volume":"14","number":"6","pages":"419-423","edition":"11/30/2016","date":"Nov/Dec","short_title":"Postexposure prophylaxis after possible anthrax exposure: Adherence and adverse events","alternate_title":"Health security","isbn_issn":"2326-5094","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"9:02","accession_number":"27898235","keywords":"Adverse reactions: Anthrax: Medical management/response: Public health preparedness/response: Vaccines","abstract":"Anthrax postexposure prophylaxis (PEP) was recommended to 42 people after a laboratory incident that involved potential aerosolization of Bacillus anthracis spores in 2 laboratories at the Centers for Disease Control and Prevention in 2014. At least 31 (74%) individuals who initiated PEP did not complete either the recommended 60 days of antimicrobial therapy or the 3-dose vaccine regimen. Among the 29 that discontinued the antimicrobial component of PEP, most (38%) individuals discontinued PEP because of their low perceived risk of infection; 9 (31%) individuals discontinued prophylaxis due to PEP-related minor adverse events, and 10% cited both low risk and adverse events as their reason for discontinuation. Most minor adverse events reported were gastrointestinal complaints, and none required medical attention. Individuals taking ciprofloxacin were twice as likely (RR = 2.02, 95% CI = 1.1-3.6) to discontinue antimicrobial prophylaxis when compared to those taking doxycycline. In the event anthrax PEP is recommended, public health messages and patient education materials will need to address potential misconceptions regarding exposure risk and provide information about possible adverse events in order to promote PEP adherence.","notes":"2326-5108: Nolen, Leisha D: Traxler, Rita M: Kharod, Grishma A: Kache, Pallavi A: Katharios-Lanwermeyer, Stefan: Hendricks, Katherine A: Shadomy, Sean V: Bower, William A: Meaney-Delman, Dana: Walke, Henry T: Journal Article: United States: Health Secur. 2016 Nov/Dec;14(6):419-423. Epub 2016 Nov 29.","url":"https://www.ncbi.nlm.nih.gov/pubmed/27898235/?otool=cdciclib","database_provider":"NLM","language":"eng","doi":"10.1089/hs.2016.0060"}
,{"record_number":"38224","reference_type":"Generic","author":"Rainisch, G. M., M. I.,  Shadomy, S.,  Bower, W. A.,  Hupert, N.,","year":"2017","title":"Modeling tool for decision support during early days of an anthrax event","secondary_title":"Emerg Infect Dis","volume":"23","number":"1","pages":"46-55","edition":"12/17/2016","date":"Jan","short_title":"Modeling tool for decision support during early days of an anthrax event","alternate_title":"Emerging infectious diseases","isbn_issn":"1080-6040","custom_1":"CDC Authored Publications","custom_2":"Disaster Control and Emergency Services","custom_8":"9:02","accession_number":"27983505","keywords":"Keywords: Bacillus anthracis: Sverdlovsk accidental release: anthrax: bacteria: biohazard release: biological warfare: bioterrorism and preparedness: chemoprophylaxis: decision support models: inhalation anthrax: mass casualty incidents: public health p","abstract":"Health officials lack field-implementable tools for forecasting the effects that a large-scale release of Bacillus anthracis spores would have on public health and hospitals. We created a modeling tool (combining inhalational anthrax caseload projections based on initial case reports, effects of variable postexposure prophylaxis campaigns, and healthcare facility surge capacity requirements) to project hospitalizations and casualties from a newly detected inhalation anthrax event, and we examined the consequences of intervention choices. With only 3 days of case counts, the model can predict final attack sizes for simulated Sverdlovsk-like events (1979 USSR) with sufficient accuracy for decision making and confirms the value of early postexposure prophylaxis initiation. According to a baseline scenario, hospital treatment volume peaks 15 days after exposure, deaths peak earlier (day 5), and recovery peaks later (day 23). This tool gives public health, hospital, and emergency planners scenario-specific information for developing quantitative response plans for this threat.","notes":"1080-6059: Rainisch, Gabriel: Meltzer, Martin I: Shadomy, Sean: Bower, William A: Hupert, Nathaniel: Journal Article: United States: Emerg Infect Dis. 2017 Jan;23(1):46-55. doi: 10.3201/eid2301.151787.","url":"https://www.ncbi.nlm.nih.gov/pubmed/27983505/?otool=cdciclib","database_provider":"NLM","language":"eng","doi":"10.3201/eid2301.151787"}
,{"record_number":"39351","reference_type":"Generic","author":"Pena-Gonzalez, A. M., C. K.,  Rodriguez, R. Lm,  Kolton, C. B.,  Garcia-Diaz, J.,  Theppote, A.,  Frace, M.,  Konstantinidis, K. T.,  Hoffmaster, A. R.,","year":"2017","title":"Draft genome sequence of Bacillus cereus LA2007, a human-pathogenic isolate harboring anthrax-like plasmids","secondary_title":"Genome Announc","volume":"5","number":"16","edition":"4/22/2017","date":"20-04","short_title":"Draft genome sequence of Bacillus cereus LA2007, a human-pathogenic isolate harboring anthrax-like plasmids","alternate_title":"Genome announcements","custom_1":"CDC Authored Publications","custom_2":"Genetics and Genomics","custom_8":"9:18","accession_number":"28428293","abstract":"We present the genome sequence of Bacillus cereus LA2007, a strain isolated in 2007 from a fatal pneumonia case in Louisiana. Sequence-based genome analysis revealed that LA2007 carries a plasmid highly similar to Bacillus anthracis pXO1, including the genes responsible for the production and regulation of anthrax toxin.","notes":"Pena-Gonzalez, Angela: Marston, Chung K: Rodriguez-R, Luis M: Kolton, Cari B: Garcia-Diaz, Julia: Theppote, Amanda: Frace, Michael: Konstantinidis, Konstantinos T: Hoffmaster, Alex R: Journal Article: United States: Genome Announc. 2017 Apr 20;5(16). pii: e00181-17. doi: 10.1128/genomeA.00181-17.","url":"https://www.ncbi.nlm.nih.gov/pubmed/28428293/?otool=cdciclib","author_address":"School of the Biological Sciences, Georgia Institute of Technology, Atlanta, Georgia, USA.: Bacterial Special Pathogens Branch, Division of High-Consequence Pathogens and Pathology, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.: School of Civil & Environmental Engineering, Georgia Institute of Technology, Atlanta, Georgia, USA.: Department of Infectious Diseases, Ochsner Clinic Foundation, New Orleans, Louisiana, USA.: Department of Internal Medicine, University of Queensland, Brisbane, Queensland, Australia.: Biotechnology Core Facility Branch, Division of Scientific Resources, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.: Bacterial Special Pathogens Branch, Division of High-Consequence Pathogens and Pathology, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, USA amh9@cdc.gov.","database_provider":"NLM","language":"eng","doi":"10.1128/genomeA.00181-17"}
,{"record_number":"39506","reference_type":"Generic","author":"Grinshpun, S. A. W., A. M.,  Yermakov, M.,  Indugula, R.,  Elmashae, Y.,  Reponen, T.,  Rose, L.,","year":"2017","title":"Evaluation of personal inhalable aerosol samplers with different filters for use during anthrax responses","secondary_title":"J Occup Environ Hyg","pages":"0","edition":"5/17/2017","date":"16-05","short_title":"Evaluation of personal inhalable aerosol samplers with different filters for use during anthrax responses","alternate_title":"Journal of occupational and environmental hygiene","isbn_issn":"1545-9624","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"9:21","accession_number":"28506101","keywords":"Bacillus anthracis: filter collection: inhalable sampling: viable spore detection","abstract":"Risk of inhalation exposure to viable Bacillus anthracis (B. anthracis) spores has primarily been assessed using short-term, stationary sampling methods which may not accurately characterize the concentration of inhalable-sized spores reaching a person's breathing zone. While a variety of aerosol sampling methods have been utilized during previous anthrax responses, no consensus has yet been established for personal air sampling. The goal of this study was to determine the best sampler-filter combination(s) for the collection and extraction of B. anthracis spores. The study was designed to 1) evaluate the performance of four filter types [one mixed cellulose ester, MCE (pore size = 3 microm), two polytetrafluoroethylene, PTFE (1 and 3 microm), and one polycarbonate, PC (3 microm)], and 2) evaluate the best performing filters in two commercially-available inhalable aerosol samplers (IOM and Button). Bacillus thuringiensis kurstaki [Bt(k)], a simulant for B. anthracis, served as the aerosol challenge. The filters were assessed based on criteria such as ability to maintain low pressure drop over an extended sampling period, filter integrity under various environmental conditions, spore collection and extraction efficiencies, ease of loading and unloading the filters into the samplers, cost, and availability. Three of four tested collection filters - except MCE - were found suitable for efficient collection and recovery of Bt(k) spores sampled from dry and humid as well as dusty and clean air environments for up to 8 h. The PC (3 microm) filter was identified as the best performing filter in this study. The PTFE (3 microm) demonstrated a comparable performance, but it is more costly. Slightly higher concentrations were measured with the IOM inhalable sampler which is the preferred sampler's performance criterion when detecting a highly pathogenic agent with no established \"safe\" inhalation exposure level. Additional studies are needed to address the effects of environmental conditions and spore concentration. The data obtained in this investigation are crucial for future efforts on the development and optimization of a method for assessing inhalation exposure to B. anthracis.","notes":"1545-9632: Grinshpun, Sergey A: Weber, Angela M: Yermakov, Michael: Indugula, Reshmi: Elmashae, Yousef: Reponen, Tiina: Rose, Laura: Journal Article: England: J Occup Environ Hyg. 2017 May 16:0. doi: 10.1080/15459624.2017.1304645.","url":"https://www.ncbi.nlm.nih.gov/pubmed/28506101/?otool=cdciclib","author_address":"a Center for Health-Related Aerosol Studies, Department of Environmental Health , University of Cincinnati , Cincinnati , Ohio.: b Centers for Disease Control and Prevention, National Institute for Occupational Safety and Health, Emergency Preparedness and Response Office , Atlanta , Georgia.: c Centers for Disease Control and Prevention, National Center for Emerging and Zoonotic Infectious Diseases, Division of Healthcare Quality Promotion , Atlanta , GA.","database_provider":"NLM","language":"eng","doi":"10.1080/15459624.2017.1304645"}
,{"record_number":"40107","reference_type":"Generic","author":"Heine, H. S. S., S. V.,  Boyer, A. E.,  Chuvala, L.,  Riggins, R.,  Kesterson, A.,  Myrick, J.,  Craig, J.,  Candela, M. G.,  Barr, J. R.,  Hendricks, K.,  Bower, W. A.,  Walke, H.,  Drusano, G. L.,","year":"2017","title":"Evaluation of combination drug therapy for treatment of antibiotic resistant inhalation anthrax in a murine model","secondary_title":"Antimicrob Agents Chemother","edition":"7/12/2017","date":"7-Oct","short_title":"Evaluation of combination drug therapy for treatment of antibiotic resistant inhalation anthrax in a murine model","alternate_title":"Antimicrobial agents and chemotherapy","isbn_issn":"0066-4804","custom_1":"Top Articles of the Week","custom_2":"Laboratory Sciences","custom_8":"9:29","accession_number":"28696235","abstract":"Bacillus anthracis is considered a likely agent to be used as a bioweapon and use of a strain resistance to the first-line antimicrobial treatments is a concern. We determined treatment efficacy against a ciprofloxacin-resistant (Cr) strain of B. anthracis (Cr Ames) in a murine inhalational anthrax model. Ten groups of 46 BALB/c mice were exposed by inhalation to 7-35 LD50 of B. anthracis Cr Ames spores. Commencing at 36 hours (h) post-exposure, groups were administered intraperitoneal doses of sterile water for injections (SWI) and ciprofloxacinalone (control groups), or ciprofloxacin combined with two antimicrobials including meropenem/linezolid, meropenem/clindamycin, meropenem/rifampin, meropenem/doxycycline, penicillin/linezolid, penicillin/doxycycline, rifampin/linezolid, or rifampin/clindamycin at appropriate dosing intervals(6 or 12 hours) for the respective antibiotics. Ten mice per group were treated for 14 days and observed until day 28. Remaining animals were euthanized every 6-12h and blood, lungs, and spleens collected for lethal factor (LF) and/or bacterial load determinations. All combination groups showed significant survival over the SWI and ciprofloxacin controls: meropenem/linezolid (p=0.004), meropenem/clindamycin (p=0.005), meropenem/rifampin (p=0.012), meropenem/doxycycline (p=0.032), penicillin/doxycycline (p=0.012), penicillin/linezolid (p=0.026), rifampin/linezolid (p=0.001), and rifampin/clindamycin (p=0.032). In controls, blood, lung, and spleen bacterial counts increased to terminal endpoints. In combination treatment groups, blood and spleen bacterial counts showed low/no colonies after 24 hours treatment. LF fell below detection limits for all combination groups, yet remained elevated in control groups. Combinations with linezolid had the greatest inhibitory effect on mean LF levels.","notes":"1098-6596: Heine, H S: Shadomy, S V: Boyer, A E: Chuvala, L: Riggins, R: Kesterson, A: Myrick, J: Craig, J: Candela, M G: Barr, J R: Hendricks, K: Bower, W A: Walke, H: Drusano, G L: Journal Article: United States: Antimicrob Agents Chemother. 2017 Jul 10. pii: AAC.00788-17. doi: 10.1128/AAC.00788-17.","url":"https://www.ncbi.nlm.nih.gov/pubmed/28696235/?otool=cdciclib","author_address":"Institute for Therapeutic Innovation, University of Florida, Orlando, Fl Henry.Heine@medicine.ufl.edu.: Centers for Disease Control and Prevention, Atlanta, GA.: Institute for Therapeutic Innovation, University of Florida, Orlando, Fl.","database_provider":"NLM","language":"eng","doi":"10.1128/aac.00788-17"}
,{"record_number":"40930","reference_type":"Generic","author":"Goldstein, J. M. L., J., Tang, X., Boyer, A. E., Barr, J. R., Bagarozzi, D. A., Jr., Quinn, C. P.,","year":"2017","title":"Phage display analysis of monoclonal antibody binding to anthrax toxin lethal factor","secondary_title":"Toxins","publisher":"MDPI AG","volume":"9","number":"7","type_of_work":"Article","short_title":"Phage display analysis of monoclonal antibody binding to anthrax toxin lethal factor","alternate_title":"Toxins","isbn_issn":"20726651 (ISSN)","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_7":"221","custom_8":"9:32","keywords":"Anthrax:Bacillus anthracis:Epitope:Lethal factor:Mass spectrometry:Monoclonal antibody:Phage display:Protective antigen","abstract":"AVR1674 and AVR1675 are monoclonal antibodies (mAbs) that bind with high specificity to anthrax toxin lethal factor (LF) and lethal toxin (LTx). These mAbs have been used as pivotal reagents to develop anthrax toxin detection tests using mass spectrometry. The mAbs were demonstrated to bind LF with good affinity (KD 10?7–10?9 M) and to enhance LF-mediated cleavage of synthetic peptide substrates in vitro. Sequence analysis indicated that the mAbs shared 100% amino acid identity in their complementarity determining regions (CDR). A phage display library based on a combinatorial library of random heptapeptides fused to the pIII coat protein of M13 phage was enriched and screened to identify peptide sequences with mAb binding properties. Selection and sequence analysis of 18 anti-LF-reactive phage clones identified a 7-residue (P1–P7) AVR1674/1675 consensus target binding sequence of TP1-XP2-K/RP3-DP4-D/EP5-ZP6-X/ZP7 (X = aromatic, Z = non-polar). The phage peptide sequence with highest affinity binding to AVR1674/1675 was identified as T-F-K-D-E-I-V. Synthetic oligopeptides were designed based on the phage sequences and interacted with mAbs with high affinity (KD~ 10?9 M). Single amino acid substitutions of A, H, or Q in the peptides identified positions P1–P5 as critical residues for mAb-peptide interactions. CLUSTALW alignment of phage sequences with native LF implicated residues 644–650 (sequence T-H-Q-D-E-I-Y) as a putative linear epitope component located within a structural loop (L2) of LF Domain IV. The activation effects of these mAbs contribute to the analytic sensitivity of function-based LF detection assays. © 2017 by the authors. Licensee MDPI, Basel, Switzerland.","notes":"Export Date: 8 August 2017:Correspondence Address: Goldstein, J.M.; Reagent and Diagnostic Services Branch, Division of Scientific Resources, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, 1600 Clifton Road, United States; email: jgoldstein1@cdc.gov:References: Mock, M., Fouet, A., Anthrax (2001) Annu. Rev. Microbiol., 55, pp. 647-671; Brossier, F., Mock, M., Toxins of Bacillus anthracis (2001) Toxicon, 39, pp. 1747-1755; Klimpel, K.R., Arora, N., Leppla, S.H., Anthrax toxin lethal factor contains a zinc metalloprotease consensus sequence which is required for lethal toxin activity (1994) Mol. Microbiol., 13, pp. 1093-1100; Katayama, H., Janowiak, B.E., Brzozowski, M., Juryck, J., Falke, S., Gogol, E.P., Collier, R.J., Fisher, M.T., GroEL as a molecular scaffold for structural analysis of the anthrax toxin pore (2008) Nat. Struct. Mol. Biol., 15, pp. 754-760; Petosa, C., Collier, R.J., Klimpel, K.R., Leppla, S.H., Liddington, R.C., Crystal structure of the anthrax toxin protective antigen (1997) Nature, 385, pp. 833-838; Collier, R.J., Mechanism of membrane translocation by anthrax toxin: Insertion and pore formation by protective antigen (1999) J. Appl. Microbiol., 87, p. 283; Boyer, A.E., Gallegos-Candela, M., Lins, R.C., Kuklenyik, Z., Woolfitt, A., Moura, H., Kalb, S., Barr, J.R., Quantitative mass spectrometry for bacterial protein toxins—A sensitive, specific, high-throughput tool for detection and diagnosis (2011) Molecules, 16, pp. 2391-2413; Boyer, A.E., Quinn, C.P., Woolfitt, A.R., Pirkle, J.L., McWilliams, L.G., Stamey, K.L., Bagarozzi, D.A., Barr, J.R., Detection and quantification of anthrax lethal factor in serum by mass spectrometry (2007) Anal. Chem., 79, pp. 8463-8470; Stoddard, R.A., Quinn, C.P., Schiffer, J.M., Boyer, A.E., Goldstein, J., Bagarozzi, D.A., Soroka, S.D., Hoffimaster, A.R., Detection of anthrax protective antigen (PA) using europium labeled anti-PA monoclonal antibody and time-resolved fluorescence (2014) J. Immunol. Methods, 408, pp. 78-88; Boyer, A.E., Quinn, C.P., Beesley, C.A., Gallegos-Candela, M., Marston, C.K., Cronin, L.X., Lins, R.C., Schiffer, J., Lethal factor toxemia and anti-protective antigen antibody activity in naturally acquired cutaneous anthrax (2011) J. Infect. Dis., 204, pp. 1321-1327; Cui, X., Nolen, L.D., Sun, J., Booth, M., Donaldson, L., Quinn, C.P., Boyer, A.E., Bothma, P., Analysis of Anthrax Immune Globulin Intravenous with Antimicrobial Treatment in Injection Drug Users, Scotland, 2009–2010 (2017) Emerg. Infect. Dis., 23, pp. 56-65; Marston, C.K., Ibrahim, H., Lee, P., Churchwell, G., Gumke, M., Stanek, D., Gee, J.E., Barr, J.R., Anthrax Toxin-Expressing Bacillus cereus Isolated from an Anthrax-Like Eschar (2016) Plos ONE, 11; Sprenkle, M.D., Griffith, J., Marinelli, W., Boyer, A.E., Quinn, C.P., Pesik, N.T., Hoffmaster, A., Blaney, D.D., Lethal factor and anti-protective antigen IgG levels associated with inhalation anthrax, Minnesota, USA (2014) Emerg. Infect. Dis., 20, pp. 310-314; Lim, N.K., Kim, J.H., Oh, M.S., Kee, S., Kim, K.S., Kang, H.J., Inn, K.S., An anthrax lethal factor-neutralizing monoclonal antibody protects rats before and after challenge with anthrax toxin (2005) Infect. Immun., 73, pp. 6547-6551; Hoess, R.H., Mack, A.J., Walton, H., Reilly, T.M., Identification of a structural epitope by using a peptide library displayed on filamentous bacteriophage (1994) J. Immunol, (153), pp. 724-729. , (Baltim. Md. 1950); Bonnycastle, L.L., Mehroke, J.S., Rashed, M., Gong, X., Scott, J.K., Probing the basis of antibody reactivity with a panel of constrained peptide libraries displayed by filamentous phage (1996) J. Mol. Biol., 258, pp. 747-762; Felici, F., Luzzago, A., Folgori, A., Cortese, R., Mimicking of discontinuous epitopes by phage-displayed peptides, II. Selection of clones recognized by a protective monoclonal antibody against the Bordetella pertussis toxin from phage peptide libraries (1993) Gene, 128, pp. 21-27; Schellekens, G.A., Lasonder, E., Feijlbrief, M., Koedijl, D.G., Drijfhout, J.W., Scheffer, A.J., Welling-Wester, S., Welling, G.W., Identification of the core residues of the epitope of a monoclonal antibody raised against glycoprotein D of herpes simplex virus type 1 by screening of a random peptide library (1994) Eur. J. Immunol., 24, pp. 3188-3193; Gong, X., Schopp, C., Scott, J.K., The Performance of Epitope Libraries: Crystallographic Evidence for a Direct Correspondence between the Residues Selected and the Critical Residues for Binding (1993) Protein Eng, 6, p. 106; Pannifer, A.D., Wong, T.Y., Schwarzenbacher, R., Renatus, M., Petosa, C., Bienkowska, J., Lacy, D.B., Leppla, S.H., Crystal structure of the anthrax lethal factor (2001) Nature, 414, pp. 229-233; Maize, K.M., Kurbanov, E.K., De La Mora-Rey, T., Geders, T.W., Hwang, D.J., Walters, M.A., Johnson, R.L., Finzel, B.C., Anthrax toxin lethal factor domain 3 is highly mobile and responsive to ligand binding (2014) Acta Crystallogr. Sect. D Biol. Crystallogr, 70, pp. 2813-2822; Smith, G.P., Filamentous phage assembly: Morphogenetically defective mutants that do not kill the host (1988) Virology, 167, pp. 156-165; Smith, G.P., Scott, J.K., Libraries of peptides and proteins displayed on filamentous phage (1993) Methods Enzymol, 217, pp. 228-257; Barbas, C.F., Burton, D.R., Scott, J.K., Silverman, G.J., (2001) Phage Display: A Laboratory Manual, , Cold Spring Harbor Laboratory Press: New York, NY, USA; Larkin, M.A., Blackshields, G., Brown, N.P., Chenna, R., McGettigan, P.A., McWilliam, H., Valentin, F., Lopez, R., Clustal W and Clustal X version 2.0 (2007) Bioinformatics, 23, pp. 2947-2948; Notredame, C., Higgins, D.G., Heringa, J., T-Coffee: A novel method for fast and accurate multiple sequence alignment (2000) J. Mol. Biol., 302, pp. 205-217; Sayle, R.A., Milner-White, E.J., RASMOL: Biomolecular graphics for all (1995) Trends Biochem. Sci., 20, p. 374","url":"http://www.mdpi.com/2072-6651/9/7/221","author_address":"Reagent and Diagnostic Services Branch, Division of Scientific Resources, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, 1600 Clifton Road, Atlanta, GA, United States:Clinical Chemistry Branch, Division of Laboratory Services, National Center for Environmental Health, Centers for Disease Control and Prevention, 4770 Buford Hwy, NE, Atlanta, GA, United States:Meningitis and Vaccine Preventable Diseases Branch, Division of Bacterial Diseases, National Center for Immunization and Respiratory Diseases, Centers for Disease Control and Prevention, NCID/DBMD, 1600 Clifton Road, MS D-11, Atlanta, GA, United States","name_of_database":"Scopus","language":"English","doi":"10.3390/toxins9070221"}
,{"record_number":"41206","reference_type":"Generic","author":"Heine, H. S. S., S. V., Boyer, A. E., Chuvala, L., Riggins, R., Kesterson, A., Myrick, J., Craig, J., Candela, M. G., Barr, J. R., Hendricks, K., Bower, W. A., Walke, H., Drusano, G. L.,","year":"2017","title":"Evaluation of combination drug therapy for treatment of antibiotic-resistant inhalation anthrax in a murine model","secondary_title":"Antimicrob Agents Chemother","volume":"61","number":"9","edition":"7/12/2017","date":"Sep","short_title":"Evaluation of combination drug therapy for treatment of antibiotic-resistant inhalation anthrax in a murine model","alternate_title":"Antimicrobial agents and chemotherapy","isbn_issn":"0066-4804","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"9:37","accession_number":"28696235","keywords":"anthrax:ciprofloxacin:multidrug therapy","abstract":"Bacillus anthracis is considered a likely agent to be used as a bioweapon, and the use of a strain resistant to the first-line antimicrobial treatments is a concern. We determined treatment efficacies against a ciprofloxacin-resistant strain of B. anthracis (Cipr Ames) in a murine inhalational anthrax model. Ten groups of 46 BALB/c mice were exposed by inhalation to 7 to 35 times the 50% lethal dose (LD50) of B. anthracis Cipr Ames spores. Commencing at 36 h postexposure, groups were administered intraperitoneal doses of sterile water for injections (SWI) and ciprofloxacin alone (control groups), or ciprofloxacin combined with two antimicrobials, including meropenem-linezolid, meropenem-clindamycin, meropenem-rifampin, meropenem-doxycycline, penicillin-linezolid, penicillin-doxycycline, rifampin-linezolid, and rifampin-clindamycin, at appropriate dosing intervals (6 or 12 h) for the respective antibiotics. Ten mice per group were treated for 14 days and observed until day 28. The remaining animals were euthanized every 6 to 12 h, and blood, lungs, and spleens were collected for lethal factor (LF) and/or bacterial load determinations. All combination groups showed significant survival over the SWI and ciprofloxacin controls: meropenem-linezolid (P = 0.004), meropenem-clindamycin (P = 0.005), meropenem-rifampin (P = 0.012), meropenem-doxycycline (P = 0.032), penicillin-doxycycline (P = 0.012), penicillin-linezolid (P = 0.026), rifampin-linezolid (P = 0.001), and rifampin-clindamycin (P = 0.032). In controls, blood, lung, and spleen bacterial counts increased to terminal endpoints. In combination treatment groups, blood and spleen bacterial counts showed low/no colonies after 24-h treatments. The LF fell below the detection limits for all combination groups yet remained elevated in control groups. Combinations with linezolid had the greatest inhibitory effect on mean LF levels.","notes":"1098-6596:Heine, H S:Shadomy, S V:Boyer, A E:Chuvala, L:Riggins, R:Kesterson, A:Myrick, J:Craig, J:Candela, M G:Barr, J R:Hendricks, K:Bower, W A:Walke, H:Drusano, G L:Journal Article:United States:Antimicrob Agents Chemother. 2017 Aug 24;61(9). pii: e00788-17. doi: 10.1128/AAC.00788-17. Print 2017 Sep.","url":"https://www.ncbi.nlm.nih.gov/pubmed/28696235/?otool=cdciclib","author_address":"Institute for Therapeutic Innovation, University of Florida, Orlando, Florida, USA Henry.Heine@medicine.ufl.edu.:Centers for Disease Control and Prevention, Atlanta, Georgia, USA.:Institute for Therapeutic Innovation, University of Florida, Orlando, Florida, USA.","database_provider":"NLM","language":"eng","doi":"10.1128/aac.00788-17"}
,{"record_number":"41219","reference_type":"Generic","author":"Nonkin Avchen, R. L., T. T., Kosmos, C.,","year":"2017","title":"From anthrax to Zika: Fifteen years of public health emergency preparedness","secondary_title":"Am J Public Health","volume":"107","number":"S2","pages":"S117","edition":"9/12/2017","date":"Sep","short_title":"From anthrax to Zika: Fifteen years of public health emergency preparedness","alternate_title":"American journal of public health","isbn_issn":"0090-0036","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Disaster Control and Emergency Services","custom_8":"9:38","accession_number":"28892442","notes":"1541-0048:Nonkin Avchen, Rachel:LeBlanc, Tanya Telfair:Kosmos, Christine:Journal Article:United States:Am J Public Health. 2017 Sep;107(S2):S117. doi: 10.2105/AJPH.2017.304058.","url":"https://www.ncbi.nlm.nih.gov/pubmed/28892442/?otool=cdciclib","author_address":"Division of State and Local Readiness Office of Public Health Preparedness and Response Centers for Disease Control and Prevention Atlanta, GA.","database_provider":"NLM","language":"eng","doi":"10.2105/ajph.2017.304058"}
,{"record_number":"43241","reference_type":"Journal Article","author":"M. A. de Perio; K. A. Hendricks; C. H. Dowell; W. A. Bower; N. C. Burton; P. Dawson; C. A. Schrodt; J. S. Salzer; C. K. Marston; K. Feldmann; A. R. Hoffmaster; J. M. Antonini","year":"2022","title":"Welder’s anthrax: A review of an occupational disease","secondary_title":"Pathogens","volume":"11","number":"4","type_of_work":"Review","short_title":"Welder’s anthrax: A review of an occupational disease","custom_1":"CDC Authored Publications","custom_2":"Occupational Safety and Health","custom_8":"14:18","keywords":"Bacillus\nwelder\nwelder’s anthrax","abstract":"Since 1997, nine cases of severe pneumonia, caused by species within the B. cereus group and with a presentation similar to that of inhalation anthrax, were reported in seemingly immunocompetent metalworkers, with most being welders. In seven of the cases, isolates were found to harbor a plasmid similar to the B. anthracis pXO1 that encodes anthrax toxins. In this paper, we review the literature on the B. cereus group spp. pneumonia among welders and other metalworkers, which we term welder’s anthrax. We describe the epidemiology, including more information on two cases of welder’s anthrax in 2020. We also describe the health risks associated with welding, potential mechanisms of infection and pathological damage, prevention measures according to the hierarchy of controls, and clinical and public health considerations. Considering occupational risk factors and controlling exposure to welding fumes and gases among workers, according to the hierarchy of controls, should help prevent disease transmission in the workplace. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.","notes":"Export Date: 21 April 2022","url":"https://www.mdpi.com/2076-0817/11/4/402","author_address":"Office of the Director, National Institute for Occupational Safety and Health, Centers for Disease Control and Prevention, Cincinnati, OH 45226, United States\nDivision of High-Consequence Pathogens and Pathology, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, GA 30333, United States\nDivision of Field Studies and Engineering, National Institute for Occupational Safety and Health, Centers for Disease Control and Prevention, Cincinnati, OH 45226, United States\nOffice of Science, Centers for Disease Control and Prevention, Atlanta, GA 30333, United States\nDivision of Healthcare Quality Promotion, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, GA 30333, United States\nDivision of Vector-Borne Diseases, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, GA 30333, United States\nHealth Effects Laboratory Division, National Institute for Occupational Safety and Health, Centers for Disease Control and Prevention, Morgantown, WV 26505, United States","name_of_database":"Scopus","doi":"10.3390/pathogens11040402"}
,{"record_number":"43325","reference_type":"Journal Article","author":"M. A. Deka; C. K. Marston; J. Garcia-Diaz; R. Drumgoole; R. M. Traxler","year":"2022","title":"Ecological niche model of bacillus cereus group isolates containing a homologue of the pXO1 anthrax toxin genes infecting metalworkers in the United States","secondary_title":"Pathogens","volume":"11","number":"4","date":"14-Apr","short_title":"Ecological niche model of bacillus cereus group isolates containing a homologue of the pXO1 anthrax toxin genes infecting metalworkers in the United States","isbn_issn":"2076-0817 (Print)\n2076-0817","custom_1":"CDC Authored Publications","custom_2":"Occupational Safety and Health","custom_8":"14:19","accession_number":"35456145","keywords":"Bacillus cereus group\necological niche modeling\npXO1\nwelder anthrax","abstract":"While Bacillus cereus typically causes opportunistic infections in humans, within the last three decades, severe and fatal infections caused by isolates of the B. cereus group harboring anthrax toxin genes have been reported in the United States. From 1994 to 2020, seven cases of anthrax-like illness resulting from these isolates have been identified. With one exception, the cases have occurred in the Gulf States region of the United States among metalworkers. We aimed to develop an ecological niche model (ENM) to estimate a spatial area conducive to the survival of these organisms based on the presence of known human infections and environmental variables. The estimated ecological niche for B. cereus was modeled with the maximum entropy algorithm (Maxent). Environmental variables contributing most to the model were soil characteristics (cation exchange capacity, carbon content, soil pH), temperature, enhanced vegetation index (EVI), and land surface temperature (LST). Much of the suitable environments were located throughout the Gulf Coast Plain, Texas Backland Prairies, East Central Texas Plains, Edwards Plateau, Cross Timbers, Mississippi Alluvial Plain, and Central Great Plains. These findings may provide additional guidance to narrow potential risk areas to efficiently communicate messages to metalworkers and potentially identify individuals who may benefit from the anthrax vaccine.","notes":"2076-0817\nDeka, Mark A\nMarston, Chung K\nGarcia-Diaz, Julia\nDrumgoole, Rahsaan\nTraxler, Rita M\nOrcid: 0000-0001-7580-4116\nJournal Article\n2022/04/24\nPathogens. 2022 Apr 14;11(4):470. doi: 10.3390/pathogens11040470.","url":"https://pubmed.ncbi.nlm.nih.gov/35456145","author_address":"Centers for Disease Control and Prevention, Atlanta, GA 30329, USA.\nDepartment of Infectious Disease, Ochsner Medical Center, New Orleans, LA 70121, USA.\nTexas Department of State Health Services, Austin, TX 78756, USA.","database_provider":"NLM","language":"eng","doi":"10.3390/pathogens11040470"}
,{"record_number":"43403","reference_type":"Journal Article","author":"C. Pittiglio; S. Shadomy; A. El Idrissi; B. Soumare; J. Lubroth; Y. Makonnen","year":"2022","title":"Seasonality and ecological suitability modelling for anthrax (Bacillus anthracis) in Western Africa","secondary_title":"Animals","volume":"12","number":"9","type_of_work":"Article","short_title":"Seasonality and ecological suitability modelling for anthrax (Bacillus anthracis) in Western Africa","custom_1":"CDC Authored Publications","custom_2":"CDC Authored Publications","custom_8":"14:21","keywords":"anthrax\nclimate variability\necological niche modeling\nseasonality\ntime series analysis\nWest Africa","abstract":"Anthrax is hyper-endemic in West Africa affecting wildlife, livestock and humans. Prediction is difficult due to the lack of accurate outbreak data. However, predicting the risk of infection is important for public health, wildlife conservation and livestock economies. In this study, the seasonality of anthrax outbreaks in West Africa was investigated using climate time series and ecological niche modeling to identify environmental factors related to anthrax occurrence, develop geospatial risk maps and identify seasonal patterns. Outbreak data in livestock, wildlife and humans between 2010 and 2018 were compiled from different sources and analyzed against monthly rates of change in precipitation, normalized difference vegetation index (NDVI) and land surface temperature. Maximum Entropy was used to predict and map the environmental suitability of anthrax occurrence. The findings showed that: (i) Anthrax outbreaks significantly (99%) increased with incremental changes in monthly precipitation and vegetation growth and decremental changes in monthly temperature during January–June. This explains the occurrence of the anthrax peak during the early wet season in West Africa. (ii) Livestock density, precipitation seasonality, NDVI and alkaline soils were the main predictors of anthrax suitability. (iii) Our approach optimized the use of limited and heterogeneous datasets and ecological niche modeling, demonstrating the value of integrated disease notification data and outbreak reports to generate risk maps. Our findings can inform public, animal and environmental health and enhance national and regional One Health disease control strategies. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.","notes":"Export Date: 12 May 2022","url":"https://www.mdpi.com/2076-2615/12/9/1146","name_of_database":"Scopus","doi":"10.3390/ani12091146"}
,{"record_number":"43494","reference_type":"Journal Article","author":"M. A. Gates-Hollingsworth; C. B. Kolton; A. R. Hoffmaster; G. T. Meister; A. E. Moore; H. R. Green; J. M. Pogoda; S. P. Pillai; T. R. Kozel","year":"2022","title":"Rapid capsular antigen immunoassay for diagnosis of inhalational anthrax: Preclinical studies and evaluation in a nonhuman primate model","secondary_title":"mBio","pages":"e0093122","edition":"5/12/2022","date":"12-May","short_title":"Rapid capsular antigen immunoassay for diagnosis of inhalational anthrax: Preclinical studies and evaluation in a nonhuman primate model","custom_1":"CDC Authored Publications","custom_2":"Laboratory Sciences","custom_8":"14:22","accession_number":"35546539","keywords":"Bacillus anthracis\nanthrax\ncapsule\ndiagnosis\nimmunoassay\nimmunoassays","abstract":"Inhalational anthrax is a fatal infectious disease. Rapid and effective treatment is critically dependent on early and accurate diagnosis. Blood culture followed by identification and confirmation may take days to provide clinically relevant information. In contrast, immunoassay for a shed antigen, the capsular polypeptide gamma-d-polyglutamate (γDPGA), can provide rapid results at the point of care. In this study, a lateral flow immunoassay for γDPGA was evaluated in a robust nonhuman primate model of inhalational anthrax. The results showed that the time to a positive result with the rapid test using either serum or blood as a clinical specimen was similar to the time after infection when a blood culture became positive. In vitro testing showed that the test was equally sensitive with cultures of the three major clades of Bacillus anthracis. Cultures from other Bacillus spp. that are known to produce γDPGA also produced positive results. The test was negative with human sera from 200 normal subjects and 45 subjects with culture-confirmed nonanthrax bacterial or fungal sepsis. Taken together, the results showed that immunoassay for γDPGA is an effective surrogate for blood culture in a relevant cynomolgus monkey model of inhalational anthrax. The test would be a valuable aid in early diagnosis of anthrax, which is critical for rapid intervention and a positive outcome. Use of the test could facilitate triage of patients with signs and symptoms of anthrax in a mass-exposure incident and in low-resource settings where laboratory resources are not readily available. IMPORTANCE Patient outcome in anthrax is critically dependent on early diagnosis followed by effective treatment. We describe a rapid lateral flow immunoassay that detects capsular antigen of Bacillus anthracis that is shed into blood during infection. The test was evaluated in a robust cynomolgus monkey model of inhalational anthrax. Rapid detection of capsular antigen is an effective surrogate for the time-consuming and laboratory-intensive diagnosis by blood culture, direct fluorescent antibody staining, or other molecular testing. The test can be performed at the point of patient contact, is rapid and inexpensive, and can be used by individuals with minimal training.","notes":"2150-7511\nGates-Hollingsworth, Marcellene A\nKolton, Cari B\nHoffmaster, Alex R\nMeister, Gabriel T\nMoore, Addie E\nGreen, Heather R\nPogoda, Janice M\nPillai, Segaran P\nKozel, Thomas R\nJournal Article\nUnited States\n2022/05/14\nmBio. 2022 May 12:e0093122. doi: 10.1128/mbio.00931-22.","url":"https://pubmed.ncbi.nlm.nih.gov/35546539","author_address":"Department of Microbiology and Immunology, University of Nevada, Reno School of Medicine, Reno, Nevada, USA.\nCenters for Disease Control and Prevention, Atlanta, Georgia, USA.\nBattellegrid.27873.39 Biomedical Research Center, Columbus, Ohio, USA.\nCipher Biostatistics & Reporting, Reno, Nevada, USA.\nOffice of the Commissioner, Food and Drug Administration, Silver Spring, Maryland, USA.","database_provider":"NLM","language":"eng","doi":"10.1128/mbio.00931-22"}
,{"record_number":"43533","reference_type":"Journal Article","author":"M. A. Deka; A. R. Vieira; W. A. Bower","year":"2022","title":"Modeling the ecological niche of naturally occurring anthrax at global and circumpolar extents using an ensemble modeling framework","secondary_title":"Transbound Emerg Dis","edition":"5/19/2022","date":"19-May","short_title":"Modeling the ecological niche of naturally occurring anthrax at global and circumpolar extents using an ensemble modeling framework","isbn_issn":"1865-1674","custom_1":"CDC Authored Publications","custom_2":"Communicable Diseases","custom_8":"14:23","accession_number":"35590480","keywords":"anthrax\nensemble ecological niche modeling\nepidemiology\nprecision mapping","abstract":"Bacillus anthracis, the causative agent of anthrax, is a spore-forming bacterium that primarily affects herbivorous livestock, wildlife, and humans exposed to direct contact with infected animal carcasses or products. To date, there are a limited number of studies that have delineated the potential global distribution of anthrax, despite the importance of the disease from both an economic and public health standpoint. This study compiled occurrence data (n = 874) of confirmed human and animal cases from 1954 to 2021 in 94 countries. Using an ensemble ecological niche model (ENM) framework, we developed updated maps of the global predicted environmental suitability of anthrax to measure relative risk at multiple scales of analysis, including a model for circumpolar regions. Additionally, we produced maps quantifying the disease transmission risk associated with anthrax to cattle, sheep, and goat populations. Environmental suitability for B. anthracis globally is concentered throughout Eurasia, sub-Saharan Africa, the Americas, Southeast Asia, Australia, and Oceania. Suitable environments for B. anthracis at the circumpolar extent extend above the Arctic Circle into portions of Russia, Canada, Iceland, Alaska, and northern Scandinavia. Environmental factors driving B. anthracis suitability globally include vegetation (EVI), land surface temperature (LST), soil characteristics, primary climate conditions, and topography. While, at the circumpolar scale, suitability is influenced by soil factors, topography, and the derived climate characteristics. The greatest risk to livestock is concentrated within the Indian Subcontinent, eastern Australia, Anatolia, the Caucasus region, Central Asia, the Balkans, Spain, Uruguay, eastern China, United States, Canada, and East Africa. This study expands on previous work that predicted the potential environmental niche of anthrax by providing enhanced knowledge on the potential spatial distribution of anthrax risk in the Southern Hemisphere, sub-Saharan Africa, Asia, and circumpolar regions of the Northern Hemisphere. We conclude that these updated maps will provide pertinent information to guide disease control programs, inform policymakers, and raise awareness at the global level to lessen morbidity and mortality among animals and humans located in environmentally suitable areas. This article is protected by copyright. All rights reserved.","notes":"1865-1682\nDeka, Mark A\nOrcid: 0000-0001-6379-0132\nVieira, Antonio R\nBower, William A\nJournal Article\nGermany\n2022/05/21\nTransbound Emerg Dis. 2022 May 19. doi: 10.1111/tbed.14602.","url":"https://pubmed.ncbi.nlm.nih.gov/35590480","author_address":"Centers for Disease Control and Prevention, Atlanta, GA, USA.","database_provider":"NLM","language":"eng","doi":"10.1111/tbed.14602"}
,{"record_number":"43777","reference_type":"Journal Article","author":"W. A. Bower; K. A. Hendricks; A. R. Vieira; R. M. Traxler; Z. Weiner; R. Lynfield; A. Hoffmaster","year":"2022","title":"What is anthrax?","secondary_title":"Pathogens","volume":"11","number":"6","edition":"6/16/2022","date":"16-Jun","short_title":"What is anthrax?","isbn_issn":"2076-0817 (Print)\n2076-0817","custom_1":"CDC Authored Publications","custom_2":"Disaster Preparedness and Emergency Services","custom_8":"14:28","accession_number":"35745544","keywords":"Bacillus anthracis\nBacillus cereus\nBacillus cereus biovar anthracis\nBacillus tropicus\nanthrax\npathogenesis\nplasmids","abstract":"Anthrax has been feared for its high mortality in animals and humans for centuries. The etiologic agent is considered a potentially devastating bioweapon, and since 1876-when Robert Koch demonstrated that Bacillus anthracis caused anthrax-it has been considered the sole cause of the disease. Anthrax is, however, a toxin-mediated disease. The toxins edema toxin and lethal toxin are formed from protein components encoded for by the pXO1 virulence plasmid present in pathogenic B. anthracis strains. However, other members of the Bacillus cereus group, to which B. anthracis belongs, have recently been shown to harbor the pXO1 plasmid and produce anthrax toxins. Infection with these Bacillus cereus group organisms produces a disease clinically similar to anthrax. This suggests that anthrax should be defined by the exotoxins encoded for by the pXO1 plasmid rather than the bacterial species it has historically been associated with, and that the definition of anthrax should be expanded to include disease caused by any member of the B. cereus group containing the toxin-producing pXO1 plasmid or anthrax toxin genes specifically.","notes":"2076-0817\nBower, William A\nOrcid: 0000-0001-6538-8665\nHendricks, Katherine A\nVieira, Antonio R\nTraxler, Rita M\nOrcid: 0000-0001-7580-4116\nWeiner, Zachary\nLynfield, Ruth\nHoffmaster, Alex\nJournal Article\n2022/06/25\nPathogens. 2022 Jun 16;11(6):690. doi: 10.3390/pathogens11060690.","url":"https://pubmed.ncbi.nlm.nih.gov/35745544","figure":"Bacterial Special Pathogens Branch, Centers for Disease Control and Prevention, Atlanta, GA 30329, USA.\nMinnesota Department of Health, Saint Paul, MN 55155, USA.","database_provider":"NLM","language":"eng","doi":"10.3390/pathogens11060690"}
,{"record_number":"43911","reference_type":"Journal Article","author":"W. A. Bower; K. A. Hendricks; A. R. Vieira; R. M. Traxler; Z. Weiner; R. Lynfield; A. Hoffmaster","year":"2022","title":"What is anthrax?","secondary_title":"Pathogens","volume":"11","number":"6","edition":"6/16/2022","date":"16-Jun","short_title":"What is anthrax?","isbn_issn":"2076-0817 (Print)\n2076-0817","custom_1":"CDC Authored Publications","custom_2":"Disaster Preparedness and Emergency Services","custom_8":"14:28","accession_number":"35745544","keywords":"Bacillus anthracis\nBacillus cereus\nBacillus cereus biovar anthracis\nBacillus tropicus\nanthrax\npathogenesis\nplasmids","abstract":"Anthrax has been feared for its high mortality in animals and humans for centuries. The etiologic agent is considered a potentially devastating bioweapon, and since 1876-when Robert Koch demonstrated that Bacillus anthracis caused anthrax-it has been considered the sole cause of the disease. Anthrax is, however, a toxin-mediated disease. The toxins edema toxin and lethal toxin are formed from protein components encoded for by the pXO1 virulence plasmid present in pathogenic B. anthracis strains. However, other members of the Bacillus cereus group, to which B. anthracis belongs, have recently been shown to harbor the pXO1 plasmid and produce anthrax toxins. Infection with these Bacillus cereus group organisms produces a disease clinically similar to anthrax. This suggests that anthrax should be defined by the exotoxins encoded for by the pXO1 plasmid rather than the bacterial species it has historically been associated with, and that the definition of anthrax should be expanded to include disease caused by any member of the B. cereus group containing the toxin-producing pXO1 plasmid or anthrax toxin genes specifically.","notes":"2076-0817\nBower, William A\nOrcid: 0000-0001-6538-8665\nHendricks, Katherine A\nVieira, Antonio R\nTraxler, Rita M\nOrcid: 0000-0001-7580-4116\nWeiner, Zachary\nLynfield, Ruth\nHoffmaster, Alex\nJournal Article\n2022/06/25\nPathogens. 2022 Jun 16;11(6):690. doi: 10.3390/pathogens11060690.","url":"https://pubmed.ncbi.nlm.nih.gov/35745544","author_address":"Bacterial Special Pathogens Branch, Centers for Disease Control and Prevention, Atlanta, GA 30329, USA.\nMinnesota Department of Health, Saint Paul, MN 55155, USA.","database_provider":"NLM","language":"eng","doi":"10.3390/pathogens11060690"}
,{"record_number":"44203","reference_type":"Journal Article","author":"P. Dawson; J. S. Salzer; C. A. Schrodt; K. Feldmann; C. B. Kolton; J. E. Gee; C. K. Marston; C. A. Gulvik; M. G. Elrod; A. Villarma; R. M. Traxler; M. E. Negrón; K. A. Hendricks; H. Moulton-Meissner; L. J. Rose; P. Byers; K. Taylor; D. Ware; G. A. Balsamo; T. Sokol; B. Barrett; E. Payne; S. Zaheer; G. O. Jung; S. Long; R. Quijano; L. LeBouf; B. O'Sullivan; E. Swaney; J. M. Antonini; M. A. Perio; Z. Weiner; W. A. Bower; A. R. Hoffmaster","year":"2022","title":"Epidemiologic investigation of two welder's anthrax cases caused by Bacillus cereus group bacteria: Occupational link established by environmental detection","volume":"17","number":"7","pages":"e0271597","edition":"7/23/2022","date":"23-Jul","short_title":"Epidemiologic investigation of two welder's anthrax cases caused by Bacillus cereus group bacteria: Occupational link established by environmental detection","isbn_issn":"2076-0817 (Print)\n2076-0817","custom_1":"CDC Authored Publications","custom_2":"Occupational Safety and Health","custom_8":"14:32","accession_number":"35894048","keywords":"Bacillus cereus\nBacillus tropicus\nanthrax\nanthrax toxin\nwelding","abstract":"Abstract Bacillus cereus group bacteria containing the anthrax toxin genes can cause fatal anthrax pneumonia in welders. Two welder's anthrax cases identified in 2020 were investigated to determine the source of each patient's exposure. Environmental sampling was performed at locations where each patient had recent exposure to soil and dust. Samples were tested for the anthrax toxin genes by real-time PCR, and culture was performed on positive samples to identify whether any environmental isolates matched the patient's clinical isolate. A total of 185 environmental samples were collected in investigation A for patient A and 108 samples in investigation B for patient B. All samples from investigation B were real-time PCR-negative, but 14 (8%) samples from investigation A were positive, including 10 from patient A's worksite and 4 from his work-related clothing and gear. An isolate genetically matching the one recovered from patient A was successfully cultured from a worksite soil sample. All welder's anthrax cases should be investigated to determine the source of exposure, which may be linked to their worksite. Welding and metalworking employers should consider conducting a workplace hazard assessment and implementing controls to reduce the risk of occupationally associated illnesses including welder's anthrax.","notes":"Dawson, Patrick\nOrcid: 0000-0002-1324-9994\nSalzer, Johanna S\nSchrodt, Caroline A\nFeldmann, Karl\nOrcid: 0000-0002-7041-6322\nKolton, Cari B\nGee, Jay E\nMarston, Chung K\nGulvik, Christopher A\nElrod, Mindy G\nVillarma, Aaron\nTraxler, Rita M\nOrcid: 0000-0001-7580-4116\nNegrón, María E\nHendricks, Kate A\nMoulton-Meissner, Heather\nRose, Laura J\nByers, Paul\nTaylor, Kathryn\nWare, Daphne\nBalsamo, Gary A\nSokol, Theresa\nBarrett, Bret\nOrcid: 0000-0001-6739-038x\nPayne, Erica\nZaheer, Saad\nJung, Ga On\nLong, Stephen\nQuijano, Ricardo\nLeBouf, Lindsey\nO'Sullivan, Briana\nOrcid: 0000-0003-2330-7876\nSwaney, Erin\nAntonini, James M\nOrcid: 0000-0003-0089-4158\nPerio, Marie A de\nWeiner, Zachary\nBower, William A\nOrcid: 0000-0001-6538-8665\nHoffmaster, Alex R\nJournal Article\nSwitzerland\n2022/07/28\nPathogens. 2022 Jul 23;11(8):825. doi: 10.3390/pathogens11080825.","url":"https://pubmed.ncbi.nlm.nih.gov/35894048","author_address":"National Center for Emerging and Zoonotic Infectious Diseases, Division of High-Consequence Pathogens and Pathology, CDC, Atlanta, GA 30329, USA.\nEpidemic Intelligence Service, CDC, Atlanta, GA 30329, USA.\nNational Institute for Occupational Safety and Health, CDC, Cincinnati, OH 45226, USA.\nNational Center for Emerging and Zoonotic Infectious Diseases, Division of Healthcare Quality Promotion, CDC, Atlanta, GA 30329, USA.\nMississippi State Department of Health, Jackson, MS 39216, USA.\nMississippi Public Health Laboratory, Jackson, MS 39216, USA.\nLouisiana Department of Health, New Orleans, LA 70802, USA.\nMississippi Baptist Medical Center Jackson, MS 39202, USA.\nHarris County Public Health, Houston, TX 77027, USA.\nHouston Health Department, Houston, TX 77054, USA.\nTexas Department of State Health Services, Austin, TX 78714, USA.","database_provider":"NLM","language":"eng","doi":"10.3390/pathogens11080825"}
,{"record_number":"44404","reference_type":"Journal Article","author":"A. Musewa; B. B. Mirembe; F. Monje; D. Birungi; C. Nanziri; F. L. Aceng; S. N. Kabwama; B. Kwesiga; D. B. Ndumu; L. Nyakarahuka; J. Buule; C. M. Cossaboom; D. Lowe; C. B. Kolton; C. K. Marston; R. A. Stoddard; A. R. Hoffmaster; A. R. Ario; B. P. Zhu","year":"2022","title":"Outbreak of cutaneous anthrax associated with handling meat of dead cows in Southwestern Uganda, May 2018","secondary_title":"Trop Med Health","volume":"50","number":"1","pages":"52","edition":"8/6/2022","date":"6-Aug","short_title":"Outbreak of cutaneous anthrax associated with handling meat of dead cows in Southwestern Uganda, May 2018","isbn_issn":"1348-8945 (Print)\n1348-8945","custom_1":"CDC Authored Publications","custom_2":"Zoonotic and Vectorborne Diseases","custom_8":"14:34","accession_number":"35933401","keywords":"Anthrax\nBacillus anthracis\nCutaneous\nOutbreak\nUganda\nZoonoses","abstract":"BACKGROUND: Anthrax is a zoonotic infection caused by the bacteria Bacillus anthracis. Humans acquire cutaneous infection through contact with infected animals or animal products. On May 6, 2018, three cows suddenly died on a farm in Kiruhura District. Shortly afterwards, a sub-county chief in Kiruhura District received reports of humans with suspected cutaneous anthrax in the same district. The patients had reportedly participated in the butchery and consumption of meat from the dead cows. We investigated to determine the magnitude of the outbreak, identify exposures associated with illness, and suggest evidence-based control measures. METHODS: We conducted a retrospective cohort study among persons whose households received any of the cow meat. We defined a suspected human cutaneous anthrax case as new skin lesions (e.g., papule, vesicle, or eschar) in a resident of Kiruhura District from 1 to 26 May 2018. A confirmed case was a suspected case with a lesion testing positive for B. anthracis by polymerase chain reaction (PCR). We identified cases through medical record review at Engari Health Centre and active case finding in the community. RESULTS: Of the 95 persons in the cohort, 22 were case-patients (2 confirmed and 20 suspected, 0 fatal cases) and 73 were non-case household members. The epidemic curve indicated multiple point-source exposures starting on May 6, when the dead cows were butchered. Among households receiving cow meat, participating in slaughtering (RR = 5.3, 95% CI 3.2-8.3), skinning (RR = 4.7, 95% CI = 3.1-7.0), cleaning waste (RR = 4.5, 95% CI = 3.1-6.6), and carrying meat (RR = 3.9, 95% CI = 2.2-7.1) increased the risk of infection. CONCLUSIONS: This cutaneous anthrax outbreak was caused by handling infected animal carcasses. We suggested to the Ministry of Agriculture, Animal Industry and Fisheries to strengthen surveillance for possible veterinary anthrax and ensure that communities do not consume carcasses of livestock that died suddenly. We also suggested that the Ministry of Health equip health facilities with first-line antibiotics for community members during outbreaks.","notes":"1349-4147\nMusewa, Angella\nMirembe, Bernadette Basuta\nMonje, Fred\nBirungi, Doreen\nNanziri, Carol\nAceng, Freda Loy\nKabwama, Steven N\nKwesiga, Benon\nNdumu, Deo Birungi\nNyakarahuka, Luke\nBuule, Joshua\nCossaboom, Caitlin M\nLowe, David\nKolton, Cari B\nMarston, Chung K\nStoddard, Robyn A\nHoffmaster, Alex R\nArio, Alex Riolexus\nZhu, Bao-Ping\nGH001353-01/U.S. President's Emergency Plan for AIDS Relief/\nJournal Article\n2022/08/07\nTrop Med Health. 2022 Aug 6;50(1):52. doi: 10.1186/s41182-022-00445-0.","url":"https://pubmed.ncbi.nlm.nih.gov/35933401","author_address":"Uganda Public Health Fellowship Program, Kampala, Uganda. amusewa@afrohun.org.\nUganda Public Health Fellowship Program, Kampala, Uganda.\nNational Animal Disease Diagnosis and Epidemiology Centre, Ministry of Agriculture, Animal Industry and Fisheries, Entebbe, Uganda.\nUganda Virus Research Institute, Entebbe, Uganda.\nNational Centre for Emerging and Zoonotic Infectious Diseases, US Centers for Disease Control and Prevention, Atlanta, USA.\nMinistry of Health, Kampala, Uganda.\nDivision of Global Health Protection, US Centers for Disease Control and Prevention, Atlanta, USA.","database_provider":"NLM","language":"eng","doi":"10.1186/s41182-022-00445-0"}
,{"record_number":"44468","reference_type":"Journal Article","author":"L. M. Carroll; C. K. Marston; C. B. Kolton; C. A. Gulvik; J. E. Gee; Z. P. Weiner; J. Kovac","year":"2022","title":"Strains associated with two 2020 welder anthrax cases in the United States belong to separate lineages within Bacillus cereus sensu lato","secondary_title":"Pathogens","number_of_volumes":"11","pages":"8","edition":"7/29/2022","date":"29-Jul","short_title":"Strains associated with two 2020 welder anthrax cases in the United States belong to separate lineages within Bacillus cereus sensu lato","isbn_issn":"2076-0817 (Print)\n2076-0817","custom_1":"CDC Authored Publications","custom_2":"Disaster Preparedness and Emergency Services","custom_8":"14:37","accession_number":"36014977","keywords":"Bacillus anthracis\nBacillus cereus\nBacillus cereus biovar Anthracis\nBacillus cereus group\nBacillus tropicus\nanthrax\nbioterrorism\nphylogenetics\ntaxonomy\nwhole-genome sequencing","abstract":"Anthrax-causing members of Bacillus cereus sensu lato (s.l.) pose a serious threat to public health. While most anthrax-causing strains resemble B. anthracis phenotypically, rare cases of anthrax-like illness caused by strains resembling B. cereus\" have been reported. Here, whole-genome sequencing was used to characterize three B. cereus s.l. isolates associated with two 2020 welder anthrax cases in the United States, which resembled \"B. cereus\" phenotypically. Comparison of the three genomes sequenced here to all publicly available, high-quality B. cereus s.l. genomes (n = 2890 total genomes) demonstrated that genomes associated with each case effectively belonged to separate species at the conventional 95% average nucleotide identity prokaryotic species threshold. Two PubMLST sequence type 78 (ST78) genomes affiliated with a case in Louisiana were most closely related to B. tropicus and possessed genes encoding the Bps exopolysaccharide capsule, as well as hemolysin BL (Hbl) and cytotoxin K (CytK). Comparatively, a ST108 genome associated with a case in Texas was most closely related to B. anthracis; however, like other anthrax-causing strains most closely related to B. anthracis, this genome did not possess Bps-, Hbl-, or CytK-encoding genes. Overall, results presented here provide insights into the evolution of anthrax-causing B. cereus s.l.\"","notes":"2076-0817\nCarroll, Laura M\nMarston, Chung K\nKolton, Cari B\nGulvik, Christopher A\nGee, Jay E\nOrcid: 0000-0003-4308-1659\nWeiner, Zachary P\nKovac, Jasna\nOrcid: 0000-0002-9465-4552\nPEN04646/United States Department of Agriculture/\n1015787/United States Department of Agriculture/\nJournal Article\n2022/08/27\nPathogens. 2022 Jul 29;11(8):856. doi: 10.3390/pathogens11080856.","url":"https://pubmed.ncbi.nlm.nih.gov/36014977","author_address":"Structural and Computational Biology Unit, EMBL, 69117 Heidelberg, Germany.\nCenters for Disease Control and Prevention, Atlanta, GA 30329, USA.\nDepartment of Food Science, The Pennsylvania State University, University Park, PA 16802, USA.","database_provider":"NLM","language":"eng","doi":"10.3390/pathogens11080856"}
,{"record_number":"45054","reference_type":"Journal Article","author":"S. Binney; M. K. Person; R. M. Traxler; R. Cook; W. A. Bower; K. Hendricks","year":"2022","title":"Algorithms for the identification of anthrax meningitis during a mass casualty event based on a systematic review of systemic anthrax from 1880 through 2018","secondary_title":"Clin Infect Dis","volume":"75","number":"Supplement_3","pages":"S468-s477","date":"17-Oct","short_title":"Algorithms for the identification of anthrax meningitis during a mass casualty event based on a systematic review of systemic anthrax from 1880 through 2018","isbn_issn":"1058-4838","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Anthrax Preparedness","custom_8":"14:44","accession_number":"36251554","keywords":"algorithm\nanthrax\nmass casualty\nmeningitis\ntriage","abstract":"BACKGROUND: During an anthrax mass casualty event, prompt identification of patients with anthrax meningitis is important. Previous research has suggested use of a screening tool based on neurological symptoms and signs. METHODS: Using historical anthrax patient data from 1880 through 2018, we analyzed risk factors for meningitis. We developed lists of symptoms and signs (ie, algorithms) for predicting meningitis with high sensitivity and specificity. We evaluated both single and paired algorithms as screening tools. RESULTS: A single algorithm with 1 or more neurological symptoms or signs identifying patients with likely meningitis achieved high sensitivity (86%; 95% confidence interval [CI], 71%-100%) and specificity (90%; 95% CI, 82%-98%). Pairing algorithms with the same symptoms and signs (severe headache, altered mental status, meningeal signs, and other neurological deficits\") improved specificity (99%; 95% CI, 97%-100%) but left 17.3% of patients in a middle \"indeterminate\" meningitis category and in need of additional diagnostic testing to determine likely meningitis status. Pairing algorithms with differing symptoms and signs also improved specificity over the single algorithm (92%; 95% CI, 85%-99%) but categorized just 2.5% of patients as indeterminate. CONCLUSIONS: Our study confirms prior research suggesting quick and reliable assessment of patients for anthrax meningitis is possible based on the presence or absence of certain symptoms and signs. A single algorithm was adequate; however, if we assumed low-resource diagnostic testing was feasible for some patients, pairing algorithms improved specificity. Pairing algorithms with differing symptoms and signs minimized the proportion of patients requiring additional diagnostics.\"","notes":"1537-6591\nBinney, Sophie\nPerson, Marissa K\nTraxler, Rita M\nCook, Rachel\nBower, William A\nOrcid: 0000-0001-6538-8665\nHendricks, Katherine\nJournal Article\nUnited States\n2022/10/18\nClin Infect Dis. 2022 Oct 17;75(Supplement_3):S468-S477. doi: 10.1093/cid/ciac546.","url":"https://pubmed.ncbi.nlm.nih.gov/36251554","author_address":"School of Public Health, Georgia State University, Atlanta, Georgia, USA.\nDivision of High-Consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nOak Ridge Institute for Science and Education, CDC Fellowship Program, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.","database_provider":"NLM","language":"eng","doi":"10.1093/cid/ciac546"}
,{"record_number":"45057","reference_type":"Journal Article","author":"K. Hendricks; M. K. Person; J. S. Bradley; T. Mongkolrattanothai; N. Hupert; P. Eichacker; A. M. Friedlander; W. A. Bower","year":"2022","title":"Clinical features of patients hospitalized for all routes of anthrax, 1880-2018: A systematic review","secondary_title":"Clin Infect Dis","volume":"75","number":"Supplement_3","pages":"S341-s353","date":"17-Oct","short_title":"Clinical features of patients hospitalized for all routes of anthrax, 1880-2018: A systematic review","isbn_issn":"1058-4838","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Anthrax Preparedness","custom_8":"14:44","accession_number":"36251560","keywords":"anthrax\ncutaneous anthrax\ningestion anthrax\ninhalation anthrax\ninjection anthrax","abstract":"BACKGROUND: Anthrax is a toxin-mediated zoonotic disease caused by Bacillus anthracis, with a worldwide distribution recognized for millennia. Bacillus anthracis is considered a potential biowarfare agent. METHODS: We completed a systematic review for clinical and demographic characteristics of adults and children hospitalized with anthrax (cutaneous, inhalation, ingestion, injection [from contaminated heroin], primary meningitis) abstracted from published case reports, case series, and line lists in English from 1880 through 2018, assessing treatment impact by type and severity of disease. We analyzed geographic distribution, route of infection, exposure to anthrax, and incubation period. RESULTS: Data on 764 adults and 167 children were reviewed. Most cases reported for 1880 through 1915 were from Europe; those for 1916 through 1950 were from North America; and from 1951 on, cases were from Asia. Cutaneous was the most common form of anthrax for all populations. Since 1960, adult anthrax mortality has ranged from 31% for cutaneous to 90% for primary meningitis. Median incubation periods ranged from 1 day (interquartile range [IQR], 0-4) for injection to 7 days (IQR, 4-9) for inhalation anthrax. Most patients with inhalation anthrax developed pleural effusions and more than half with ingestion anthrax developed ascites. Treatment and critical care advances have improved survival for those with systemic symptoms, from approximately 30% in those untreated to approximately 70% in those receiving antimicrobials or antiserum/antitoxin. CONCLUSIONS: This review provides an improved evidence base for both clinical care of individual anthrax patients and public health planning for wide-area aerosol releases of B. anthracis spores.","notes":"1537-6591\nHendricks, Katherine\nPerson, Marissa K\nBradley, John S\nMongkolrattanothai, Thitipong\nHupert, Nathaniel\nEichacker, Peter\nFriedlander, Arthur M\nBower, William A\nOrcid: 0000-0001-6538-8665\nJournal Article\nUnited States\n2022/10/18\nClin Infect Dis. 2022 Oct 17;75(Supplement_3):S341-S353. doi: 10.1093/cid/ciac534.","url":"https://pubmed.ncbi.nlm.nih.gov/36251560","author_address":"Division of High Consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nDivision of Infectious Diseases, Rady Children's Hospital San Diego and the University of California San Diego School of Medicine, San Diego, California, USA.\nOak Ridge Institute for Science and Education, CDC Fellowship Program, Oak Ridge, Tennessee, USA.\nDepartments of Population Health Sciences and of Medicine, Weill Cornell Medicine, Cornell University, and New York-Presbyterian Hospital, New York, New York, USA.\nDepartment of Critical Care Medicine, Clinical Center, National Institutes of Health, Bethesda, Maryland, USA.\nUS Army Medical Research Institute of Infectious Diseases, Frederick, Maryland, USA.\nDepartment of Medicine, Uniformed Services University of Health Sciences, Bethesda, Maryland, USA.","database_provider":"NLM","language":"eng","doi":"10.1093/cid/ciac534"}
,{"record_number":"45058","reference_type":"Journal Article","author":"E. M. Hesse; S. Godfred-Cato; W. A. Bower","year":"2022","title":"Antitoxin use in the prevention and treatment of anthrax disease: A systematic review","secondary_title":"Clin Infect Dis","volume":"75","number":"Supplement_3","pages":"S432-s440","date":"17-Oct","short_title":"Antitoxin use in the prevention and treatment of anthrax disease: A systematic review","isbn_issn":"1058-4838","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Anthrax Preparedness","custom_8":"14:44","accession_number":"36251559","keywords":"Animal Rule\nclinical guidelines\nhuman case studies\npostexposure prophylaxis\ntreatment","abstract":"BACKGROUND: Bacillus anthracis is a high-priority threat agent because of its widespread availability, easy dissemination, and ability to cause substantial morbidity and mortality. Although timely and appropriate antimicrobial therapy can reduce morbidity and mortality, the role of adjunctive therapies continues to be explored. METHODS: We searched 11 databases for articles that report use of anthrax antitoxins in treatment or prevention of systemic anthrax disease published through July 2019. We identified other data sources through reference search and communication with experts. We included English-language studies on antitoxin products with approval by the US Food and Drug Administration (FDA) for anthrax in humans, nonhuman primates, and rabbits. Two researchers independently reviewed studies for inclusion and abstracted relevant data. RESULTS: We abstracted data from 12 publications and 2 case reports. All 3 FDA-approved anthrax antitoxins demonstrated significant improvement in survival as monotherapy over placebo in rabbits and nonhuman primates. No study found significant improvement in survival with combination antitoxin and antimicrobial therapy compared to antimicrobial monotherapy. Case reports and case series described 25 patients with systemic anthrax disease treated with antitoxins; 17 survived. Animal studies that used antitoxin monotherapy as postexposure prophylaxis (PEP) demonstrated significant improvement in survival over placebo, with greatest improvements coming with early administration. CONCLUSIONS: Limited human and animal evidence indicates that adjunctive antitoxin treatment may improve survival from systemic anthrax infection. Antitoxins may also provide an alternative therapy to antimicrobials for treatment or PEP during an intentional anthrax incident that could involve a multidrug-resistant B. anthracis strain.","notes":"1537-6591\nHesse, Elisabeth M\nGodfred-Cato, Shana\nBower, William A\nOrcid: 0000-0001-6538-8665\nJournal Article\nUnited States\n2022/10/18\nClin Infect Dis. 2022 Oct 17;75(Supplement_3):S432-S440. doi: 10.1093/cid/ciac532.","url":"https://pubmed.ncbi.nlm.nih.gov/36251559","author_address":"Division of Preparedness and Emerging Infections, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nDivision of Birth Defects and Infant Disorders, National Center on Birth Defects and Developmental Disabilities, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nDivision of High-Consequence Pathogens and Pathology, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.","database_provider":"NLM","language":"eng","doi":"10.1093/cid/ciac532"}
,{"record_number":"45059","reference_type":"Journal Article","author":"M. A. Honein; A. R. Hoffmaster","year":"2022","title":"Responding to the threat posed by anthrax: Updated evidence to improve preparedness","secondary_title":"Clin Infect Dis","volume":"75","number":"Supplement_3","pages":"S339-s340","date":"17-Oct","short_title":"Responding to the threat posed by anthrax: Updated evidence to improve preparedness","isbn_issn":"1058-4838","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Anthrax Preparedness","custom_8":"14:44","accession_number":"36251547","notes":"1537-6591\nHonein, Margaret A\nHoffmaster, Alex R\nJournal Article\nUnited States\n2022/10/18\nClin Infect Dis. 2022 Oct 17;75(Supplement_3):S339-S340. doi: 10.1093/cid/ciac567.","url":"https://pubmed.ncbi.nlm.nih.gov/36251547","author_address":"Division of Preparedness and Emerging Infections, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nDivision of High-Consequence Pathogens and Pathology, National Center for Emerging and Zoonotic Infectious Diseases, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.","database_provider":"NLM","language":"eng","doi":"10.1093/cid/ciac567"}
,{"record_number":"45061","reference_type":"Journal Article","author":"A. Kutmanova; S. Zholdoshev; K. M. Roguski; M. Sholpanbay Uulu; M. K. Person; R. Cook; J. Bugrysheva; P. Nadol; A. Buranchieva; L. Imanbaeva; A. Dzhangazieva; W. A. Bower; K. Hendricks","year":"2022","title":"Risk factors for severe cutaneous anthrax in a retrospective case series and use of a clinical algorithm to identify likely meningitis and evaluate treatment outcomes, Kyrgyz Republic, 2005-2012","secondary_title":"Clin Infect Dis","volume":"75","number":"Supplement_3","pages":"S478-s486","date":"17-Oct","short_title":"Risk factors for severe cutaneous anthrax in a retrospective case series and use of a clinical algorithm to identify likely meningitis and evaluate treatment outcomes, Kyrgyz Republic, 2005-2012","isbn_issn":"1058-4838","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Anthrax Preparedness","custom_8":"14:44","accession_number":"36251556","keywords":"Kyrgyz Republic\nanthrax\nmeningitis\ntreatment","abstract":"BACKGROUND: US Centers for Disease Control and Prevention guidelines currently recommend triple-therapy antimicrobial treatment for anthrax meningitis. In the Kyrgyz Republic, a country with endemic anthrax, cutaneous anthrax patients are routinely hospitalized and treated successfully with only monotherapy or dual therapy. Clinical algorithms have been developed to identify patients with likely anthrax meningitis based on signs and symptoms alone. We sought to retrospectively identify likely meningitis patients in the Kyrgyz Republic using a clinical algorithm and evaluate risk factors and their outcomes by type of treatment. METHODS: We conducted a retrospective chart review of cutaneous anthrax patients in the Kyrgyz Republic from 2005 through 2012. Using previous methods, we developed a highly specific algorithm to categorize patients by meningitis status. We then evaluated patient risk factors, treatments, and outcomes by disease severity and meningitis status. RESULTS: We categorized 37 of 230 cutaneous anthrax patients as likely having meningitis. All 37 likely meningitis patients survived, receiving only mono- or dual-therapy antimicrobials. We identified underlying medical conditions, such as obesity, hypertension, and chronic obstructive pulmonary disease, and tobacco and alcohol use, as potential risk factors for severe anthrax and anthrax meningitis. CONCLUSIONS: Based on our analyses, treatment of anthrax meningitis may not require 3 antimicrobials, which could impact future anthrax treatment recommendations. In addition, chronic comorbidities may increase risk for severe anthrax and anthrax meningitis. Future research should further investigate potential risk factors for severe anthrax and their impact on laboratory-confirmed meningitis and evaluate mono- and dual-therapy antimicrobial regimens for anthrax meningitis.","notes":"1537-6591\nKutmanova, Ainura\nOrcid: 0000-0003-2611-6426\nZholdoshev, Saparbai\nRoguski, Katherine M\nSholpanbay Uulu, Melis\nPerson, Marissa K\nCook, Rachel\nBugrysheva, Julia\nNadol, Patrick\nBuranchieva, Aisuluu\nImanbaeva, Lira\nDzhangazieva, Ainura\nBower, William A\nOrcid: 0000-0001-6538-8665\nHendricks, Katherine\nJournal Article\nUnited States\n2022/10/18\nClin Infect Dis. 2022 Oct 17;75(Supplement_3):S478-S486. doi: 10.1093/cid/ciac537.","url":"https://pubmed.ncbi.nlm.nih.gov/36251556","author_address":"Department of Infectious Diseases, International Higher School of Medicine, Bishkek, Kyrgyz Republic.\nDepartment of Epidemiology, Microbiology with a course of Infectious Diseases, Osh State University, Osh, Kyrgyz Republic.\nDivision of High-Consequence Pathogens and Pathology, US Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nDepartment of Infectious Diseases, Kyrgyz State Medical Academy, Bishkek, Kyrgyz Republic.\nDivision of Preparedness and Emerging Infections, US Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nCDC Kyrgyzstan, US Centers for Disease Control and Prevention, Bishkek, Kyrgyz Republic.","database_provider":"NLM","language":"eng","doi":"10.1093/cid/ciac537"}
,{"record_number":"45062","reference_type":"Journal Article","author":"E. Lombarte Espinosa; M. C. Villuendas Usón; J. Arribas García; I. Jado García; R. Huarte Lacunza; P. Zárate Chug; L. M. Claraco Vega; M. Jesús Santed Andrés; M. J. Ríos; R. Cook; J. M. Simard; A. E. Boyer; A. Rezusta","year":"2022","title":"Survival of patient with hemorrhagic meningitis associated with inhalation anthrax","secondary_title":"Clin Infect Dis","volume":"75","number":"Supplement_3","pages":"S364-s372","date":"17-Oct","short_title":"Survival of patient with hemorrhagic meningitis associated with inhalation anthrax","isbn_issn":"1058-4838","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Anthrax Preparedness","custom_8":"14:44","accession_number":"36251557","keywords":"Bacillus anthracis\nanthrax\nantitoxin\ninhalation anthrax\nmeningitis","abstract":"This report describes a 49-year-old male construction worker who acquired a Bacillus anthracis infection after working on a sheep farm. He experienced a severe respiratory infection, septic shock, and hemorrhagic meningoencephalitis with severe intracranial hypertension. After several weeks with multiple organ dysfunction syndrome, he responded favorably to antibiotic treatment. Three weeks into his hospitalization, an intracranial hemorrhage and cerebral edema led to an abrupt deterioration in his neurological status. A single dose of raxibacumab was added to his antimicrobial regimen on hospital day 27. His overall status, both clinical and radiographic, improved within a few days. He was discharged 2 months after admission and appears to have fully recovered.","notes":"1537-6591\nLombarte Espinosa, Evelyn\nVilluendas Usón, María Cruz\nArribas García, Jorge\nJado García, Isabel\nHuarte Lacunza, Rafael\nZárate Chug, Paola\nClaraco Vega, Luis Manuel\nJesús Santed Andrés, María\nRíos, María Jiménez\nCook, Rachel\nSimard, J Marc\nBoyer, Anne E\nRezusta, Antonio\nJournal Article\nUnited States\n2022/10/18\nClin Infect Dis. 2022 Oct 17;75(Supplement_3):S364-S372. doi: 10.1093/cid/ciac531.","url":"https://pubmed.ncbi.nlm.nih.gov/36251557","author_address":"Servicio Medicina Intensiva, UCI Polivalente, Hospital Universitario Miguel Servet, Zaragoza, Spain.\nServicio Microbiología, Hospital Universitario Miguel Servet, IIS Aragón, Zaragoza, Spain.\nServicio Microbiología, Hospital Comarcal Alcañiz, Teruel, Spain.\nLaboratorio de Referencia e Investigación en Patógenos Especiales, Centro Nacional de Microbiología. Instituto de Salud Carlos III, Madrid, Spain.\nServicio de Farmacia Hospitalaria, Hospital Universitario Miguel Servet, Zaragoza, Spain.\nOak Ridge Institute for Science and Education, CDC Fellowship Program, Division of High Consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nDepartments of Neurosurgery, Pathology and Physiology, University of Maryland School of Medicine, Baltimore, Maryland, USA.\nDivision of Laboratory Sciences, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.","database_provider":"NLM","language":"eng","doi":"10.1093/cid/ciac531"}
,{"record_number":"45065","reference_type":"Journal Article","author":"M. K. Person; R. Cook; J. S. Bradley; N. Hupert; W. A. Bower; K. Hendricks","year":"2022","title":"Systematic review of hospital treatment outcomes for naturally acquired and bioterrorism-related anthrax, 1880-2018","secondary_title":"Clin Infect Dis","volume":"75","number":"Supplement_3","pages":"S392-s401","date":"17-Oct","short_title":"Systematic review of hospital treatment outcomes for naturally acquired and bioterrorism-related anthrax, 1880-2018","isbn_issn":"1058-4838","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Anthrax Preparedness","custom_8":"14:44","accession_number":"36251553","keywords":"anthrax\nanthrax meningitis\nantitoxin/antiserum\ninhalation anthrax\ntreatment","abstract":"BACKGROUND: Bacillus anthracis can cause anthrax and is a potential bioterrorism agent. The 2014 Centers for Disease Control and Prevention recommendations for medical countermeasures against anthrax were based on in vitro data and expert opinion. However, a century of previously uncompiled observational human data that often includes treatment and outcomes is available in the literature for analysis. METHODS: We reviewed treatment outcomes for patients hospitalized with anthrax. We stratified patients by meningitis status, route of infection, and systemic criteria, then analyzed survival by treatment type, including antimicrobials, antitoxin/antiserum, and steroids. Using logistic regression, we calculated odds ratios and 95% confidence intervals to compare survival between treatments. We also calculated hospital length of stay. Finally, we evaluated antimicrobial postexposure prophylaxis (PEPAbx) using data from a 1970 Russian-language article. RESULTS: We identified 965 anthrax patients reported from 1880 through 2018. After exclusions, 605 remained: 430 adults, 145 children, and 30 missing age. Survival was low for untreated patients and meningitis patients, regardless of treatment. Most patients with localized cutaneous or nonmeningitis systemic anthrax survived with 1 or more antimicrobials; patients with inhalation anthrax without meningitis fared better with at least 2. Bactericidal antimicrobials were effective for systemic anthrax; addition of a protein synthesis inhibitor(s) (PSI) to a bactericidal antimicrobial(s) did not improve survival. Likewise, addition of antitoxin/antiserum to antimicrobials did not improve survival. Mannitol improved survival for meningitis patients, but steroids did not. PEPAbx reduced risk of anthrax following exposure to B. anthracis. CONCLUSIONS: Combination therapy appeared to be superior to monotherapy for inhalation anthrax without meningitis. For anthrax meningitis, neither monotherapy nor combination therapy were particularly effective; however, numbers were small. For localized cutaneous anthrax, monotherapy was sufficient. For B. anthracis exposures, PEPAbx was effective.","notes":"1537-6591\nPerson, Marissa K\nCook, Rachel\nBradley, John S\nHupert, Nathaniel\nBower, William A\nOrcid: 0000-0001-6538-8665\nHendricks, Katherine\nNational Science Foundation/\nJournal Article\nUnited States\n2022/10/18\nClin Infect Dis. 2022 Oct 17;75(Supplement_3):S392-S401. doi: 10.1093/cid/ciac536.","url":"https://pubmed.ncbi.nlm.nih.gov/36251553","author_address":"Division of High Consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nOak Ridge Institute for Science and Education, CDC Fellowship Program, Division of High Consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, USA.\nDivision of Infectious Diseases, Rady Children's Hospital San Diego and the University of California San Diego School of Medicine, San Diego, California, USA.\nDepartments of Population Health Sciences and of Medicine, Weill Cornell Medicine (Cornell University) and New York-Presbyterian Hospital, New York, New York, USA.","database_provider":"NLM","language":"eng","doi":"10.1093/cid/ciac536"}
,{"record_number":"45066","reference_type":"Journal Article","author":"R. M. Slay; R. Cook; K. Hendricks; D. Boucher; M. Merchlinsky","year":"2022","title":"Pre- and postlicensure animal efficacy studies comparing anthrax antitoxins","secondary_title":"Clin Infect Dis","volume":"75","number":"Supplement_3","pages":"S441-s450","date":"17-Oct","short_title":"Pre- and postlicensure animal efficacy studies comparing anthrax antitoxins","isbn_issn":"1058-4838","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Anthrax Preparedness","custom_8":"14:44","accession_number":"36251555","keywords":"Bacillus anthracis\nInhalation anthrax\nNew Zealand white rabbit\nantitoxin\nprotective antigen","abstract":"BACKGROUND: The deliberate use of Bacillus anthracis spores is believed by the US government to be a high bioweapons threat. The first line of defense following potential exposure to B. anthracis spores would be postexposure prophylaxis with antimicrobials that have activity against B. anthracis. Additional therapies to address the effects of toxins may be needed in systemically ill individuals. Over the last 2 decades, the United States government (USG) collaborated with the private sector to develop, test, and stockpile 3 antitoxins: anthrax immunoglobulin intravenous (AIGIV), raxibacumab, and obiltoxaximab. All 3 products target protective antigen, a protein factor common to the 2 exotoxins released by B. anthracis, and hamper or block the toxins' effects and prevent or reduce pathogenesis. These antitoxins were approved for licensure by the United States Food and Drug Administration based on animal efficacy studies compared to placebo. METHODS: We describe USG-sponsored pre- and postlicensure studies that compared efficacy of 3 antitoxins in a New Zealand White rabbit model of inhalation anthrax; survival following a lethal aerosolized dose of B. anthracis spores was the key measure of effectiveness. To model therapeutic intervention, intravenous treatments were started following onset of antigenemia. RESULTS: In pre- and postlicensure studies, all 3 antitoxins were superior to placebo; in the postlicensure study, raxibacumab and obiltoxaximab were superior to AIGIV, but neither was superior to the other. CONCLUSIONS: These data illustrate the relative therapeutic benefit of the 3 antitoxins and provide a rationale to prioritize their deployment.","notes":"1537-6591\nSlay, Raymond M\nCook, Rachel\nHendricks, Katherine\nBoucher, David\nMerchlinsky, Michael\nJournal Article\nUnited States\n2022/10/18\nClin Infect Dis. 2022 Oct 17;75(Supplement_3):S441-S450. doi: 10.1093/cid/ciac593.","url":"https://pubmed.ncbi.nlm.nih.gov/36251555","author_address":"National Institute of Allergy and Infectious Diseases, National Institutes of Health, Bethesda, Maryland, USA.\nOak Ridge Institute for Science and Education, CDC Fellowship Program, Division of High-Consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nDivision of High-Consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, Georgia, USA.\nOffice of the Assistant Secretary for Preparedness and Response, Biomedical Advanced Research and Development Authority, Washington, District of Columbia, USA.","database_provider":"NLM","language":"eng","doi":"10.1093/cid/ciac593"}
,{"record_number":"45067","reference_type":"Journal Article","author":"J. M. Thompson; R. Cook; M. K. Person; M. E. Negrón; R. M. Traxler; W. A. Bower; K. Hendricks","year":"2022","title":"Risk factors for death or meningitis in adults hospitalized for cutaneous anthrax, 1950-2018: A systematic review","secondary_title":"Clin Infect Dis","volume":"75","number":"Supplement_3","pages":"S459-s467","date":"17-Oct","short_title":"Risk factors for death or meningitis in adults hospitalized for cutaneous anthrax, 1950-2018: A systematic review","isbn_issn":"1058-4838","custom_1":"Key Scientific Articles in Featured Topic Areas","custom_2":"Anthrax Preparedness","custom_8":"14:44","accession_number":"36251551","keywords":"anthrax\ncutaneous\nmass casualty incident\ntriage\nwith cutaneous anthrax","abstract":"BACKGROUND: Cutaneous anthrax accounts for approximately 95% of anthrax cases worldwide. About 24% of untreated patients die, and many cases are complicated by meningitis. Here, we explore clinical features of cutaneous disease associated with poor outcomes. METHODS: A systematic review identified 303 full-text articles published from 1950 through 2018 that met predefined inclusion criteria. Cases were abstracted, and descriptive analyses and univariate logistic regression were conducted to identify prognostic indicators for cutaneous anthrax. RESULTS: Of 182 included patients, 47 (25.8%) died. Previously reported independent predictors for death or meningitis that we confirmed included fever or chills; nausea or vomiting; headache; severe headache; nonheadache, nonmeningeal signs; leukocytosis; and bacteremia. Newly identified predictors included anxiety, abdominal pain, diastolic hypotension, skin trauma, thoracic edema, malignant pustule edema, lymphadenopathy, and evidence of coagulopathy (all with P < .05). CONCLUSIONS: We identified patient presentations not previously associated with poor outcomes.","notes":"1537-6591\nThompson, Julie M\nCook, Rachel\nPerson, Marissa K\nNegrón, María E\nTraxler, Rita M\nBower, William A\nOrcid: 0000-0001-6538-8665\nHendricks, Katherine\nOrcid: 0000-0003-4010-3584\nJournal Article\nUnited States\n2022/10/18\nClin Infect Dis. 2022 Oct 17;75(Supplement_3):S459-S467. doi: 10.1093/cid/ciac533.","url":"https://pubmed.ncbi.nlm.nih.gov/36251551","author_address":"Department of Tropical Medicine, School of Public Health and Tropical Medicine, Tulane University, New Orleans, Louisiana 70112, USA.\nOak Ridge Institute for Science and Education, CDC Fellowship Program, Division of High-Consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, Georgia 30333, USA.\nDivision of High-Consequence Pathogens and Pathology, Centers for Disease Control and Prevention, Atlanta, Georgia 30333, USA.","database_provider":"NLM","language":"eng","doi":"10.1093/cid/ciac533"}
,{"record_number":"45465","reference_type":"Journal Article","author":"V. A. Ndolo; D. W. Redding; I. Lekolool; D. M. Mwangangi; D. O. Odhiambo; M. A. Deka; A. J. K. Conlan; J. L. N. Wood","year":"2022","title":"Drivers and potential distribution of anthrax occurrence and incidence at national and sub-county levels across Kenya from 2006 to 2020 using INLA","secondary_title":"Sci Rep","number_of_volumes":"12","number":"1","pages":"20083","edition":"11/22/2022","date":"22-Nov","short_title":"Drivers and potential distribution of anthrax occurrence and incidence at national and sub-county levels across Kenya from 2006 to 2020 using INLA","isbn_issn":"2045-2322","custom_1":"CDC Authored Publications","custom_2":"Zoonotic and Vectorborne Diseases","custom_8":"14:49","accession_number":"36418897","keywords":"Animals\nCattle\nHumans\n*Anthrax/epidemiology/veterinary\nKenya/epidemiology\nIncidence\nBayes Theorem\n*Bacillus anthracis\nLivestock","abstract":"Anthrax is caused by, Bacillus anthracis, a soil-borne bacterium that infects grazing animals. Kenya reported a sharp increase in livestock anthrax cases from 2005, with only 12% of the sub-counties (decentralised administrative units used by Kenyan county governments to facilitate service provision) accounting for almost a third of the livestock cases. Recent studies of the spatial extent of B. anthracis suitability across Kenya have used approaches that cannot capture the underlying spatial and temporal dependencies in the surveillance data. To address these limitations, we apply the first Bayesian approach using R-INLA to analyse a long-term dataset of livestock anthrax case data, collected from 2006 to 2020 in Kenya. We develop a spatial and a spatiotemporal model to investigate the distribution and socio-economic drivers of anthrax occurrence and incidence at the national and sub-county level. The spatial model was robust to geographically based cross validation and had a sensitivity of 75% (95% CI 65-75) against withheld data. Alarmingly, the spatial model predicted high intensity of anthrax across the Northern counties (Turkana, Samburu, and Marsabit) comprising pastoralists who are often economically and politically marginalized, and highly predisposed to a greater risk of anthrax. The spatiotemporal model showed a positive link between livestock anthrax risk and the total human population and the number of exotic dairy cattle, and a negative association with the human population density, livestock producing households, and agricultural land area. Public health programs aimed at reducing human-animal contact, improving access to healthcare, and increasing anthrax awareness, should prioritize these endemic regions.","notes":"2045-2322\nNdolo, Valentina A\nRedding, David William\nLekolool, Isaac\nMwangangi, David Mumo\nOdhiambo, David Onyango\nDeka, Mark A\nConlan, Andrew J K\nWood, James L N\nOPP1144/GATES/Bill & Melinda Gates Foundation/United States\nJournal Article\nEngland\n2022/11/24\nSci Rep. 2022 Nov 22;12(1):20083. doi: 10.1038/s41598-022-24589-5.","url":"https://pubmed.ncbi.nlm.nih.gov/36418897","author_address":"Disease Dynamics Unit, Department of Veterinary Medicine, University of Cambridge, Madingley Rd, Cambridge, Cambridgeshire, UK. valentinendolo@gmail.com.\nDepartment of Genetics, Evolution and Environment, Centre for Biodiversity and Environment Research, University College London, London, UK.\nDepartment of Veterinary Services, Kenya Wildlife Service, Nairobi, Kenya.\nState Department for Livestock (Kenya), Directorate of Veterinary Services, Kabete, Kenya.\nDepartment of Biochemistry, University of Nairobi, Nairobi, Kenya.\nUS Centers for Disease Control and Prevention, 1600 Clifton Rd. NE, Atlanta, GA, USA.\nDisease Dynamics Unit, Department of Veterinary Medicine, University of Cambridge, Madingley Rd, Cambridge, Cambridgeshire, UK.","name_of_database":"NLM","database_provider":"eng","doi":"10.1038/s41598-022-24589-5"}]

  recorded_at: Mon, 09 Jan 2023 17:10:05 GMT
recorded_with: VCR 6.1.0
