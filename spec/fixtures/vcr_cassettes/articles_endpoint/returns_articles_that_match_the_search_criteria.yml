---
http_interactions:
- request:
    method: get
    uri: https://data.cdc.gov/resource/biid-68vb.json?$where=title%20like%20%27%25Anthrax%25%27
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Jan 2023 17:50:36 GMT
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Etag:
      - '"YnJhdm8uNTAwNl8zXzQwOFhSMXlweWRmNmo0MzlENmttZHhUNVkzc0R0dw---gzijbIaeCnedfG74svPX_kjBL_QVGh--gzip--gzip"'
      X-Soda2-Fields:
      - '["record_number","reference_type","author","year","title","secondary_author","secondary_title","publisher","volume","number_of_volumes","number","pages","section","tertiary_author","tertiary_title","edition","date","type_of_work","subsidiary_author","short_title","alternate_title","isbn_issn","original_publication","reprint_edition","reviewed_item","custom_1","custom_2","custom_3","custom_4","custom_5","custom_6","custom_7","custom_8","accession_number","call_number","label","keywords","abstract","notes","research_notes","url","author_address","figure","caption","access_date","translated_author","translated_title","name_of_database","database_provider","language","publisher_location","doi"]'
      X-Soda2-Types:
      - '["number","text","text","number","text","text","text","text","number","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","number","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text"]'
      X-Soda2-Data-Out-Of-Date:
      - 'false'
      X-Soda2-Truth-Last-Modified:
      - Wed, 21 Dec 2022 19:51:38 GMT
      X-Soda2-Secondary-Last-Modified:
      - Wed, 21 Dec 2022 19:51:38 GMT
      Last-Modified:
      - Wed, 21 Dec 2022 19:51:38 GMT
      Vary:
      - Accept-Encoding
      Age:
      - '0'
      X-Socrata-Region:
      - aws-us-east-1-fedramp-prod
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      X-Socrata-Requestid:
      - 827587542066809d84476b306db24ea6
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        W3sicmVjb3JkX251bWJlciI6Ijg2NTEiLCJyZWZlcmVuY2VfdHlwZSI6IkdlbmVyaWMiLCJhdXRob3IiOiJLb2x0b24sIEMuIEIuIE0uLCBDLiBLLjtTdG9kZGFyZCwgUi4gQS47Q29zc2Fib29tLCBDLjtTYWx6ZXIsIEouIFMuO0tvemVsLCBULiBSLjtHYXRlcy1Ib2xsaW5nc3dvcnRoLCBNLiBBLjtDbGV2ZWxhbmQsIEMuIEEuO1Rob21wc29uLCBBLiBULjtEYWx0b24sIE0uIEYuO1lhYnNsZXksIE0uIEouO0hvZmZtYXN0ZXIsIEEuIFIuLCIsInllYXIiOiIyMDE5IiwidGl0bGUiOiJEZXRlY3Rpb24gb2YgQmFjaWxsdXMgYW50aHJhY2lzIGluIGFuaW1hbCB0aXNzdWVzIHVzaW5nIEluQmlvcyBBY3RpdmUgQW50aHJheCBEZXRlY3QgUmFwaWQgVGVzdCBsYXRlcmFsIGZsb3cgaW1tdW5vYXNzYXkiLCJzZWNvbmRhcnlfdGl0bGUiOiJMZXR0IEFwcGwgTWljcm9iaW9sIiwiZWRpdGlvbiI6IjIvMTkvMjAxOSIsImRhdGUiOiIxOC0wMiIsInNob3J0X3RpdGxlIjoiRGV0ZWN0aW9uIG9mIEJhY2lsbHVzIGFudGhyYWNpcyBpbiBhbmltYWwgdGlzc3VlcyB1c2luZyBJbkJpb3MgQWN0aXZlIEFudGhyYXggRGV0ZWN0IFJhcGlkIFRlc3QgbGF0ZXJhbCBmbG93IGltbXVub2Fzc2F5IiwiYWx0ZXJuYXRlX3RpdGxlIjoiTGV0dGVycyBpbiBhcHBsaWVkIG1pY3JvYmlvbG9neSIsImlzYm5faXNzbiI6IjAyNjYtODI1NCIsImN1c3RvbV8xIjoiQ0RDIEF1dGhvcmVkIFB1YmxpY2F0aW9ucyIsImN1c3RvbV8yIjoiTGFib3JhdG9yeSBTY2llbmNlcyIsImN1c3RvbV84IjoiMTE6MTAiLCJhY2Nlc3Npb25fbnVtYmVyIjoiMzA3NzYxNDMiLCJrZXl3b3JkcyI6IkJhY2lsbHVzIGFudGhyYWNpczphbmltYWwgdGlzc3VlczphbnRocmF4OmNhcHN1bGFyIGFudGlnZW46bGF0ZXJhbCBmbG93IGltbXVub2Fzc2F5OnBvbHlnbHV0YW1pYyBhY2lkIiwiYWJzdHJhY3QiOiJUaGUgQWN0aXZlIEFudGhyYXggRGV0ZWN0IChBQUQpIFJhcGlkIFRlc3QgbGF0ZXJhbCBmbG93IGltbXVub2Fzc2F5IGlzIGEgcG9pbnQtb2YtY2FyZSBhc3NheSB0aGF0IHdhcyB1bmRlciBpbnZlc3RpZ2F0aW9uYWwgdXNlIGZvciBkZXRlY3RpbmcgQmFjaWxsdXMgYW50aHJhY2lzIGNhcHN1bGFyIHBvbHlwZXB0aWRlIChwb2x5Z2x1dGFtaWMgYWNpZCkgaW4gaHVtYW4gYmxvb2QsIHNlcnVtLCBhbmQgcGxhc21hLiBTbWFsbCBzYW1wbGUgdm9sdW1lcywgcmFwaWQgcmVzdWx0cywgYW5kIG5vIHJlZnJpZ2VyYXRpb24gcmVxdWlyZWQgYWxsb3cgZm9yIGVhc3kgdXNlIGluIGVpdGhlciB0aGUgZmllbGQgb3IgbGFib3JhdG9yeS4gQWx0aG91Z2ggdGhlIHRlc3Qgd2FzIGRldmVsb3BlZCBmb3IgdXNlIGluIHN1c3BlY3QgY2FzZXMgb2YgaHVtYW4gaW5oYWxhdGlvbiBhbnRocmF4LCBpdHMgZmVhdHVyZXMgYWxzbyBtYWtlIGl0IGEgcG90ZW50aWFsbHkgcG93ZXJmdWwgdG9vbCBmb3IgdGVzdGluZyBzdXNwZWN0IGFuaW1hbCBjYXNlcy4gV2UgdGVzdGVkIGFuaW1hbCB0aXNzdWUgc2FtcGxlcyB0aGF0IHdlcmUgY29uZmlybWVkIG9yIHJ1bGVkIG91dCBmb3IgQi4gYW50aHJhY2lzLiBUaGUgQUFEIFJhcGlkIFRlc3RzIHdlcmUgYWxzbyBkZXBsb3llZCBpbiB0aGUgZmllbGQsIHRlc3RpbmcgYW5pbWFsIGNhcmNhc3NlcyBkdXJpbmcgYW4gYW50aHJheCBvdXRicmVhayBpbiBoaXBwb3BvdGFtaSAoSGlwcG9wb3RhbXVzIGFtcGhpYml1cykgYW5kIENhcGUgYnVmZmFsbyAoU3luY2VydXMgY2FmZmVyKSBpbiBOYW1pYmlhLiBFdmFsdWF0aW9uIG9mIGFsbCBzYW1wbGVzIHNob3dlZCBhIHNwZWNpZmljaXR5IG9mIDgyJSBhbmQgc2Vuc2l0aXZpdHkgb2YgOTglLiBIb3dldmVyLCB3aGVuIHRoZSBhc3NheSB3YXMgdXNlZCBvbiBzcGVjaW1lbnMgZnJvbSBvbmx5IGZyZXNoIGNhcmNhc3NlcyAoZGVhZCBmb3IgbGVzcyB0aGFuIDI0IGhvdXJzKSwgdGhlIHNwZWNpZmljaXR5IGluY3JlYXNlZCB0byA5NiUuIFRoZSBBQUQgUmFwaWQgVGVzdCBpcyBhIHJhcGlkIGFuZCBzaW1wbGUgc2NyZWVuaW5nIGFzc2F5LCBidXQgY29uZmlybWF0b3J5IHRlc3RpbmcgbmVlZHMgdG8gYmUgZG9uZSwgZXNwZWNpYWxseSB3aGVuIHRoZSBhZ2Ugb2YgdGhlIHNhbXBsZSAoZGF5cyBhbmltYWwgaGFzIGJlZW4gZGVjZWFzZWQpIGlzIHVua25vd24uIFRoaXMgYXJ0aWNsZSBpcyBwcm90ZWN0ZWQgYnkgY29weXJpZ2h0LiBBbGwgcmlnaHRzIHJlc2VydmVkLiIsIm5vdGVzIjoiMTQ3Mi03NjV4OktvbHRvbiwgQ2FyaSBCOk1hcnN0b24sIENodW5nIEs6U3RvZGRhcmQsIFJvYnluIEE6Q29zc2Fib29tLCBDYWl0bGluOlNhbHplciwgSm9oYW5uYSBTOktvemVsLCBUaG9tYXMgUjpHYXRlcy1Ib2xsaW5nc3dvcnRoLCBNYXJjZWxsZW5lIEE6Q2xldmVsYW5kLCBDaHJpc3RvcGhlciBBOlRob21wc29uLCBBbGVjIFQ6RGFsdG9uLCBNYXJ0aGEgRjpZYWJzbGV5LCBNaWNoYWVsIEo6SG9mZm1hc3RlciwgQWxleCBSOkpvdXJuYWwgQXJ0aWNsZTpFbmdsYW5kOkxldHQgQXBwbCBNaWNyb2Jpb2wuIDIwMTkgRmViIDE4LiBkb2k6IDEwLjExMTEvbGFtLjEzMTM0LiIsInVybCI6Imh0dHBzOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcHVibWVkLzMwNzc2MTQzIiwiYXV0aG9yX2FkZHJlc3MiOiJDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sIEF0bGFudGEsIEdlb3JnaWEsIDMwMzMzLjpVbml2ZXJzaXR5IG9mIE5ldmFkYSwgUmVubywgTmV2YWRhLCA4OTU1Ny46V2FybmVsbCBTY2hvb2wgb2YgRm9yZXN0cnkgYW5kIE5hdHVyYWwgUmVzb3VyY2VzLCBVbml2ZXJzaXR5IG9mIEdlb3JnaWEsIEF0aGVucywgR0EsIDMwNjAyMS46U291dGhlYXN0ZXJuIENvb3BlcmF0aXZlIFdpbGRsaWZlIERpc2Vhc2UgU3R1ZHksIERlcGFydG1lbnQgb2YgUG9wdWxhdGlvbiBIZWFsdGgsIENvbGxlZ2Ugb2YgVmV0ZXJpbmFyeSBNZWRpY2luZSwgVW5pdmVyc2l0eSBvZiBHZW9yZ2lhLCBBdGhlbnMsIEdBLCAzMDYwMi46RGVwYXJ0bWVudCBvZiBQYXRob2xvZ3ksIENvbGxlZ2Ugb2YgVmV0ZXJpbmFyeSBNZWRpY2luZSwgVW5pdmVyc2l0eSBvZiBHZW9yZ2lhLCBBdGhlbnMsIEdBLCAzMDYwMi4iLCJkYXRhYmFzZV9wcm92aWRlciI6Ik5MTSIsImxhbmd1YWdlIjoiZW5nIiwiZG9pIjoiMTAuMTExMS9sYW0uMTMxMzQifQoseyJyZWNvcmRfbnVtYmVyIjoiMTA3ODgiLCJyZWZlcmVuY2VfdHlwZSI6IkpvdXJuYWwgQXJ0aWNsZSIsImF1dGhvciI6Ik5kZXJpdHUsIEwuIE0uO0dhY2hvaGksIEouO090aWVubywgRi47TW9nb2EsIEUuIEcuO011dHVyaSwgTS47TXdhdG9uZG8sIEEuO09zb3JvLCBFLiBNLjtOZ2VyZSwgSS47TXVueXVhLCBQLiBNLjtPeWFzLCBILjtOamFnaSwgTy47TG9mZ3JlbiwgRS47TWFyc2gsIFQuO1dpZGRvd3NvbiwgTS4gQS47QmV0dCwgQi47TmplbmdhLCBNLiBLLiIsInllYXIiOiIyMDIxIiwidGl0bGUiOiJTcGF0aWFsIGNsdXN0ZXJpbmcgb2YgbGl2ZXN0b2NrIEFudGhyYXggZXZlbnRzIGFzc29jaWF0ZWQgd2l0aCBhZ3JvLWVjb2xvZ2ljYWwgem9uZXMgaW4gS2VueWEsIDE5NTctMjAxNyIsInNlY29uZGFyeV90aXRsZSI6IkJNQyBJbmZlY3QgRGlzIiwidm9sdW1lIjoiMjEiLCJudW1iZXIiOiIxIiwicGFnZXMiOiIxOTEiLCJlZGl0aW9uIjoiMi8yMC8yMDIxIiwiZGF0ZSI6IjE4LTAyIiwic2hvcnRfdGl0bGUiOiJTcGF0aWFsIGNsdXN0ZXJpbmcgb2YgbGl2ZXN0b2NrIEFudGhyYXggZXZlbnRzIGFzc29jaWF0ZWQgd2l0aCBhZ3JvLWVjb2xvZ2ljYWwgem9uZXMgaW4gS2VueWEsIDE5NTctMjAxNyIsImlzYm5faXNzbiI6IjE0NzEtMjMzNCIsImN1c3RvbV8xIjoiQ0RDIEF1dGhvcmVkIFB1YmxpY2F0aW9ucyIsImN1c3RvbV8yIjoiRGlzZWFzZSBSZXNlcnZvaXJzIGFuZCBWZWN0b3JzIiwiY3VzdG9tXzgiOiIxMzowOCIsImFjY2Vzc2lvbl9udW1iZXIiOiIzMzYwMjE2MCIsImtleXdvcmRzIjoiQWdyby1lY29sb2dpY2FsIHpvbmVzOkFudGhyYXg6Q2x1c3RlcmluZzpLZW55YTpMaXZlc3RvY2s6ZWRpdG9yaWFsIGJvYXJkIGZvciB0aGUgQk1DIEluZmVjdGlvdXMgRGlzZWFzZXMgam91cm5hbC4iLCJhYnN0cmFjdCI6IkJBQ0tHUk9VTkQ6IERldmVsb3BpbmcgZGlzZWFzZSByaXNrIG1hcHMgZm9yIHByaW9yaXR5IGVuZGVtaWMgYW5kIGVwaXNvZGljIGRpc2Vhc2VzIGlzIGJlY29taW5nIGluY3JlYXNpbmdseSBpbXBvcnRhbnQgZm9yIG1vcmUgZWZmZWN0aXZlIGRpc2Vhc2UgbWFuYWdlbWVudCwgcGFydGljdWxhcmx5IGluIHJlc291cmNlIGxpbWl0ZWQgY291bnRyaWVzLiBGb3IgZW5kZW1pYyBhbmQgZWFzaWx5IGRpYWdub3NlZCBkaXNlYXNlcyBzdWNoIGFzIGFudGhyYXgsIHVzaW5nIGhpc3RvcmljYWwgZGF0YSB0byBpZGVudGlmeSBob3RzcG90cyBhbmQgc3RhcnQgdG8gZGVmaW5lIGVjb2xvZ2ljYWwgcmlzayBmYWN0b3JzIG9mIGl0cyBvY2N1cnJlbmNlIGlzIGEgcGxhdXNpYmxlIGFwcHJvYWNoLiBVc2luZyA2NjYgbGl2ZXN0b2NrIGFudGhyYXggZXZlbnRzIHJlcG9ydGVkIGluIEtlbnlhIG92ZXIgNjA/eWVhcnMgKDE5NTctMjAxNyksIHdlIGRldGVybWluZWQgdGhlIHRlbXBvcmFsIGFuZCBzcGF0aWFsIHBhdHRlcm5zIG9mIHRoZSBkaXNlYXNlIGFzIGEgc3RlcCB0b3dhcmRzIGlkZW50aWZ5aW5nIGFuZCBjaGFyYWN0ZXJpemluZyBhbnRocmF4IGhvdHNwb3RzIGluIHRoZSByZWdpb24uIE1FVEhPRFM6IERhdGEgd2VyZSBpbml0aWFsbHkgYWdncmVnYXRlZCBieSBhZG1pbmlzdHJhdGl2ZSB1bml0IGFuZCBsYXRlciBhbmFseXplZCBieSBhZ3JvLWVjb2xvZ2ljYWwgem9uZXMgKEFFWikgdG8gcmV2ZWFsIGFudGhyYXggc3BhdGlvLXRlbXBvcmFsIHRyZW5kcyBhbmQgcGF0dGVybnMuIFZhcmlhdGlvbnMgaW4gdGhlIG9jY3VycmVuY2Ugb2YgYW50aHJheCBldmVudHMgd2VyZSBlc3RpbWF0ZWQgYnkgZml0dGluZyBQb2lzc29uIGdlbmVyYWxpemVkIGxpbmVhciBtaXhlZC1lZmZlY3RzIG1vZGVscyB0byB0aGUgZGF0YSB3aXRoIEFFWnMgYW5kIGNhbGVuZGFyIG1vbnRocyBhcyBmaXhlZCBlZmZlY3RzIGFuZCBzdWItY291bnRpZXMgYXMgcmFuZG9tIGVmZmVjdHMuIFJFU1VMVFM6IFRoZSBjb3VudHJ5IHJlcG9ydGVkIGFwcHJveGltYXRlbHkgMTAgYW50aHJheCBldmVudHMgYW5udWFsbHksIHdpdGggdGhlIG51bWJlciBpbmNyZWFzaW5nIHRvIGFzIG1hbnkgYXMgNTAgYW5udWFsbHkgYnkgdGhlIHllYXIgMjAwNS4gU3BhdGlhbCBjbGFzc2lmaWNhdGlvbiBvZiB0aGUgZXZlbnRzIGluIGVpZ2h0IGNvdW50aWVzIHRoYXQgcmVwb3J0ZWQgdGhlIGhpZ2hlc3QgbnVtYmVycyByZXZlYWxlZCBzcGF0aWFsIGNsdXN0ZXJpbmcgaW4gY2VydGFpbiBhZG1pbmlzdHJhdGl2ZSBzdWItY291bnRpZXMsIHdpdGggMTIlIG9mIHRoZSBzdWItY291bnRpZXMgcmVzcG9uc2libGUgZm9yIG92ZXIgMzAlIG9mIGFudGhyYXggZXZlbnRzLCB3aGVyZWFzIDM2JSBkaWQgbm90IHJlcG9ydCBhbnkgYW50aHJheCBkaXNlYXNlIG92ZXIgdGhlIDYwLXllYXIgcGVyaW9kLiBXaGVuIHNlZ3JlZ2F0ZWQgYnkgQUVacywgdGhlcmUgd2FzIHNpZ25pZmljYW50bHkgZ3JlYXRlciByaXNrIG9mIGFudGhyYXggZGlzZWFzZSBvY2N1cnJpbmcgaW4gYWdyby1hbHBpbmUsIGhpZ2gsIGFuZCBtZWRpdW0gcG90ZW50aWFsIEFFWnMgd2hlbiBjb21wYXJlZCB0byB0aGUgYWdyaWN1bHR1cmFsbHkgbG93IHBvdGVudGlhbCBhcmlkIGFuZCBzZW1pLWFyaWQgQUVacyBvZiB0aGUgY291bnRyeSAocD88PzAuMDUpLiBJbnRlcmVzdGluZ2x5LCBjYXR0bGUgd2VyZT8+PzEwIHRpbWVzIG1vcmUgbGlrZWx5IHRvIGJlIGluZmVjdGVkIGJ5IEIuIGFudGhyYWNpcyB0aGFuIHNoZWVwLCBnb2F0cywgb3IgY2FtZWxzLiBUaGVyZSB3YXMgbG93ZXIgcmlzayBvZiBhbnRocmF4IGV2ZW50cyBpbiBBdWd1c3QgKFA/PT8wLjAzNCkgYW5kIERlY2VtYmVyIChQPz0/MC4wNjEpLCBtb250aHMgdGhhdCBmb2xsb3cgbG9uZyBhbmQgc2hvcnQgcmFpbiBwZXJpb2RzLCByZXNwZWN0aXZlbHkuIENPTkNMVVNJT046IFRha2VuIHRvZ2V0aGVyLCB0aGVzZSBmaW5kaW5ncyBzdWdnZXN0IGV4aXN0ZW5jZSBvZiBjZXJ0YWluIGdlb2dyYXBoaWMsIGVjb2xvZ2ljYWwsIGFuZCBkZW1vZ3JhcGhpYyByaXNrIGZhY3RvcnMgdGhhdCBwcm9tb3RlIEIuIGFudGhyYWNpcyBwZXJzaXN0ZW5jZSBhbmQgdHJhc21pc3Npb24gaW4gdGhlIGRpc2Vhc2UgaG90c3BvdHMuIiwibm90ZXMiOiIxNDcxLTIzMzQ6TmRlcml0dSwgTGVvbmFyZCBNOkdhY2hvaGksIEpvaG46T3JjaWQ6IDAwMDAtMDAwMS05ODU0LTc0OTA6T3RpZW5vLCBGcmVkZXJpY2s6TW9nb2EsIEVkZHkgRzpNdXR1cmksIE1hdGhldzpNd2F0b25kbywgQXRobWFuOk9zb3JvLCBFcmljIE06TmdlcmUsIElzYWFjOk11bnl1YSwgUGVuaW5haCBNOk95YXMsIEhhcnJ5Ok5qYWdpLCBPYmFkaWFoOkxvZmdyZW4sIEVyaWM6TWFyc2gsIFRob21hczpXaWRkb3dzb24sIE1hcmMtQWxhaW46QmV0dCwgQmVybmFyZDpOamVuZ2EsIE0gS2FyaXVraTpIRFRSQTExNzEwMDQzLi9EZWZlbnNlIFRocmVhdCBSZWR1Y3Rpb24gQWdlbmN5LzpKb3VybmFsIEFydGljbGU6Qk1DIEluZmVjdCBEaXMuIDIwMjEgRmViIDE4OzIxKDEpOjE5MS4gZG9pOiAxMC4xMTg2L3MxMjg3OS0wMjEtMDU4NzEtOS4iLCJ1cmwiOiJodHRwczovL3B1Ym1lZC5uY2JpLm5sbS5uaWguZ292LzMzNjAyMTYwIiwiYXV0aG9yX2FkZHJlc3MiOiJQYXVsIEcgQWxsZW4gU2Nob29sIGZvciBHbG9iYWwgSGVhbHRoLCBXYXNoaW5ndG9uIFN0YXRlIFVuaXZlcnNpdHksIFB1bGxtYW4sIFdhc2hpbmd0b24sIFVTQS46V2FzaGluZ3RvbiBTdGF0ZSBVbml2ZXJzaXR5IEdsb2JhbCBgSGVhbHRoIFByb2dyYW0tS2VueWEsIFdTVSwgTmFpcm9iaSwgS2VueWEuOldhc2hpbmd0b24gU3RhdGUgVW5pdmVyc2l0eSBHbG9iYWwgYEhlYWx0aCBQcm9ncmFtLUtlbnlhLCBXU1UsIE5haXJvYmksIEtlbnlhLiBqb2huLmdhY2hvaGlAd3N1LmVkdS46U2Nob29sIG9mIFB1YmxpYyBIZWFsdGgsIEpvbW8gS2VueWF0dGEgVW5pdmVyc2l0eSBvZiBBZ3JpY3VsdHVyZSBhbmQgVGVjaG5vbG9neSwgTmFpcm9iaSwgS2VueWEuIGpvaG4uZ2FjaG9oaUB3c3UuZWR1LjpJbnRlcm5hdGlvbmFsIExpdmVzdG9jayBSZXNlYXJjaCBJbnN0aXR1dGUsIE5haXJvYmksIEtlbnlhLjpVbml2ZXJzaXR5IG9mIE5haXJvYmksIENvbGxlZ2Ugb2YgQWdyaWN1bHR1cmUgYW5kIFZldGVyaW5hcnkgU2NpZW5jZXMsIE5haXJvYmksIEtlbnlhLCBVbml2ZXJzaXR5IG9mIE5haXJvYmksIE5haXJvYmksIEtlbnlhLjpLZW55YSBab29ub3RpYyBEaXNlYXNlIFVuaXQsIE5haXJvYmksIEtlbnlhLjpEaXZpc2lvbiBvZiBHbG9iYWwgSGVhbHRoIFByb3RlY3Rpb24sIFVuaXRlZCBTdGF0ZXMgQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLCBOYWlyb2JpLCBLZW55YS46S2VueWEgTWluaXN0cnkgb2YgQWdyaWN1bHR1cmUsIExpdmVzdG9jayBhbmQgRmlzaGVyaWVzLCBOYWlyb2JpLCBLZW55YS46SW5zdGl0dXRlIG9mIFRyb3BpY2FsIE1lZGljaW5lLCBBbnR3ZXJwLCBCZWxnaXVtLiIsImxhbmd1YWdlIjoiZW5nIiwiZG9pIjoiMTAuMTE4Ni9zMTI4NzktMDIxLTA1ODcxLTkifQoseyJyZWNvcmRfbnVtYmVyIjoiMTE3NDAiLCJyZWZlcmVuY2VfdHlwZSI6IkdlbmVyaWMiLCJhdXRob3IiOiJDb3NzYWJvb20sIEMuIE0uIEsuLCBTLjtIYXVmaWt1LCBCLjtLYXRqaXVhbmpvLCBQLjtLYW5ueWluZ2EsIEEuO01iYWksIEsuO1NodXJvLCBULjtIYXVzaWt1LCBKLjtMaWthbmRvLCBBLjtTaGlrZXNobywgUi47TnlhcmtvLCBLLjtNaWxsZXIsIEwuIEEuO0Fnb2xvcnksIFMuO1ZpZWlyYSwgQS4gUi47U2FsemVyLCBKLiBTLjtCb3dlciwgVy4gQS47Q2FtcGJlbGwsIEwuO0tvbHRvbiwgQy4gQi47TWFyc3RvbiwgQy47R2FyeSwgSi47Qm9sbHdlZywgQi4gQy47WmFraSwgUy4gUi47SG9mZm1hc3RlciwgQS47V2Fsa2UsIEguIiwieWVhciI6IjIwMTkiLCJ0aXRsZSI6IkFudGhyYXggZXBpem9vdGljIGluIHdpbGRsaWZlLCBCd2Fid2F0YSBOYXRpb25hbCBQYXJrLCBOYW1pYmlhLCAyMDE3Iiwic2Vjb25kYXJ5X3RpdGxlIjoiRW1lcmcgSW5mZWN0IERpcyIsInB1Ymxpc2hlciI6IjMxMDAyMDcyIiwidm9sdW1lIjoiMjUiLCJudW1iZXIiOiI1IiwicGFnZXMiOiI5NDctOTUwIiwiZWRpdGlvbiI6IjQvMjAvMjAxOSIsImRhdGUiOiJNYXkiLCJzaG9ydF90aXRsZSI6IkFudGhyYXggZXBpem9vdGljIGluIHdpbGRsaWZlLCBCd2Fid2F0YSBOYXRpb25hbCBQYXJrLCBOYW1pYmlhLCAyMDE3IiwiYWx0ZXJuYXRlX3RpdGxlIjoiRW1lcmdpbmcgaW5mZWN0aW91cyBkaXNlYXNlcyIsImlzYm5faXNzbiI6IjEwODAtNjA0MCIsImN1c3RvbV8xIjoiQ0RDIEF1dGhvcmVkIFB1YmxpY2F0aW9ucyIsImN1c3RvbV8yIjoiWm9vbm90aWMgYW5kIFZlY3RvcmJvcm5lIERpc2Vhc2VzIiwiY3VzdG9tXzgiOiIxMToyNCIsImFjY2Vzc2lvbl9udW1iZXIiOiIzMTAwMjA3MiIsImtleXdvcmRzIjoiQWZyaWNhOkJhY2lsbHVzIGFudGhyYWNpczpOYW1pYmlhOmFudGhyYXg6YmFjdGVyaWE6Y29udHJvbDplcGl6b290aWM6d2lsZGxpZmU6em9vbm9zZXMiLCJhYnN0cmFjdCI6IkluIGxhdGUgU2VwdGVtYmVyIDIwMTcsIEJ3YWJ3YXRhIE5hdGlvbmFsIFBhcmsgaW4gTmFtaWJpYSBleHBlcmllbmNlZCBhIHN1ZGRlbiBkaWUtb2ZmIG9mIGhpcHBvcG90YW11c2VzIGFuZCBDYXBlIGJ1ZmZhbG8uIEEgbXVsdGlvcmdhbml6YXRpb25hbCByZXNwb25zZSB3YXMgaW5pdGlhdGVkLCBpbnZvbHZpbmcgc2V2ZXJhbCBtaW5pc3RyaWVzIHdpdGhpbiBOYW1pYmlhIGFuZCB0aGUgVVMgQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLiBSYXBpZCBpbnRlcnZlbnRpb25zIHJlc3VsdGVkIGluIHplcm8gaHVtYW4gb3IgbGl2ZXN0b2NrIGNhc2VzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGVwaXpvb3RpYy4iLCJub3RlcyI6IjEwODAtNjA1OTpDb3NzYWJvb20sIENhaXRsaW4gTTpLaGFpc2ViLCBTaWVnZnJpZWQ6SGF1ZmlrdSwgQmVybmFyZDpLYXRqaXVhbmpvLCBQdXVtdWU6S2FubnlpbmdhLCBBcG9sbGluYXJpczpNYmFpLCBLYWlzZXI6U2h1cm8sIFRob21wc29uOkhhdXNpa3UsIEpvbmFzOkxpa2FuZG8sIEFubmV0eTpTaGlrZXNobywgUmViZWtrYTpOeWFya28sIEtvZmk6TWlsbGVyLCBMZWlnaCBBbm46QWdvbG9yeSwgU2ltb246VmllaXJhLCBBbnRvbmlvIFI6U2FsemVyLCBKb2hhbm5hIFM6Qm93ZXIsIFdpbGxpYW0gQTpDYW1wYmVsbCwgTGluZHNheTpLb2x0b24sIENhcmkgQjpNYXJzdG9uLCBDaHVuZzpHYXJ5LCBKb3k6Qm9sbHdlZywgQnJpZ2lkIEM6WmFraSwgU2hlcmlmIFI6SG9mZm1hc3RlciwgQWxleDpXYWxrZSwgSGVucnk6Sm91cm5hbCBBcnRpY2xlOlVuaXRlZCBTdGF0ZXM6RW1lcmcgSW5mZWN0IERpcy4gMjAxOSBNYXk7MjUoNSk6OTQ3LTk1MC4gZG9pOiAxMC4zMjAxL2VpZDI1MDUuMTgwODY3LiIsInVybCI6Imh0dHBzOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcHVibWVkLzMxMDAyMDcyIiwiZGF0YWJhc2VfcHJvdmlkZXIiOiJOTE0iLCJsYW5ndWFnZSI6ImVuZyIsImRvaSI6IjEwLjMyMDEvZWlkMjUwNS4xODA4NjcifQoseyJyZWNvcmRfbnVtYmVyIjoiMTI4NTMiLCJyZWZlcmVuY2VfdHlwZSI6IkpvdXJuYWwgQXJ0aWNsZSIsImF1dGhvciI6IkJsYWNrYnVybiwgSi4gSy47S2VudSwgRS47QXNpZWR1LUJla29lLCBGLjtTYXJrb2RpZSwgQi47S3JhY2FsaWssIEkuIFQuO0Jvd2VyLCBXLiBBLjtTdG9kZGFyZCwgUi4gQS47VHJheGxlciwgUi4gTS4iLCJ5ZWFyIjoiMjAyMSIsInRpdGxlIjoiSGlnaCBDYXNlLUZhdGFsaXR5IFJhdGUgZm9yIEh1bWFuIEFudGhyYXgsIE5vcnRoZXJuIEdoYW5hLCAyMDA1LTIwMTYiLCJzZWNvbmRhcnlfdGl0bGUiOiJFbWVyZyBJbmZlY3QgRGlzIiwidm9sdW1lIjoiMjciLCJudW1iZXIiOiI0IiwicGFnZXMiOiIxMjE2LTEyMTkiLCJlZGl0aW9uIjoiMy8yNC8yMDIxIiwiZGF0ZSI6IkFwciIsInNob3J0X3RpdGxlIjoiSGlnaCBDYXNlLUZhdGFsaXR5IFJhdGUgZm9yIEh1bWFuIEFudGhyYXgsIE5vcnRoZXJuIEdoYW5hLCAyMDA1LTIwMTYiLCJpc2JuX2lzc24iOiIxMDgwLTYwNDAgKFByaW50KToxMDgwLTYwNDAiLCJjdXN0b21fMSI6IkNEQyBBdXRob3JlZCBQdWJsaWNhdGlvbnMiLCJjdXN0b21fMiI6IkNocm9uaWMgRGlzZWFzZXMgYW5kIENvbmRpdGlvbnMiLCJjdXN0b21fOCI6IjEzOjE0IiwiYWNjZXNzaW9uX251bWJlciI6IjMzNzU0OTkzIiwia2V5d29yZHMiOiJBZnJpY2E6QmFjaWxsdXMgYW50aHJhY2lzOkdoYW5hOmJhY3RlcmlhOmNhc2UtZmF0YWxpdHkgcmF0ZTpjdXRhbmVvdXMgYW50aHJheDplbnRlcmljIGluZmVjdGlvbnM6Zm9vZCBzYWZldHk6Z2FzdHJvaW50ZXN0aW5hbCBhbnRocmF4Omh1bWFuIGFudGhyYXg6bGl2ZXN0b2NrOmxpdmVzdG9jayB2YWNjaW5hdGlvbjptb3J0YWxpdHk6c3VydmVpbGxhbmNlIiwiYWJzdHJhY3QiOiJUaGUgaHVtYW4gY3V0YW5lb3VzIGFudGhyYXggY2FzZS1mYXRhbGl0eSByYXRlIGlzID8xJSB3aGVuIHRyZWF0ZWQsIDUlLTIwJSB3aGVuIHVudHJlYXRlZC4gV2UgcmVwb3J0IGhpZ2ggY2FzZS1mYXRhbGl0eSByYXRlcyAobWVkaWFuwqAzNS4wJTsgOTUlIENJIDIxLjElLTY2LjclKSBkdXJpbmcgMjAwNS0yMDE2IGxpbmtlZCB0byBsaXZlc3RvY2sgaGFuZGxpbmcgaW4gbm9ydGhlcm4gR2hhbmEsIHdoZXJlIHZldGVyaW5hcnkgcmVzb3VyY2VzIGFyZSBsaW1pdGVkLiBMaXZlc3RvY2sgdmFjY2luYXRpb24gYW5kIGFjY2VzcyB0byBodW1hbiB0cmVhdG1lbnQgc2hvdWxkIGJlIGV2YWx1YXRlZC4iLCJub3RlcyI6IjEwODAtNjA1OTpCbGFja2J1cm4sIEphc29uIEs6S2VudSwgRXJuZXN0OkFzaWVkdS1CZWtvZSwgRnJhbmtsaW46U2Fya29kaWUsIEJhZHU6S3JhY2FsaWssIElhbiBUOkJvd2VyLCBXaWxsaWFtIEE6U3RvZGRhcmQsIFJvYnluIEE6VHJheGxlciwgUml0YSBNOkpvdXJuYWwgQXJ0aWNsZTpFbWVyZyBJbmZlY3QgRGlzLiAyMDIxIEFwcjsyNyg0KToxMjE2LTEyMTkuIGRvaTogMTAuMzIwMS9laWQyNzA0LjIwNDQ5Ni4iLCJ1cmwiOiJodHRwczovL3B1Ym1lZC5uY2JpLm5sbS5uaWguZ292LzMzNzU0OTkzIiwibGFuZ3VhZ2UiOiJlbmciLCJkb2kiOiIxMC4zMjAxL2VpZDI3MDQuMjA0NDk2In0KLHsicmVjb3JkX251bWJlciI6IjE2ODg4IiwicmVmZXJlbmNlX3R5cGUiOiJHZW5lcmljIiwiYXV0aG9yIjoiQmFyciwgSi4gUi4gQi4sIEEuIEUuLCAgUXVpbm4sIEMuIFAuLCIsInllYXIiOiIyMDEwIiwidGl0bGUiOiJBbnRocmF4OiBtb2Rlcm4gZXhwb3N1cmUgc2NpZW5jZSBjb21iYXRzIGEgZGVhZGx5LCBhbmNpZW50IGRpc2Vhc2UiLCJzZWNvbmRhcnlfdGl0bGUiOiJKIEV4cG8gU2NpIEVudmlyb24gRXBpZGVtaW9sIiwidm9sdW1lIjoiMjAiLCJudW1iZXIiOiI3IiwicGFnZXMiOiI1NzMtNTc0IiwiZWRpdGlvbiI6IjEwLzIxLzIwMTAiLCJkYXRlIjoiTm92Iiwic2hvcnRfdGl0bGUiOiJBbnRocmF4OiBtb2Rlcm4gZXhwb3N1cmUgc2NpZW5jZSBjb21iYXRzIGEgZGVhZGx5LCBhbmNpZW50IGRpc2Vhc2UiLCJpc2JuX2lzc24iOiIxNTU5LTA2NFggKEVsZWN0cm9uaWMpOiAxNTU5LTA2MzEgKExpbmtpbmcpIiwiY3VzdG9tXzEiOiJDREMgQXV0aG9yZWQgUHVibGljYXRpb25zIiwiY3VzdG9tXzIiOiJab29ub3NlcyIsImN1c3RvbV84IjoiMjo0MyIsImFjY2Vzc2lvbl9udW1iZXIiOiIyMDk1OTgzMSIsImFic3RyYWN0IjoiV2Ugbm93IGhhdmUgdGhlIHRlY2hub2xvZ3kgdG8gZGV0ZWN0IGFuZCBxdWFudGlmeSBhbnRocmF4IHRveGluIGxldmVscy4gVGhpcyB0ZWNobm9sb2d5IGhhcyB0cmVtZW5kb3VzIHByb21pc2UgZm9yIGRpYWdub3NpcyBhdCB2ZXJ5IGVhcmx5IHN0YWdlcyBvZiBkaXNlYXNlIGFuZCBtb25pdG9yaW5nIHRoZSBlZmZpY2FjeSBvZiB0cmVhdG1lbnRzLCBpbmNsdWRpbmcgdGhvc2UgZm9yIGRpc2Vhc2UgYXJpc2luZyBmcm9tIGFudGhyYXgtcmVsYXRlZCB0ZXJyb3Jpc3QgZXZlbnRzLiIsIm5vdGVzIjoiQmFyciwgSm9obiBSOiBCb3llciwgQW5uZSBFOiBRdWlubiwgQ29ucmFkIFA6IFVuaXRlZCBTdGF0ZXM6IEpvdXJuYWwgb2YgZXhwb3N1cmUgc2NpZW5jZSAmIGVudmlyb25tZW50YWwgZXBpZGVtaW9sb2d5OiBKIEV4cG8gU2NpIEVudmlyb24gRXBpZGVtaW9sLiAyMDEwIE5vdjsyMCg3KTo1NzMtNC4iLCJ1cmwiOiJodHRwOi8vaW50cmFuZXQuY2RjLmdvdi9waGxpYy9kaWdpdGFscmVwb3NpdG9yeS9TY2llbmNlQ2xpcHMvdjJpc3M0M19BdXRob3JzX0JhcnIucGRmIiwiYXV0aG9yX2FkZHJlc3MiOiJVUyBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sIEF0bGFudGEsIEdlb3JnaWEsIFVTQS4iLCJkYXRhYmFzZV9wcm92aWRlciI6Ik5MTSIsImxhbmd1YWdlIjoiZW5nIiwiZG9pIjoiMTAuMTAzOC9qZXMuMjAxMC40OSJ9Cix7InJlY29yZF9udW1iZXIiOiIxNzU2OCIsInJlZmVyZW5jZV90eXBlIjoiSm91cm5hbCBBcnRpY2xlIiwiYXV0aG9yIjoiRGF3c29uLCBQLjtTY2hyb2R0LCBDLiBBLjtGZWxkbWFubiwgSy47VHJheGxlciwgUi4gTS47R2VlLCBKLiBFLjtLb2x0b24sIEMuIEIuO01hcnN0b24sIEMuIEsuO0d1bHZpaywgQy4gQS47QW50b25pbmksIEouIE0uO05lZ3LDs24sIE0uIEUuO01jcXVpc3RvbiwgSi4gUi47SGVuZHJpY2tzLCBLLjtXZWluZXIsIFouO0JhbHNhbW8sIEcuIEEuO1Nva29sLCBULjtCeWVycywgUC47VGF5bG9yLCBLLjtaYWhlZXIsIFMuO0xvbmcsIFMuO08nc3VsbGl2YW4sIEIuO0RlIFBlcmlvLCBNLiBBLjtIb2ZmbWFzdGVyLCBBLiBSLjtTYWx6ZXIsIEouIFMuO0Jvd2VyLCBXLiBBLiIsInllYXIiOiIyMDIxIiwidGl0bGUiOiJOb3RlcyBmcm9tIHRoZSBGaWVsZDogRmF0YWwgQW50aHJheCBQbmV1bW9uaWEgaW4gV2VsZGVycyBhbmQgT3RoZXIgTWV0YWx3b3JrZXJzIENhdXNlZCBieSBCYWNpbGx1cyBjZXJldXMgR3JvdXAgQmFjdGVyaWEgQ29udGFpbmluZyBBbnRocmF4IFRveGluIEdlbmVzIC0gVS5TLiBHdWxmIENvYXN0IFN0YXRlcywgMTk5NC0yMDIwIiwic2Vjb25kYXJ5X3RpdGxlIjoiTU1XUiBNb3JiIE1vcnRhbCBXa2x5IFJlcCIsInZvbHVtZSI6IjcwIiwibnVtYmVyIjoiNDEiLCJwYWdlcyI6IjE0NTMtMTQ1NCIsImVkaXRpb24iOiIxMC8xNS8yMDIxIiwiZGF0ZSI6IjE1LTEwIiwic2hvcnRfdGl0bGUiOiJOb3RlcyBmcm9tIHRoZSBGaWVsZDogRmF0YWwgQW50aHJheCBQbmV1bW9uaWEgaW4gV2VsZGVycyBhbmQgT3RoZXIgTWV0YWx3b3JrZXJzIENhdXNlZCBieSBCYWNpbGx1cyBjZXJldXMgR3JvdXAgQmFjdGVyaWEgQ29udGFpbmluZyBBbnRocmF4IFRveGluIEdlbmVzIC0gVS5TLiBHdWxmIENvYXN0IFN0YXRlcywgMTk5NC0yMDIwIiwiaXNibl9pc3NuIjoiMDE0OS0yMTk1IiwiY3VzdG9tXzEiOiJDREMgQXV0aG9yZWQgUHVibGljYXRpb25zIiwiY3VzdG9tXzIiOiJPY2N1cGF0aW9uYWwgU2FmZXR5IGFuZCBIZWFsdGgiLCJjdXN0b21fOCI6IjEzOjM5IiwiYWNjZXNzaW9uX251bWJlciI6IjM0NjQ4NDgyIiwibm90ZXMiOiIxNTQ1LTg2MXg6RGF3c29uLCBQYXRyaWNrOlNjaHJvZHQsIENhcm9saW5lIEE6RmVsZG1hbm4sIEthcmw6VHJheGxlciwgUml0YSBNOkdlZSwgSmF5IEU6S29sdG9uLCBDYXJpIEI6TWFyc3RvbiwgQ2h1bmcgSzpHdWx2aWssIENocmlzdG9waGVyIEE6QW50b25pbmksIEphbWVzIE06TmVncsOzbiwgTWFyw61hIEU6TWNRdWlzdG9uLCBKb2huIFI6SGVuZHJpY2tzLCBLYXRlOldlaW5lciwgWmFjaGFyeTpCYWxzYW1vLCBHYXJ5IEE6U29rb2wsIFRoZXJlc2E6QnllcnMsIFBhdWw6VGF5bG9yLCBLYXRocnluOlphaGVlciwgU2FhZDpMb25nLCBTdGVwaGVuOk8nU3VsbGl2YW4sIEJyaWFuYTpkZSBQZXJpbywgTWFyaWUgQTpIb2ZmbWFzdGVyLCBBbGV4IFI6U2FsemVyLCBKb2hhbm5hIFM6Qm93ZXIsIFdpbGxpYW0gQTpKb3VybmFsIEFydGljbGU6VW5pdGVkIFN0YXRlczpNTVdSIE1vcmIgTW9ydGFsIFdrbHkgUmVwLiAyMDIxIE9jdCAxNTs3MCg0MSk6MTQ1My0xNDU0LiBkb2k6IDEwLjE1NTg1L21td3IubW03MDQxYTQuIiwidXJsIjoiaHR0cHM6Ly9wdWJtZWQubmNiaS5ubG0ubmloLmdvdi8zNDY0ODQ4MiIsIm5hbWVfb2ZfZGF0YWJhc2UiOiJQdWJNZWQiLCJsYW5ndWFnZSI6ImVuZyIsImRvaSI6IjEwLjE1NTg1L21td3IubW03MDQxYTQifQoseyJyZWNvcmRfbnVtYmVyIjoiMTg0OTUiLCJyZWZlcmVuY2VfdHlwZSI6IkdlbmVyaWMiLCJhdXRob3IiOiJLb3VybmlrYWtpcywgQi4gTS4sIEsuIEYuLCAgTWNDbGVlcnksIFIuIEUuLCAgU2hhZG9teSwgUy4gVi4sICBSYW1vcywgRy4sIiwieWVhciI6IjIwMTEiLCJ0aXRsZSI6IkFudGhyYXggbGV0dGVycyBpbiBhbiBvcGVuIG9mZmljZSBlbnZpcm9ubWVudDogZWZmZWN0cyBvZiBzZWxlY3RlZCBDREMgcmVzcG9uc2UgZ3VpZGVsaW5lcyBvbiBwZXJzb25hbCBleHBvc3VyZSBhbmQgYnVpbGRpbmcgY29udGFtaW5hdGlvbiIsInNlY29uZGFyeV90aXRsZSI6IkogT2NjdXAgRW52aXJvbiBIeWciLCJ2b2x1bWUiOiI4IiwibnVtYmVyIjoiMiIsInBhZ2VzIjoiMTEzLTEyMiIsImVkaXRpb24iOiIxLzIyLzIwMTEiLCJkYXRlIjoiRmViIiwic2hvcnRfdGl0bGUiOiJBbnRocmF4IGxldHRlcnMgaW4gYW4gb3BlbiBvZmZpY2UgZW52aXJvbm1lbnQ6IGVmZmVjdHMgb2Ygc2VsZWN0ZWQgQ0RDIHJlc3BvbnNlIGd1aWRlbGluZXMgb24gcGVyc29uYWwgZXhwb3N1cmUgYW5kIGJ1aWxkaW5nIGNvbnRhbWluYXRpb24iLCJpc2JuX2lzc24iOiIxNTQ1LTk2MzIgKEVsZWN0cm9uaWMpOiAxNTQ1LTk2MjQgKExpbmtpbmcpIiwiY3VzdG9tXzEiOiJDREMgQXV0aG9yZWQgUHVibGljYXRpb25zIiwiY3VzdG9tXzIiOiJEaXNhc3RlciBDb250cm9sIGFuZCBFbWVyZ2VuY3kgU2VydmljZXMiLCJjdXN0b21fOCI6IjM6MDciLCJhY2Nlc3Npb25fbnVtYmVyIjoiMjEyNTM5ODQiLCJsYWJlbCI6IkNEQyBBdXRob3JlZCBQdWJsaWNhdGlvbnMiLCJhYnN0cmFjdCI6IkluIDIwMDEsIGxldHRlcnMgZmlsbGVkIHdpdGggYSBwb3dkZXIgY29udGFpbmluZyBhbnRocmF4IChCYWNpbGx1cyBhbnRocmFjaXMpIHNwb3JlcyB3ZXJlIGRlbGl2ZXJlZCBieSBtYWlsIHRvIGEgbnVtYmVyIG9mIGdvdmVybm1lbnRhbCBhbmQgbWVkaWEgbG9jYXRpb25zIHdpdGhpbiB0aGUgVW5pdGVkIFN0YXRlcy4gSW4gcmVzcG9uc2UsIHRoZSBVLlMuIENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiAoQ0RDKSBwcm92aWRlZCBndWlkZWxpbmVzIGZvciBvZmZpY2UgcGVyc29ubmVsIHdobyBtaWdodCBlbmNvdW50ZXIgYSBsZXR0ZXIgY29udGFpbmluZyBzdXNwaWNpb3VzIHBvd2Rlci4gVGhlc2UgZ3VpZGVsaW5lcyB3ZXJlIGRldmVsb3BlZCBkdXJpbmcgdGhlIGNyaXNpcyBhbmQgaW4gdGhlIGFic2VuY2Ugb2YgZXhwZXJpbWVudGFsIGRhdGEgZnJvbSBsYWJvcmF0b3J5IG9yIGZpZWxkIGludmVzdGlnYXRpb25zLiBBbiBvYnZpb3VzIG5lZWQgdGh1cyBleGlzdHMgZm9yIHF1YW50aXRhdGl2ZSBhbmQgc2NpZW50aWZpYyB2ZXJpZmljYXRpb24gZm9yIHZhbGlkYXRpb24gb2YgdGhlc2UgZ3VpZGVsaW5lcy4gVGhpcyBzdHVkeSBhdHRlbXB0cyB0byBhZGRyZXNzIHRoaXMgbmVlZCwgYWRhcHRpbmcgZWFybGllciB3b3JrIHRoYXQgdXNlZCBhIG11bHRpcGxlIHNtYWxsIG9mZmljZSB0ZXN0IHNpdGUgdG8gY3JlYXRlIGEgbW9kZWwgc3lzdGVtIGluIGFuIG9wZW4gb2ZmaWNlIHRlc3Qgc2l0ZSBpbiBhIHZhY2F0ZWQgb2ZmaWNlIGJ1aWxkaW5nIGluIHdoaWNoIEJhY2lsbHVzIGF0cm9waGFldXMgc3BvcmVzIChhcyBhIHNpbXVsYW50IGZvciBCLiBhbnRocmFjaXMgc3BvcmVzKSB3ZXJlIHJlbGVhc2VkIGJ5IG9wZW5pbmcgYSBsZXR0ZXIuIFVzaW5nIFNGKDYpIGFzIGEgdHJhY2VyIGdhcywgc21va2UgdHViZXMgKGNvbnRhaW5pbmcgc3Rhbm5pYyBjaGxvcmlkZSkgdG8gdmlzdWFsaXplIGFpcmZsb3csIGN1bHR1cmFibGUgYWVyb3NvbCBzYW1wbGluZywgYW5kIGFlcm9zb2wgc3BlY3Ryb21ldHJ5IHdlIHdlcmUgYWJsZSB0byBjaGFyYWN0ZXJpemUgYWlyZmxvdyBhbmQgdW5taXRpZ2F0ZWQgc3BvcmUgYWVyb3NvbCBkaXNzZW1pbmF0aW9uIHdpdGhpbiB0aGUgb2ZmaWNlIHRlc3Qgc2l0ZS4gU3Vic2VxdWVudGx5LCB0d28gc2NyaXB0ZWQgdGVzdCBzY2VuYXJpb3Mgd2VyZSB1c2VkIHRvIHJlcHJvZHVjZSBzZWxlY3RlZCBwb3J0aW9ucyBvZiB0aGUgZXhpc3RpbmcgQ0RDIHJlc3BvbnNlIGd1aWRlbGluZXMgYW5kIGEgbW9kaWZpZWQgdmVyc2lvbiB3aGVyZSB0aGUgY29udGFtaW5hdGVkIGxldHRlciBvcGVuZXIgd2FybmVkIGNvLXdvcmtlcnMgdG8gZXZhY3VhdGUgdGhlbiB3YWl0ZWQgNSBtaW4gYmVmb3JlIGRvaW5nIHNvIGhpbXNlbGYuIEJ5IG5vdCBsZWF2aW5nIHRvZ2V0aGVyIHdpdGggb3RoZXIgY28td29ya2VycywgdGhlIHJpc2sgb2YgdGhlIGxldHRlciBvcGVuZXIgY3Jvc3MtY29udGFtaW5hdGluZyBvdGhlcnMgd2FzIGVsaW1pbmF0ZWQuIFRoZSB0b3RhbCBwb3RlbnRpYWwgc3BvcmUgYWVyb3NvbCBleHBvc3VyZSBvZiB0aGUgbGV0dGVyIG9wZW5lciB3YXMgbm90IGFmZmVjdGVkIGJ5IHJlbWFpbmluZyBzdGlsbCBhbmQgd2FpdGluZyA1IG1pbiB0byBhbGxvdyBjby13b3JrZXJzIHRvIGVzY2FwZSBmaXJzdCBiZWZvcmUgbGVhdmluZyB0aGUgb2ZmaWNlLiBDbG9zaW5nIG9mZmljZSBkb29ycyBhbmQgcXVpY2tseSBkZWFjdGl2YXRpbmcgdGhlIGhlYXRpbmcsIHZlbnRpbGF0aW9uLCBhbmQgYWlyIGNvbmRpdGlvbmluZyBzeXN0ZW0gc2lnbmlmaWNhbnRseSByZWR1Y2VkIHNwb3JlIGFlcm9zb2wgY29uY2VudHJhdGlvbnMgb3V0c2lkZSB0aGUgbWFpbiBvcGVuIG9mZmljZSBpbiB3aGljaCB0aGV5IGhhZCBiZWVuIHJlbGVhc2VkLiIsIm5vdGVzIjoiS291cm5pa2FraXMsIEJpbGw6IE1hcnRpbmV6LCBLZW5uZXRoIEY6IE1jQ2xlZXJ5LCBSb2JlcnQgRTogU2hhZG9teSwgU2VhbiBWOiBSYW1vcywgR2FicmllbDogRW5nbGFuZDogSm91cm5hbCBvZiBvY2N1cGF0aW9uYWwgYW5kIGVudmlyb25tZW50YWwgaHlnaWVuZTogSiBPY2N1cCBFbnZpcm9uIEh5Zy4gMjAxMSBGZWI7OCgyKToxMTMtMjIuIiwidXJsIjoiaHR0cDovL2ludHJhbmV0LmNkYy5nb3YvcGhsaWMvZGlnaXRhbHJlcG9zaXRvcnkvU2NpZW5jZUNsaXBzL3YzaXNzN19BdXRob3JzX0tvdXJuaWtha2lzLnBkZiIsImF1dGhvcl9hZGRyZXNzIjoiRGVmZW5jZSBSJkQgQ2FuYWRhLVN1ZmZpZWxkLCBBbGJlcnRhLCBDYW5hZGEuIiwiZGF0YWJhc2VfcHJvdmlkZXIiOiJOTE0iLCJsYW5ndWFnZSI6ImVuZyIsImRvaSI6IjEwLjEwODAvMTU0NTk2MjQuMjAxMS41NDc0NTQifQoseyJyZWNvcmRfbnVtYmVyIjoiMjI5NzEiLCJyZWZlcmVuY2VfdHlwZSI6IkdlbmVyaWMiLCJhdXRob3IiOiJDaGFrcmFib3J0eSwgQS4gSy4sIFMuIFUuLCAgSGFzbmF0LCBNLiBBLiwgIFBhcnZlZW4sIFMuLCAgSXNsYW0sIE0uIFMuLCAgTWlrb2xvbiwgQS4sICBDaGFrcmFib3J0eSwgUi4gSy4sICBBaG1lZCwgQi4gTi4sICBBcmEsIEsuLCAgSGFpZGVyLCBOLiwgIFpha2ksIFMuIFIuLCAgSG9mZm1hc3RlciwgQS4gUi4sICBSYWhtYW4sIE0uLCAgTHVieSwgUy4gUC4sICBIb3NzYWluLCBNLiBKLiwiLCJ5ZWFyIjoiMjAxMiIsInRpdGxlIjoiQW50aHJheCBvdXRicmVha3MgaW4gQmFuZ2xhZGVzaCwgMjAwOS0yMDEwIiwic2Vjb25kYXJ5X3RpdGxlIjoiQW0gSiBUcm9wIE1lZCBIeWciLCJ2b2x1bWUiOiI4NiIsIm51bWJlciI6IjQiLCJwYWdlcyI6IjcwMy03MTAiLCJlZGl0aW9uIjoiNC8xMi8yMDEyIiwiZGF0ZSI6IkFwciIsInNob3J0X3RpdGxlIjoiQW50aHJheCBvdXRicmVha3MgaW4gQmFuZ2xhZGVzaCwgMjAwOS0yMDEwIiwiYWx0ZXJuYXRlX3RpdGxlIjoiVGhlIEFtZXJpY2FuIGpvdXJuYWwgb2YgdHJvcGljYWwgbWVkaWNpbmUgYW5kIGh5Z2llbmUiLCJpc2JuX2lzc24iOiIxNDc2LTE2NDUgKEVsZWN0cm9uaWMpOiAwMDAyLTk2MzcgKExpbmtpbmcpIiwiY3VzdG9tXzEiOiJDREMgQXV0aG9yZWQgUHVibGljYXRpb25zIiwiY3VzdG9tXzIiOiJab29ub3NlcyIsImN1c3RvbV84IjoiNDoxNSBHSCIsImFjY2Vzc2lvbl9udW1iZXIiOiIyMjQ5MjE1NyIsImFic3RyYWN0IjoiRHVyaW5nIEF1Z3VzdCAyMDA5LU9jdG9iZXIgMjAxMCwgYSBtdWx0aWRpc2NpcGxpbmFyeSB0ZWFtIGludmVzdGlnYXRlZCAxNCBvdXRicmVha3Mgb2YgYW5pbWFsIGFuZCBodW1hbiBhbnRocmF4IGluIEJhbmdsYWRlc2ggdG8gaWRlbnRpZnkgdGhlIGV0aW9sb2d5LCBwYXRod2F5IG9mIHRyYW5zbWlzc2lvbiwgYW5kIHNvY2lhbCwgYmVoYXZpb3JhbCwgYW5kIGN1bHR1cmFsIGZhY3RvcnMgdGhhdCBsZWQgdG8gdGhlc2Ugb3V0YnJlYWtzLiBUaGUgdGVhbSBpZGVudGlmaWVkIDE0MCBhbmltYWwgY2FzZXMgb2YgYW50aHJheCBhbmQgMjczIGh1bWFuIGNhc2VzIG9mIGN1dGFuZW91cyBhbnRocmF4LiBOaW5ldHkgb25lIHBlcmNlbnQgb2YgcGVyc29ucyBpbiB3aG9tIGN1dGFuZW91cyBhbnRocmF4IGRldmVsb3BlZCBoYWQgaGlzdG9yeSBvZiBidXRjaGVyaW5nIHNpY2sgYW5pbWFscywgaGFuZGxpbmcgcmF3IG1lYXQsIGNvbnRhY3Qgd2l0aCBhbmltYWwgc2tpbiwgb3Igd2VyZSBwcmVzZW50IGF0IHNsYXVnaHRlcmluZyBzaXRlcy4gRWFjaCB5ZWFyLCBCYWNpbGx1cyBhbnRocmFjaXMgb2YgaWRlbnRpY2FsIGdlbm90eXBlcyB3ZXJlIGlzb2xhdGVkIGZyb20gYW5pbWFsIGFuZCBodW1hbiBjYXNlcy4gSW5hZGVxdWF0ZSBsaXZlc3RvY2sgdmFjY2luYXRpb24gY292ZXJhZ2UsIGxhY2sgb2YgYXdhcmVuZXNzIG9mIHRoZSByaXNrIG9mIGFudGhyYXggdHJhbnNtaXNzaW9uIGZyb20gYW5pbWFsIHRvIGh1bWFucywgc29jaWFsIG5vcm1zIGFuZCBwb3ZlcnR5IGNvbnRyaWJ1dGVkIHRvIHRoZXNlIG91dGJyZWFrcy4gQWRkcmVzc2luZyB0aGVzZSBjaGFsbGVuZ2VzIGFuZCBhZG9wdGluZyBhIGpvaW50IGFuaW1hbCBhbmQgaHVtYW4gaGVhbHRoIGFwcHJvYWNoIGNvdWxkIGNvbnRyaWJ1dGUgdG8gZGV0ZWN0aW5nIGFuZCBwcmV2ZW50aW5nIHN1Y2ggb3V0YnJlYWtzIGluIHRoZSBmdXR1cmUuIiwibm90ZXMiOiJDaGFrcmFib3J0eSwgQXB1cmJhOiBLaGFuLCBTYWxhaCBVZGRpbjogSGFzbmF0LCBNb2hhbW1lZCBBYnVsOiBQYXJ2ZWVuLCBTaGFoYW5hOiBJc2xhbSwgTSBTYWlmdWw6IE1pa29sb24sIEFuZHJlYTogQ2hha3JhYm9ydHksIFJhbmppdCBLdW1hcjogQWhtZWQsIEJlLU5hemlyOiBBcmEsIEtob3JzZWQ6IEhhaWRlciwgTmFqbXVsOiBaYWtpLCBTaGVyaWYgUjogSG9mZm1hc3RlciwgQWxleCBSOiBSYWhtYW4sIE1haG11ZHVyOiBMdWJ5LCBTdGVwaGVuIFA6IEhvc3NhaW4sIE0gSmFoYW5naXI6IFVuaXRlZCBTdGF0ZXM6IEFtIEogVHJvcCBNZWQgSHlnLiAyMDEyIEFwcjs4Nig0KTo3MDMtMTAuIiwidXJsIjoiaHR0cDovL2ludHJhbmV0LmNkYy5nb3YvcGhsaWMvZGlnaXRhbHJlcG9zaXRvcnkvU2NpZW5jZUNsaXBzL3Y0aXNzMTVfQXV0aG9yc19DaGFrcmFib3J0eS5wZGYiLCJhdXRob3JfYWRkcmVzcyI6IkNlbnRyZSBmb3IgQ29tbXVuaWNhYmxlIERpc2Vhc2VzLCBJbnRlcm5hdGlvbmFsIENlbnRyZSBmb3IgRGlhcnJoZWFsIERpc2Vhc2UgUmVzZWFyY2gsIEJhbmdsYWRlc2gsIERoYWthLCBCYW5nbGFkZXNoOyBJbnN0aXR1dGUgb2YgRXBpZGVtaW9sb2d5IERpc2Vhc2UgQ29udHJvbCBhbmQgUmVzZWFyY2gsIERoYWthLCBCYW5nbGFkZXNoOyBEZXBhcnRtZW50IG9mIExpdmVzdG9jayBTZXJ2aWNlcywgTWluaXN0cnkgb2YgRmlzaGVyaWVzIGFuZCBMaXZlc3RvY2ssIERoYWthLCBCYW5nbGFkZXNoOyBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sIEF0bGFudGEsIEdlb3JnaWEuIiwiZGF0YWJhc2VfcHJvdmlkZXIiOiJOTE0iLCJsYW5ndWFnZSI6ImVuZyIsImRvaSI6IjEwLjQyNjkvYWp0bWguMjAxMi4xMS0wMjM0In0KLHsicmVjb3JkX251bWJlciI6IjIzODYzIiwicmVmZXJlbmNlX3R5cGUiOiJHZW5lcmljIiwiYXV0aG9yIjoiUGFqZXdza2ksIE4uIE0uIFMuLCBTLiwgIFF1aW5uLCBDLiBQLiwgIFBhcmtlciwgUy4gRC4sICBXaWVuZXIsIEguLCAgQWlzc2FuaSwgQi4sICBNY0tpbm5leSwgQi4gQS4sICBQb2xhbmQsIEcuIEEuLCAgRWRiZXJnLCBKLiBDLiwgIEtpbWJlcmx5LCBSLiBQLiwgIFRhbmcsIEouLCAgS2FzbG93LCBSLiBBLiwiLCJ5ZWFyIjoiMjAxMiIsInRpdGxlIjoiQSBnZW5vbWUtd2lkZSBhc3NvY2lhdGlvbiBzdHVkeSBvZiBob3N0IGdlbmV0aWMgZGV0ZXJtaW5hbnRzIG9mIHRoZSBhbnRpYm9keSByZXNwb25zZSB0byBBbnRocmF4IFZhY2NpbmUgQWRzb3JiZWQiLCJzZWNvbmRhcnlfdGl0bGUiOiJWYWNjaW5lIiwidm9sdW1lIjoiMzAiLCJudW1iZXIiOiIzMiIsInBhZ2VzIjoiNDc3OC00Nzg0IiwiZWRpdGlvbiI6IjYvNS8yMDEyIiwiZGF0ZSI6IjctSnVuIiwic2hvcnRfdGl0bGUiOiJBIGdlbm9tZS13aWRlIGFzc29jaWF0aW9uIHN0dWR5IG9mIGhvc3QgZ2VuZXRpYyBkZXRlcm1pbmFudHMgb2YgdGhlIGFudGlib2R5IHJlc3BvbnNlIHRvIEFudGhyYXggVmFjY2luZSBBZHNvcmJlZCIsImFsdGVybmF0ZV90aXRsZSI6IlZhY2NpbmUiLCJpc2JuX2lzc24iOiIxODczLTI1MTggKEVsZWN0cm9uaWMpOiAwMjY0LTQxMFggKExpbmtpbmcpIiwiY3VzdG9tXzEiOiJDREMgQXV0aG9yZWQgUHVibGljYXRpb25zIiwiY3VzdG9tXzIiOiJJbW11bml0eSBhbmQgSW1tdW5pemF0aW9uIiwiY3VzdG9tXzgiOiI0OjI4IiwiYWNjZXNzaW9uX251bWJlciI6IjIyNjU4OTMxIiwiYWJzdHJhY3QiOiJTZXZlcmFsIGxpbmVzIG9mIGV2aWRlbmNlIGhhdmUgc3VwcG9ydGVkIGEgaG9zdCBnZW5ldGljIGNvbnRyaWJ1dGlvbiB0byB2YWNjaW5lIHJlc3BvbnNlLCBidXQgZ2Vub21lLXdpZGUgYXNzZXNzbWVudHMgZm9yIHNwZWNpZmljIGRldGVybWluYW50cyBoYXZlIGJlZW4gc3BhcnNlLiBIZXJlIHdlIGRlc2NyaWJlIGEgZ2Vub21lLXdpZGUgYXNzb2NpYXRpb24gc3R1ZHkgKEdXQVMpIG9mIHByb3RlY3RpdmUgYW50aWdlbi1zcGVjaWZpYyBhbnRpYm9keSAoQWJQQSkgcmVzcG9uc2VzIGFtb25nIDcyNiBFdXJvcGVhbi1BbWVyaWNhbnMgd2hvIHJlY2VpdmVkIEFudGhyYXggVmFjY2luZSBBZHNvcmJlZCAoQVZBKSBhcyBwYXJ0IG9mIGEgY2xpbmljYWwgdHJpYWwuIEFmdGVyIHF1YWxpdHkgY29udHJvbCwgNzM2LDk5NiBTTlBzIHdlcmUgdGVzdGVkIGZvciBhc3NvY2lhdGlvbiB3aXRoIHRoZSBBYlBBIHJlc3BvbnNlIHRvIDMgb3IgNCBBVkEgdmFjY2luYXRpb25zIGdpdmVuIG92ZXIgYSA2LW1vbnRoIHBlcmlvZC4gTm8gU05QIGFjaGlldmVkIHRoZSB0aHJlc2hvbGQgb2YgZ2Vub21lLXdpZGUgc2lnbmlmaWNhbmNlIChwPTV4MTAoLTgpKSwgYnV0IHN1Z2dlc3RpdmUgYXNzb2NpYXRpb25zIChwPDF4MTAoLTUpKSB3ZXJlIG9ic2VydmVkIGZvciBTTlBzIGluIG9yIG5lYXIgdGhlIGNsYXNzIElJIHJlZ2lvbiBvZiB0aGUgbWFqb3IgaGlzdG9jb21wYXRpYmlsaXR5IGNvbXBsZXggKE1IQyksIGluIHRoZSBwcm9tb3RlciByZWdpb24gb2YgU1BTQjEsIGFuZCBhZGphY2VudCB0byBNRVgzQy4gTXVsdGl2YXJpYWJsZSByZWdyZXNzaW9uIG1vZGVsaW5nIHN1Z2dlc3RlZCB0aGF0IG11Y2ggb2YgdGhlIGFzc29jaWF0aW9uIHNpZ25hbCB3aXRoaW4gdGhlIE1IQyBjb3JyZXNwb25kZWQgdG8gcHJldmlvdXNseSBpZGVudGlmaWVkIEhMQSBEUi1EUSBoYXBsb3R5cGVzIGludm9sdmluZyBjb21wb25lbnQgSExBLURSQjEgYWxsZWxlcyBvZiAqMTU6MDEsICowMTowMSwgb3IgKjAxOjAyLiBXZSBlc3RpbWF0ZWQgdGhlIHByb3BvcnRpb24gb2YgYWRkaXRpdmUgZ2VuZXRpYyB2YXJpYW5jZSBleHBsYWluZWQgYnkgY29tbW9uIFNOUCB2YXJpYXRpb24gZm9yIHRoZSBBYlBBIHJlc3BvbnNlIGFmdGVyIHRoZSA2IG1vbnRoIHZhY2NpbmF0aW9uLiBUaGlzIGFuYWx5c2lzIGluZGljYXRlZCBhIHNpZ25pZmljYW50LCBhbGJlaXQgaW1wcmVjaXNlbHkgZXN0aW1hdGVkLCBjb250cmlidXRpb24gb2YgdmFyaWF0aW9uIHRhZ2dlZCBieSBjb21tb24gcG9seW1vcnBoaXNtcyAocD0wLjAzMikuIEZ1dHVyZSBzdHVkaWVzIHdpbGwgYmUgcmVxdWlyZWQgdG8gcmVwbGljYXRlIHRoZXNlIGZpbmRpbmdzIGluIEV1cm9wZWFuIEFtZXJpY2FucyBhbmQgdG8gZnVydGhlciBlbHVjaWRhdGUgdGhlIGhvc3QgZ2VuZXRpYyBmYWN0b3JzIHVuZGVybHlpbmcgdmFyaWFibGUgaW1tdW5lIHJlc3BvbnNlIHRvIEFWQS4iLCJub3RlcyI6IlBhamV3c2tpLCBOaWNob2xhcyBNOiBTaHJlc3RoYSwgU2FkZWVwOiBRdWlubiwgQ29ucmFkIFA6IFBhcmtlciwgU2NvdHQgRDogV2llbmVyLCBIb3dhcmQ6IEFpc3NhbmksIEJyYWhpbTogTWNLaW5uZXksIEJyZXR0IEE6IFBvbGFuZCwgR3JlZ29yeSBBOiBFZGJlcmcsIEplZmZyZXkgQzogS2ltYmVybHksIFJvYmVydCBQOiBUYW5nLCBKaWFubWluZzogS2FzbG93LCBSaWNoYXJkIEE6IE4wMSBBSTA0MDA2OC9BSS9OSUFJRCBOSUggSEhTL1VuaXRlZCBTdGF0ZXM6IE5ldGhlcmxhbmRzOiBOaWhtczM4NTAxMTogVmFjY2luZS4gMjAxMiBKdWwgNjszMCgzMik6NDc3OC04NC4gRXB1YiAyMDEyIE1heSAzMS4iLCJ1cmwiOiJodHRwOi8vaW50cmFuZXQuY2RjLmdvdi9waGxpYy9kaWdpdGFscmVwb3NpdG9yeS9TY2llbmNlQ2xpcHMvdjRpc3MyOF9BdXRob3JzX1BhamV3c2tpLnBkZiIsImF1dGhvcl9hZGRyZXNzIjoiRGVwYXJ0bWVudCBvZiBCaW9zdGF0aXN0aWNhbCBTY2llbmNlcywgV2FrZSBGb3Jlc3QgVW5pdmVyc2l0eSBIZWFsdGggU2NpZW5jZXMsIFdpbnN0b24gU2FsZW0sIE5DIDI3MTU3LTEwNjMsIFVTQS4iLCJkYXRhYmFzZV9wcm92aWRlciI6Ik5MTSIsImxhbmd1YWdlIjoiZW5nIiwiZG9pIjoiMTAuMTAxNi9qLnZhY2NpbmUuMjAxMi4wNS4wMzIifQoseyJyZWNvcmRfbnVtYmVyIjoiMjQyNjIiLCJyZWZlcmVuY2VfdHlwZSI6IkdlbmVyaWMiLCJhdXRob3IiOiJTdGV3YXJ0LCBCLiBSLiwgQy4gRS4sICBUb2thcnMsIEouIEkuLCAgTWFydGluLCBTLiBXLiwgIEtlaXRlbCwgVy4gQS4sICBLZXlzZXJsaW5nLCBILiBMLiwgIEJhYmNvY2ssIEouLCAgUGFya2VyLCBTLiBELiwgIEphY29ic29uLCBSLiBNLiwgIFBvbGFuZCwgRy4gQS4sICBNY05laWwsIE0uIE0uLCIsInllYXIiOiIyMDEyIiwidGl0bGUiOiJIZWFsdGgtcmVsYXRlZCBxdWFsaXR5IG9mIGxpZmUgaW4gdGhlIENEQyBBbnRocmF4IFZhY2NpbmUgQWRzb3JiZWQgSHVtYW4gQ2xpbmljYWwgVHJpYWwiLCJzZWNvbmRhcnlfdGl0bGUiOiJWYWNjaW5lIiwidm9sdW1lIjoiMzAiLCJudW1iZXIiOiI0MCIsInBhZ2VzIjoiNTg3NS01ODc5IiwiZWRpdGlvbiI6IjcvMjEvMjAxMiIsImRhdGUiOiIzMS0wOCIsInNob3J0X3RpdGxlIjoiSGVhbHRoLXJlbGF0ZWQgcXVhbGl0eSBvZiBsaWZlIGluIHRoZSBDREMgQW50aHJheCBWYWNjaW5lIEFkc29yYmVkIEh1bWFuIENsaW5pY2FsIFRyaWFsIiwiYWx0ZXJuYXRlX3RpdGxlIjoiVmFjY2luZSIsImlzYm5faXNzbiI6IjE4NzMtMjUxOCAoRWxlY3Ryb25pYyk6IDAyNjQtNDEwWCAoTGlua2luZykiLCJjdXN0b21fMSI6IkNEQyBBdXRob3JlZCBQdWJsaWNhdGlvbnMiLCJjdXN0b21fMiI6IkltbXVuaXR5IGFuZCBJbW11bml6YXRpb24iLCJjdXN0b21fOCI6IjQ6MzUiLCJhY2Nlc3Npb25fbnVtYmVyIjoiMjI4MTQ0MDkiLCJhYnN0cmFjdCI6IkJBQ0tHUk9VTkQ6IEFmdGVyIHRoZSBEZXBhcnRtZW50IG9mIERlZmVuc2UgaW1wbGVtZW50ZWQgYSBtYW5kYXRvcnkgYW50aHJheCB2YWNjaW5hdGlvbiBwcm9ncmFtIGluIDE5OTggY29uY2VybnMgd2VyZSByYWlzZWQgYWJvdXQgcG90ZW50aWFsIGxvbmctdGVybSBzYWZldHkgZWZmZWN0cyBvZiB0aGUgY3VycmVudCBhbnRocmF4IHZhY2NpbmUuIFRoZSBDREMgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIEFudGhyYXggVmFjY2luZSBBZHNvcmJlZCAoQVZBKSBIdW1hbiBDbGluaWNhbCBUcmlhbCB0byBldmFsdWF0ZSByb3V0ZSBjaGFuZ2UgYW5kIGRvc2UgcmVkdWN0aW9uIGNvbGxlY3RlZCBkYXRhIG9uIHBhcnRpY2lwYW50cycgcXVhbGl0eSBvZiBsaWZlLiBPdXIgb2JqZWN0aXZlIGlzIHRvIGFzc2VzcyB0aGUgYXNzb2NpYXRpb24gYmV0d2VlbiByZWNlaXB0IG9mIEFWQSBhbmQgY2hhbmdlcyBpbiBoZWFsdGgtcmVsYXRlZCBxdWFsaXR5IG9mIGxpZmUsIGFzIG1lYXN1cmVkIGJ5IHRoZSBTRi0zNiBoZWFsdGggc3VydmV5IChNZWRpY2FsIE91dGNvbWVzIFRydXN0LCBCb3N0b24sIE1BKSwgb3ZlciA0MiBtb250aHMgYWZ0ZXIgdmFjY2luYXRpb24uIE1FVEhPRFM6IDE1NjIgdHJpYWwgcGFydGljaXBhbnRzIGNvbXBsZXRlZCBTRi0zNnYyIGhlYWx0aCBzdXJ2ZXlzIGF0IDAsIDEyLCAxOCwgMzAgYW5kIDQyIG1vbnRocy4gUGh5c2ljYWwgYW5kIG1lbnRhbCBzdW1tYXJ5IHNjb3JlcyB3ZXJlIG9idGFpbmVkIGZyb20gdGhlIHN1cnZleSByZXN1bHRzLiBXZSB1c2VkIEdlbmVyYWxpemVkIEVzdGltYXRpbmcgRXF1YXRpb25zIChHRUUpIGFuYWx5c2VzIHRvIGFzc2VzcyB0aGUgYXNzb2NpYXRpb24gYmV0d2VlbiBwaHlzaWNhbCBhbmQgbWVudGFsIHNjb3JlIGRpZmZlcmVuY2UgZnJvbSBiYXNlbGluZSBhbmQgc2V2ZW4gc3R1ZHkgZ3JvdXBzIHJlY2VpdmluZyBlaXRoZXIgQVZBIGF0IGVhY2ggZG9zZSwgc2FsaW5lIHBsYWNlYm8gYXQgZWFjaCBkb3NlLCBvciBhIHJlZHVjZWQgQVZBIHNjaGVkdWxlIHN1YnN0aXR1dGluZyBzYWxpbmUgcGxhY2VibyBmb3Igc29tZSBkb3Nlcy4gUkVTVUxUUzogT3ZlcmFsbCwgbWVhbiBwaHlzaWNhbCBhbmQgbWVudGFsIHNjb3JlcyB0ZW5kZWQgdG8gZGVjcmVhc2UgYWZ0ZXIgYmFzZWxpbmUuIEhvd2V2ZXIsIHdlIGZvdW5kIG5vIGV2aWRlbmNlIHRoYXQgdGhlIHNjb3JlIGRpZmZlcmVuY2UgZnJvbSBiYXNlbGluZSBjaGFuZ2VkIHNpZ25pZmljYW50bHkgZGlmZmVyZW50bHkgYmV0d2VlbiB0aGUgc2V2ZW4gc3R1ZHkgZ3JvdXBzLiBDT05DTFVTSU9OUzogVGhlc2UgcmVzdWx0cyBkbyBub3QgZmF2b3IgYW4gYXNzb2NpYXRpb24gYmV0d2VlbiByZWNlaXB0IG9mIEFWQSBhbmQgYW4gYWx0ZXJlZCBoZWFsdGgtcmVsYXRlZCBxdWFsaXR5IG9mIGxpZmUgb3ZlciBhIDQyLW1vbnRoIHBlcmlvZC4iLCJub3RlcyI6IlN0ZXdhcnQsIEJyb2NrOiBSb3NlLCBDaGFybGVzIEU6IFRva2FycywgSmVyb21lIEk6IE1hcnRpbiwgU3RhY2V5IFc6IEtlaXRlbCwgV2VuZHkgQTogS2V5c2VybGluZywgSGFycnkgTDogQmFiY29jaywgSmFuaWluZTogUGFya2VyLCBTY290dCBEOiBKYWNvYnNvbiwgUm9iZXJ0IE06IFBvbGFuZCwgR3JlZ29yeSBBOiBNY05laWwsIE1pY2hhZWwgTTogTmV0aGVybGFuZHM6IFZhY2NpbmUuIDIwMTIgQXVnIDMxOzMwKDQwKTo1ODc1LTkuIEVwdWIgMjAxMiBKdWwgMTcuIiwidXJsIjoiaHR0cDovL2ludHJhbmV0LmNkYy5nb3YvcGhsaWMvZGlnaXRhbHJlcG9zaXRvcnkvU2NpZW5jZUNsaXBzL3Y0aXNzMzVfQXV0aG9yc19TdGV3YXJ0LnBkZiIsImF1dGhvcl9hZGRyZXNzIjoiSW1tdW5pemF0aW9uIFNhZmV0eSBPZmZpY2UsIERpdmlzaW9uIG9mIEhlYWx0aGNhcmUgUXVhbGl0eSBQcm9tb3Rpb24sIE5hdGlvbmFsIENlbnRlciBmb3IgRW1lcmdpbmcgYW5kIFpvb25vdGljIEluZmVjdGlvdXMgRGlzZWFzZXMsIENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiwgVW5pdGVkIFN0YXRlcy4iLCJkYXRhYmFzZV9wcm92aWRlciI6Ik5MTSIsImxhbmd1YWdlIjoiZW5nIiwiZG9pIjoiMTAuMTAxNi9qLnZhY2NpbmUuMjAxMi4wNi4wNzYifQoseyJyZWNvcmRfbnVtYmVyIjoiMjQ1NTEiLCJyZWZlcmVuY2VfdHlwZSI6IkdlbmVyaWMiLCJhdXRob3IiOiJGYXksIE0uIFAuIEYuLCBELiBBLiwgIEx5bm4sIEYuLCAgU2NoaWZmZXIsIEouIE0uLCAgU3RhcmssIEcuIFYuLCAgS29oYmVyZ2VyLCBSLiwgIFF1aW5uLCBDLiBQLiwgIE51enVtLCBFLiBPLiwiLCJ5ZWFyIjoiMjAxMiIsInRpdGxlIjoiQW50aHJheCB2YWNjaW5lLWluZHVjZWQgYW50aWJvZGllcyBwcm92aWRlIGNyb3NzLXNwZWNpZXMgcHJlZGljdGlvbiBvZiBzdXJ2aXZhbCB0byBhZXJvc29sIGNoYWxsZW5nZSIsInNlY29uZGFyeV90aXRsZSI6IlNjaSBUcmFuc2wgTWVkIiwidm9sdW1lIjoiNCIsIm51bWJlciI6IjE1MSIsInBhZ2VzIjoiMTUxcmExMjYiLCJlZGl0aW9uIjoiOS8xNC8yMDEyIiwiZGF0ZSI6IjktRGVjIiwic2hvcnRfdGl0bGUiOiJBbnRocmF4IHZhY2NpbmUtaW5kdWNlZCBhbnRpYm9kaWVzIHByb3ZpZGUgY3Jvc3Mtc3BlY2llcyBwcmVkaWN0aW9uIG9mIHN1cnZpdmFsIHRvIGFlcm9zb2wgY2hhbGxlbmdlIiwiYWx0ZXJuYXRlX3RpdGxlIjoiU2NpZW5jZSB0cmFuc2xhdGlvbmFsIG1lZGljaW5lIiwiaXNibl9pc3NuIjoiMTk0Ni02MjQyIChFbGVjdHJvbmljKTogMTk0Ni02MjM0IChMaW5raW5nKSIsImN1c3RvbV8xIjoiQ0RDIEF1dGhvcmVkIFB1YmxpY2F0aW9ucyIsImN1c3RvbV8yIjoiSW1tdW5pdHkgYW5kIEltbXVuaXphdGlvbiIsImN1c3RvbV84IjoiNDo0MCIsImFjY2Vzc2lvbl9udW1iZXIiOiIyMjk3Mjg0NCIsImFic3RyYWN0IjoiQmVjYXVzZSBjbGluaWNhbCB0cmlhbHMgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiB2YWNjaW5lcyBhZ2FpbnN0IGFudGhyYXggYXJlIG5vdCBldGhpY2FsIG9yIGZlYXNpYmxlLCBsaWNlbnN1cmUgZm9yIG5ldyBhbnRocmF4IHZhY2NpbmVzIHdpbGwgbGlrZWx5IGludm9sdmUgdGhlIEZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb24ncyBcIkFuaW1hbCBSdWxlLFwiIGEgc2V0IG9mIHJlZ3VsYXRpb25zIHRoYXQgYWxsb3cgYXBwcm92YWwgb2YgcHJvZHVjdHMgYmFzZWQgb24gZWZmaWNhY3kgZGF0YSBvbmx5IGluIGFuaW1hbHMgY29tYmluZWQgd2l0aCBpbW11bm9nZW5pY2l0eSBhbmQgc2FmZXR5IGRhdGEgaW4gYW5pbWFscyBhbmQgaHVtYW5zLiBVLlMuIGdvdmVybm1lbnQtc3BvbnNvcmVkIGFuaW1hbCBzdHVkaWVzIGhhdmUgc2hvd24gYW50aHJheCB2YWNjaW5lIGVmZmljYWN5IGluIGEgdmFyaWV0eSBvZiBzZXR0aW5ncy4gV2UgZXhhbWluZWQgZGF0YSBmcm9tIDIxIG9mIHRob3NlIHN0dWRpZXMgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgYW4gaW1tdW5vbG9naWNhbCBicmlkZ2UgYmFzZWQgb24gbGV0aGFsIHRveGluIG5ldXRyYWxpemF0aW9uIGFjdGl2aXR5IGFzc2F5IChUTkEpIGNhbiBwcmVkaWN0IHN1cnZpdmFsIGFnYWluc3QgYW4gaW5oYWxhdGlvbiBhbnRocmF4IGNoYWxsZW5nZSB3aXRoaW4gYW5kIGFjcm9zcyBzcGVjaWVzIGFuZCBnZW5lcmEuIFRoZSAyMSBzdHVkaWVzIHdlcmUgY2xhc3NpZmllZCBpbnRvIDExIGRpZmZlcmVudCBzZXR0aW5ncywgZWFjaCBvZiB3aGljaCBoYWQgdGhlIHNhbWUgYW5pbWFsIHNwZWNpZXMsIHZhY2NpbmUgdHlwZSBhbmQgZm9ybXVsYXRpb24sIHZhY2NpbmF0aW9uIHNjaGVkdWxlLCB0aW1lIG9mIFROQSBtZWFzdXJlbWVudCwgYW5kIGNoYWxsZW5nZSB0aW1lLiBMb2dpc3RpYyByZWdyZXNzaW9uIG1vZGVscyBkZXRlcm1pbmVkIHRoZSBjb250cmlidXRpb24gb2YgdmFjY2luZSBkaWx1dGlvbiBkb3NlIGFuZCBUTkEgb24gcHJlZGljdGlvbiBvZiBzdXJ2aXZhbC4gRm9yIG1vc3Qgc2V0dGluZ3MsIGxvZ2lzdGljIG1vZGVscyB1c2luZyBvbmx5IFROQSBleHBsYWluZWQgbW9yZSB0aGFuIDc1JSBvZiB0aGUgc3Vydml2YWwgZWZmZWN0IG9mIHRoZSBtb2RlbHMgd2l0aCBkb3NlIGFkZGl0aW9uYWxseSBpbmNsdWRlZC4gQ3Jvc3Mtc3BlY2llcyBzdXJ2aXZhbCBwcmVkaWN0aW9ucyB1c2luZyBUTkEgd2VyZSBjb21wYXJlZCB0byB0aGUgYWN0dWFsIHN1cnZpdmFsIGFuZCBzaG93biB0byBoYXZlIGdvb2QgYWdyZWVtZW50IChDb2hlbidzIGthcHBhIHJhbmdlZCBmcm9tIDAuNTUgdG8gMC43OCkuIEluIG9uZSBzdHVkeSBkZXNpZ24sIGN5bm9tb2xndXMgbWFjYXF1ZSBkYXRhIHByZWRpY3RlZCA3OC42JSBzdXJ2aXZhbCBpbiByaGVzdXMgbWFjYXF1ZXMgKGFjdHVhbCBzdXJ2aXZhbCwgODMuMCUpIGFuZCA3Mi42JSBpbiByYWJiaXRzIChhY3R1YWwgc3Vydml2YWwsIDY0LjYlKS4gVGhlc2UgZGF0YSBhZGQgc3VwcG9ydCBmb3IgdGhlIHVzZSBvZiBUTkEgYXMgYW4gaW1tdW5vbG9naWNhbCBicmlkZ2UgYmV0d2VlbiBzcGVjaWVzIHRvIGV4dHJhcG9sYXRlIGRhdGEgaW4gYW5pbWFscyB0byBwcmVkaWN0IGFudGhyYXggdmFjY2luZSBlZmZlY3RpdmVuZXNzIGluIGh1bWFucy4iLCJub3RlcyI6IkZheSwgTWljaGFlbCBQOiBGb2xsbWFubiwgRGVhbiBBOiBMeW5uLCBGcmV5amE6IFNjaGlmZmVyLCBKYXJhZCBNOiBTdGFyaywgR3JlZ29yeSBWOiBLb2hiZXJnZXIsIFJvYmVydDogUXVpbm4sIENvbnJhZCBQOiBOdXp1bSwgRWR3aW4gTzogVW5pdGVkIFN0YXRlczogU2NpIFRyYW5zbCBNZWQuIDIwMTIgU2VwIDEyOzQoMTUxKToxNTFyYTEyNi4iLCJ1cmwiOiJodHRwOi8vaW50cmFuZXQuY2RjLmdvdi9waGxpYy9kaWdpdGFscmVwb3NpdG9yeS9TY2llbmNlQ2xpcHMvdjRpc3M0MF9BdXRob3JzX0ZheS5wZGYiLCJhdXRob3JfYWRkcmVzcyI6IkJpb3N0YXRpc3RpY3MgUmVzZWFyY2ggQnJhbmNoLCBOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcywgNjcwMEIgUm9ja2xlZGdlIERyaXZlLCBCZXRoZXNkYSwgTUQgMjA4OTItNzYzMCwgVVNBLiIsImRhdGFiYXNlX3Byb3ZpZGVyIjoiTkxNIiwibGFuZ3VhZ2UiOiJlbmciLCJkb2kiOiIxMC4xMTI2L3NjaXRyYW5zbG1lZC4zMDA0MDczIn0KLHsicmVjb3JkX251bWJlciI6IjI1MDM4IiwicmVmZXJlbmNlX3R5cGUiOiJHZW5lcmljIiwiYXV0aG9yIjoiTWVhbmV5LURlbG1hbiwgRC4gWi4sIE0uIEUuLCAgUmFzbXVzc2VuLCBTLiBBLiwgIFN0cmFzc2VyLCBTLiwgIFNoYWRvbXksIFMuLCAgVHVyY2lvcy1SdWl6LCBSLiBNLiwgIFdlbmRlbCwgRy4gRC4sIEpyLiwgIFRyZWFkd2VsbCwgVC4gQS4sICBKYW1pZXNvbiwgRC4gSi4sIiwieWVhciI6IjIwMTIiLCJ0aXRsZSI6IkFudGhyYXggY2FzZXMgaW4gcHJlZ25hbnQgYW5kIHBvc3RwYXJ0dW0gd29tZW46IGEgc3lzdGVtYXRpYyByZXZpZXciLCJzZWNvbmRhcnlfdGl0bGUiOiJPYnN0ZXQgR3luZWNvbCIsInZvbHVtZSI6IjEyMCIsIm51bWJlciI6IjYiLCJwYWdlcyI6IjE0MzktMTQ0OSIsImVkaXRpb24iOiIxMS8yMi8yMDEyIiwiZGF0ZSI6IkRlYyIsInNob3J0X3RpdGxlIjoiQW50aHJheCBjYXNlcyBpbiBwcmVnbmFudCBhbmQgcG9zdHBhcnR1bSB3b21lbjogYSBzeXN0ZW1hdGljIHJldmlldyIsImFsdGVybmF0ZV90aXRsZSI6Ik9ic3RldHJpY3MgYW5kIGd5bmVjb2xvZ3kiLCJpc2JuX2lzc24iOiIxODczLTIzM1ggKEVsZWN0cm9uaWMpOiAwMDI5LTc4NDQgKExpbmtpbmcpIiwiY3VzdG9tXzEiOiJDREMgQXV0aG9yZWQgUHVibGljYXRpb25zIiwiY3VzdG9tXzIiOiJab29ub3NlcyIsImN1c3RvbV84IjoiNDo0OCIsImFjY2Vzc2lvbl9udW1iZXIiOiIyMzE2ODc3MSIsImFic3RyYWN0IjoiT0JKRUNUSVZFOiBUbyBkZXNjcmliZSB0aGUgd29ybGR3aWRlIGV4cGVyaWVuY2Ugb2YgQmFjaWxsdXMgYW50aHJhY2lzIGluZmVjdGlvbiByZXBvcnRlZCBpbiBwcmVnbmFudCwgcG9zdHBhcnR1bSwgYW5kIGxhY3RhdGluZyB3b21lbi4gREFUQSBTT1VSQ0VTOiBTdHVkaWVzIHdlcmUgaWRlbnRpZmllZCB0aHJvdWdoIE1FRExJTkUsIFdlYiBvZiBTY2llbmNlLCBFbWJhc2UsIGFuZCBHbG9iYWwgSGVhbHRoIGRhdGFiYXNlcyBmcm9tIGluY2VwdGlvbiB1bnRpbCBNYXkgMjAxMi4gVGhlIGtleSB3b3JkcyAoW1wiYW50aHJheFwiIG9yIFwiYW50aHJhY2lzXCJdIGFuZCBbXCJwcmVnbmEqXCIgb3IgXCJtYXRlcm4qXCIgb3IgXCJwb3N0cGFydHVtXCIgb3IgXCJwdWVycGVyYWxcIiBvciBcImxhY3QqXCIgb3IgXCJicmVhc3RmZWQqXCIgb3IgXCJicmVhc3RmZWVkKlwiIG9yIFwiZmV0YWxcIiBvciBcImZldHVzXCIgb3IgXCJuZW9uYXRlXCIgb3IgXCJuZXdib3JuXCIgb3IgXCJhYm9ydCpcIiBvciBcInV0ZXJ1c1wiXSkgd2VyZSB1c2VkLiBBZGRpdGlvbmFsbHksIGFsbCByZWZlcmVuY2VzIGZyb20gc2VsZWN0ZWQgYXJ0aWNsZXMgd2VyZSByZXZpZXdlZCwgaGFuZCBzZWFyY2hlcyB3ZXJlIGNvbmR1Y3RlZCwgYW5kIHJlbGV2YW50IGF1dGhvcnMgd2VyZSBjb250YWN0ZWQuIE1FVEhPRFMgT0YgU1RVRFkgU0VMRUNUSU9OOiBUaGUgaW5jbHVzaW9uIGNyaXRlcmlhIHdlcmU6IHB1Ymxpc2hlZCBhcnRpY2xlcyByZWZlcnJpbmcgdG8gd29tZW4gZGlhZ25vc2VkIHdpdGggYW4gaW5mZWN0aW9uIGR1ZSB0byBleHBvc3VyZSB0byBCIGFudGhyYWNpcyBkdXJpbmcgcHJlZ25hbmN5LCB0aGUgcG9zdHBhcnR1bSBwZXJpb2QsIG9yIGR1cmluZyBsYWN0YXRpb247IGFueSBhcnRpY2xlIHR5cGUgcmVwb3J0aW5nIHBhdGllbnQtc3BlY2lmaWMgZGF0YTsgYXJ0aWNsZXMgaW4gYW55IGxhbmd1YWdlOyBhbmQgbm9uZHVwbGljYXRlIGNhc2VzLiBOb24tRW5nbGlzaCBhcnRpY2xlcyB3ZXJlIHByb2Zlc3Npb25hbGx5IHRyYW5zbGF0ZWQuIER1cGxpY2F0ZSByZXBvcnRzLCB1bnB1Ymxpc2hlZCByZXBvcnRzLCBhbmQgcmV2aWV3IGFydGljbGVzIGRlcGljdGluZyBwcmV2aW91c2x5IGlkZW50aWZpZWQgY2FzZXMgd2VyZSBleGNsdWRlZC4gVEFCVUxBVElPTiwgSU5URUdSQVRJT04sIEFORCBSRVNVTFRTOiBUd28gYXV0aG9ycyBpbmRlcGVuZGVudGx5IHJldmlld2VkIGFydGljbGVzIGZvciBpbmNsdXNpb24uIFRoZSBwcmltYXJ5IHNlYXJjaCBvZiB0aGUgZm91ciBkYXRhYmFzZXMgeWllbGRlZCAxLDM0MCBhcnRpY2xlcywgYW5kIHRoZSBzZWNvbmRhcnkgY3Jvc3NyZWZlcmVuY2Ugc2VhcmNoIHJldmVhbGVkIDE0NiBhcnRpY2xlcy4gRm91cnRlZW4gYXJ0aWNsZXMgbWV0IHRoZSBpbmNsdXNpb24gY3JpdGVyaWEuIEluIHRvdGFsLCAyMCBjYXNlcyBvZiBCIGFudGhyYWNpcyBpbmZlY3Rpb24gd2VyZSBmb3VuZCwgMTcgaW4gcHJlZ25hbnQgd29tZW4sIHR3byBpbiBwb3N0cGFydHVtIHdvbWVuLCBhbmQgb25lIGNhc2UgaW4gYSBsYWN0YXRpbmcgd29tYW4uIEFtb25nIHRoZXNlIHJlcG9ydHMsIDE2IHdvbWVuIGRpZWQgYW5kIDEyIGZldGFsIG9yIG5lb25hdGFsIGxvc3NlcyB3ZXJlIHJlcG9ydGVkLiBPZiB0aGVzZSBmYXRhbCBjYXNlcywgbW9zdCBwcmVkYXRlZCB0aGUgYWR2ZW50IG9mIGFudGliaW90aWNzLiBDT05DTFVTSU9OUzogQmFzZWQgb24gdGhlc2UgY2FzZSByZXBvcnRzLCBCIGFudGhyYWNpcyBpbmZlY3Rpb24gaW4gcHJlZ25hbnQgYW5kIHBvc3RwYXJ0dW0gd29tZW4gaXMgYXNzb2NpYXRlZCB3aXRoIGhpZ2ggcmF0ZXMgb2YgbWF0ZXJuYWwgYW5kIGZldGFsIGRlYXRoLiBFdmlkZW5jZSBvZiBwb3NzaWJsZSBtYXRlcm5hbC1mZXRhbCB0cmFuc21pc3Npb24gb2YgQiBhbnRocmFjaXMgaW5mZWN0aW9uIHdhcyBpZGVudGlmaWVkIGluIGVhcmx5IGNhc2UgcmVwb3J0cy4iLCJub3RlcyI6Ik1lYW5leS1EZWxtYW4sIERhbmE6IFpvdHRpLCBNYXJpYW5uZSBFOiBSYXNtdXNzZW4sIFNvbmphIEE6IFN0cmFzc2VyLCBTaGVyeWw6IFNoYWRvbXksIFNlYW46IFR1cmNpb3MtUnVpeiwgUmVpbmEgTTogV2VuZGVsLCBHZW9yZ2UgRCBKcjogVHJlYWR3ZWxsLCBUcmFjZWUgQTogSmFtaWVzb24sIERlbmlzZSBKOiBVbml0ZWQgU3RhdGVzOiBPYnN0ZXQgR3luZWNvbC4gMjAxMiBEZWM7MTIwKDYpOjE0MzktNDkuIGRvaTogaHR0cDovLzEwLjEwOTcvQU9HLjBiMDEzZTMxODI3MGVjMDguIiwidXJsIjoiaHR0cDovL2ludHJhbmV0LmNkYy5nb3YvcGhsaWMvZGlnaXRhbHJlcG9zaXRvcnkvU2NpZW5jZUNsaXBzL3Y0aXNzNDhfQXV0aG9yc19NZWFuZXktRGVsbWFuLnBkZiIsImF1dGhvcl9hZGRyZXNzIjoiRW1vcnkgVW5pdmVyc2l0eSBhbmQgdGhlIENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiBhbmQgR2VvcmdpYSBTdGF0ZSBVbml2ZXJzaXR5LCBBdGxhbnRhLCBHZW9yZ2lhOyBhbmQgdGhlIFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLCBEYWxsYXMsIFRleGFzLiIsImRhdGFiYXNlX3Byb3ZpZGVyIjoiTkxNIiwibGFuZ3VhZ2UiOiJlbmciLCJkb2kiOiIxMC4xMDk3L0FPRy4wYjAxM2UzMTgyNzBlYzA4In0KLHsicmVjb3JkX251bWJlciI6IjMxNjI3IiwicmVmZXJlbmNlX3R5cGUiOiJHZW5lcmljIiwiYXV0aG9yIjoiT3NjaGVyd2l0eiwgSi4gUS4sIEMuIFAuLCAgQ2Vhc2UsIEsuIEIuLCIsInllYXIiOiIyMDE1IiwidGl0bGUiOiJBbnRocmF4IHZhY2NpbmUgcmVjaXBpZW50cyBsYWNrIGFudGlib2R5IGFnYWluc3QgdGhlIGxvb3AgbmV1dHJhbGl6aW5nIGRldGVybWluYW50OiBhIHByb3RlY3RpdmUgbmV1dHJhbGl6aW5nIGVwaXRvcGUgZnJvbSBCYWNpbGx1cyBhbnRocmFjaXMgcHJvdGVjdGl2ZSBhbnRpZ2VuIiwic2Vjb25kYXJ5X3RpdGxlIjoiVmFjY2luZSIsImVkaXRpb24iOiIzLzMxLzIwMTUiLCJkYXRlIjoiMjUtMDMiLCJzaG9ydF90aXRsZSI6IkFudGhyYXggdmFjY2luZSByZWNpcGllbnRzIGxhY2sgYW50aWJvZHkgYWdhaW5zdCB0aGUgbG9vcCBuZXV0cmFsaXppbmcgZGV0ZXJtaW5hbnQ6IGEgcHJvdGVjdGl2ZSBuZXV0cmFsaXppbmcgZXBpdG9wZSBmcm9tIEJhY2lsbHVzIGFudGhyYWNpcyBwcm90ZWN0aXZlIGFudGlnZW4iLCJhbHRlcm5hdGVfdGl0bGUiOiJWYWNjaW5lIiwiaXNibl9pc3NuIjoiMDI2NC00MTB4IiwiY3VzdG9tXzEiOiJDREMgQXV0aG9yZWQgUHVibGljYXRpb25zIiwiY3VzdG9tXzIiOiJJbW11bml0eSBhbmQgSW1tdW5pemF0aW9uIiwiY3VzdG9tXzgiOiI3OjE1IiwiYWNjZXNzaW9uX251bWJlciI6IjI1ODIwMDY2Iiwia2V5d29yZHMiOiJBdmE6IEFudGlib2R5OiBFcGl0b3BlOiBQcm90ZWN0aXZlIGFudGlnZW46IFZhY2NpbmUiLCJhYnN0cmFjdCI6IkJBQ0tHUk9VTkQ6IEVwaXRvcGUtZm9jdXNlZCBpbW11bm9nZW5zIGNhbiBlbGljaXQgYW50aWJvZHkgYWdhaW5zdCB0aGUgbG9vcCBuZXV0cmFsaXppbmcgZGV0ZXJtaW5hbnQgKExORCksIGEgbmV1dHJhbGl6aW5nIGVwaXRvcGUgZm91bmQgd2l0aGluIHRoZSAyYmV0YTItMmJldGEzIGxvb3Agb2YgcHJvdGVjdGl2ZSBhbnRpZ2VuIChQQSksIHdoaWNoIGNhbiBwcm90ZWN0IHJhYmJpdHMgZnJvbSBoaWdoLWRvc2UgaW5oYWxhdGlvbiBjaGFsbGVuZ2Ugd2l0aCBCYWNpbGx1cyBhbnRocmFjaXMgQW1lcyBzdHJhaW4uIEludGVyZXN0aW5nbHksIGRhdGEgc3VnZ2VzdHMgdGhhdCB0aGlzIGVwaXRvcGUgaXMgcmVsYXRpdmVseSBpbW11bm9zaWxlbnQgaW4gcmFiYml0cyBhbmQgbm9uLWh1bWFuIHByaW1hdGVzIGltbXVuaXplZCB3aXRoIGZ1bGwgbGVuZ3RoIFBBLiBNRVRIT0RTOiBUbyBkZXRlcm1pbmUgd2hldGhlciB0aGUgTE5EIGlzIGltbXVub3NpbGVudCBhbW9uZyBodW1hbnMgdmFjY2luYXRlZCB3aXRoIFBBLCB3ZSBzY3JlZW5lZCBhbnRpc2VyYSBmcm9tIEFWQS0gb3IgcGxhY2Viby12YWNjaW5lZXMgZnJvbSBhIGNsaW5pY2FsIHRyaWFsIGZvciBhbnRpYm9keSByZWFjdGl2ZSB3aXRoIHRoZSBMTkQuIFJFU1VMVFM6IEFWQS12YWNjaW5lZSBzZXJhIGhhZCBzaWduaWZpY2FudCBQQS1zcGVjaWZpYyBhbnRpYm9keSBjb21wYXJlZCB0byBwbGFjZWJvLXZhY2NpbmVlIHNlcmE7IGhvd2V2ZXIsIHNlcmEgZnJvbSB0aGUgdHdvIGNvaG9ydHMgd2VyZSBpbmRpc3Rpbmd1aXNoYWJsZSB3aXRoIHJlZ2FyZCB0byB0aGUgZnJlcXVlbmN5IG9mIGluZGl2aWR1YWxzIHdpdGggYW50aWJvZHkgc3BlY2lmaWMgZm9yIHRoZSBMTkQuIENPTkNMVVNJT05TOiBBVkEtdmFjY2luZWVzIGhhdmUgYSBsb3cgZnJlcXVlbmN5IG9mIGFudGlib2R5IHJlYWN0aXZlIHdpdGggdGhlIExORC4gQXMgd2l0aCByYWJiaXRzIGFuZCBub24taHVtYW4gcHJpbWF0ZXMsIHRoZSBlbGljaXRhdGlvbiBvZiBMTkQtc3BlY2lmaWMgYW50aWJvZHkgaW4gaHVtYW5zIGFwcGVhcnMgdG8gcmVxdWlyZSBpbW11bml6YXRpb24gd2l0aCBhbiBlcGl0b3BlLWZvY3VzZWQgdmFjY2luZS4iLCJub3RlcyI6IjE4NzMtMjUxODogT3NjaGVyd2l0eiwgSm9uOiBRdWlubiwgQ29ucmFkIFA6IENlYXNlLCBLZW1wIEI6IEpvdXJuYWwgYXJ0aWNsZTogVmFjY2luZS4gMjAxNSBNYXIgMjUuIHBpaTogUzAyNjQtNDEwWCgxNSkwMDMzNi05LiBkb2k6IDEwLjEwMTYvai52YWNjaW5lLjIwMTUuMDMuMDM3LiIsInVybCI6Ikh0dHA6Ly9pbnRyYW5ldC5jZGMuZ292L2xpYnJhcnkvZG9jcy9zY2llbmNlX2NsaXBzL3ZvbF83L2lzc3VlXzE1LzctMTUtQXV0aG9ycy0yNTgyMDA2Ni5wZGYiLCJhdXRob3JfYWRkcmVzcyI6IkRpdmlzaW9uIG9mIEhlbWF0b2xvZ3ktT25jb2xvZ3ksIERlcGFydG1lbnQgb2YgSW50ZXJuYWwgTWVkaWNpbmUsIFVuaXZlcnNpdHkgb2YgTWljaGlnYW4gTWVkaWNhbCBTY2hvb2wsIEFubiBBcmJvciwgTUkgNDgxMDUsIFVTQTsgVmV0ZXJhbnMgQWRtaW5pc3RyYXRpb24gQW5uIEFyYm9yIEhlYWx0aGNhcmUgU3lzdGVtLCAyMjE1IEZ1bGxlciBSb2FkLCBBbm4gQXJib3IsIE1JIDQ4MTA1LCBVU0EuIEVsZWN0cm9uaWMgYWRkcmVzczogam9zY2hlckB1bWljaC5lZHUuOiBEaXZpc2lvbiBvZiBCYWN0ZXJpYWwgRGlzZWFzZXMsIE5hdGlvbmFsIENlbnRlciBmb3IgSW1tdW5pemF0aW9uIGFuZCBSZXNwaXJhdG9yeSBEaXNlYXNlcywgQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLCBBdGxhbnRhLCBHQSwgVVNBLjogRGl2aXNpb24gb2YgSGVtYXRvbG9neS1PbmNvbG9neSwgRGVwYXJ0bWVudCBvZiBJbnRlcm5hbCBNZWRpY2luZSwgVW5pdmVyc2l0eSBvZiBNaWNoaWdhbiBNZWRpY2FsIFNjaG9vbCwgQW5uIEFyYm9yLCBNSSA0ODEwNSwgVVNBOyBWZXRlcmFucyBBZG1pbmlzdHJhdGlvbiBBbm4gQXJib3IgSGVhbHRoY2FyZSBTeXN0ZW0sIDIyMTUgRnVsbGVyIFJvYWQsIEFubiBBcmJvciwgTUkgNDgxMDUsIFVTQS4iLCJkYXRhYmFzZV9wcm92aWRlciI6IlxcXFxjZGNcXHByb2plY3RcXE9TRUxTX0VBUE9fRExTU19MaWJyYXJ5X1NjaV9DbGlwc1xcSXNzdWVzIEFyY2hpdmVcXDIwMTUgLSBWb2x1bWUgN1xcdjcgaXNzMTUgLSBBcHJpbCAxNFxcUERGc1xcNy0xNS1BdXRob3JzLTI1ODIwMDY2LnBkZiIsImxhbmd1YWdlIjoiRW5nIiwiZG9pIjoiMTAuMTAxNi9qLnZhY2NpbmUuMjAxNS4wMy4wMzcifQoseyJyZWNvcmRfbnVtYmVyIjoiMzYxMTUiLCJyZWZlcmVuY2VfdHlwZSI6IkdlbmVyaWMiLCJhdXRob3IiOiJNYXJzdG9uLCBDLiBLLiBJLiwgSC4sICBMZWUsIFAuLCAgQ2h1cmNod2VsbCwgRy4sICBHdW1rZSwgTS4sICBTdGFuZWssIEQuLCAgR2VlLCBKLiBFLiwgIEJveWVyLCBBLiBFLiwgIEdhbGxlZ29zLUNhbmRlbGEsIE0uLCAgQmFyciwgSi4gUi4sICBMaSwgSC4sICBCb3VsYXksIEQuLCAgQ3JvbmluLCBMLiwgIFF1aW5uLCBDLiBQLiwgIEhvZmZtYXN0ZXIsIEEuIFIuLCIsInllYXIiOiIyMDE2IiwidGl0bGUiOiJBbnRocmF4IHRveGluLWV4cHJlc3NpbmcgQmFjaWxsdXMgY2VyZXVzIGlzb2xhdGVkIGZyb20gYW4gYW50aHJheC1saWtlIGVzY2hhciIsInNlY29uZGFyeV90aXRsZSI6IlBMb1MgT25lIiwidm9sdW1lIjoiMTEiLCJudW1iZXIiOiI2IiwicGFnZXMiOiJlMDE1Njk4NyIsImVkaXRpb24iOiI2LzQvMjAxNiIsInNob3J0X3RpdGxlIjoiQW50aHJheCB0b3hpbi1leHByZXNzaW5nIEJhY2lsbHVzIGNlcmV1cyBpc29sYXRlZCBmcm9tIGFuIGFudGhyYXgtbGlrZSBlc2NoYXIiLCJhbHRlcm5hdGVfdGl0bGUiOiJQbG9TIG9uZSIsImlzYm5faXNzbiI6IjE5MzItNjIwMyIsImN1c3RvbV8xIjoiQ0RDIEF1dGhvcmVkIFB1YmxpY2F0aW9ucyIsImN1c3RvbV8yIjoiTGFib3JhdG9yeSBTY2llbmNlcyIsImN1c3RvbV84IjoiODoyNSIsImFjY2Vzc2lvbl9udW1iZXIiOiIyNzI1NzkwOSIsImFic3RyYWN0IjoiQmFjaWxsdXMgY2VyZXVzIGlzb2xhdGVzIGhhdmUgYmVlbiBkZXNjcmliZWQgaGFyYm9yaW5nIEJhY2lsbHVzIGFudGhyYWNpcyB0b3hpbiBnZW5lcywgbW9zdCBub3RhYmx5IEIuIGNlcmV1cyBHOTI0MSwgYW5kIGNhcGFibGUgb2YgY2F1c2luZyBzZXZlcmUgYW5kIGZhdGFsIHBuZXVtb25pYXMuIFRoaXMgcmVwb3J0IGRlc2NyaWJlcyB0aGUgY2hhcmFjdGVyaXphdGlvbiBvZiBhIEIuIGNlcmV1cyBpc29sYXRlLCBCY0ZMMjAxMywgYXNzb2NpYXRlZCB3aXRoIGEgbmF0dXJhbGx5IG9jY3VycmluZyBjdXRhbmVvdXMgbGVzaW9uIHJlc2VtYmxpbmcgYW4gYW50aHJheCBlc2NoYXIuIFNpbWlsYXIgdG8gRzkyNDEsIEJjRkwyMDEzIGlzIHBvc2l0aXZlIGZvciB0aGUgQi4gYW50aHJhY2lzIHBYTzEgdG94aW4gZ2VuZXMsIGhhcyBhIG11bHRpLWxvY3VzIHNlcXVlbmNlIHR5cGUgb2YgNzgsIGFuZCBhIHBhZ0Egc2VxdWVuY2UgdHlwZSBvZiA5LiBXaG9sZSBnZW5vbWUgc2VxdWVuY2luZyBjb25maXJtcyB0aGUgc2ltaWxhcml0eSB0byBHOTI0MS4gSW4gYWRkaXRpb24gdG8gdGhlIGNocm9tb3NvbWUgaGF2aW5nIGFuIGF2ZXJhZ2UgbnVjbGVvdGlkZSBpZGVudGl0eSBvZiA5OS45OCUgd2hlbiBjb21wYXJlZCB0byBHOTI0MSwgQmNGTDIwMTMgaGFyYm9ycyB0aHJlZSBwbGFzbWlkcyB3aXRoIHZhcnlpbmcgaG9tb2xvZ3kgdG8gdGhlIEc5MjQxIHBsYXNtaWRzIChwQkNYTzEsIHBCQzIxMCBhbmQgcEJGSF8xKS4gVGhpcyBpcyBhbHNvIHRoZSBmaXJzdCByZXBvcnQgdG8gaW5jbHVkZSBzZXJvbG9naWMgdGVzdGluZyBvZiBwYXRpZW50IHNwZWNpbWVucyBhc3NvY2lhdGVkIHdpdGggdGhpcyB0eXBlIG9mIEIuIGNlcmV1cyBpbmZlY3Rpb24gd2hpY2ggcmVzdWx0ZWQgaW4gdGhlIGRldGVjdGlvbiBvZiBhbnRocmF4IGxldGhhbCBmYWN0b3IgdG94ZW1pYSwgYSBxdWFudGlmaWFibGUgc2VydW0gYW50aWJvZHkgcmVzcG9uc2UgdG8gcHJvdGVjdGl2ZSBhbnRpZ2VuIChQQSksIGFuZCBsZXRoYWwgdG94aW4gbmV1dHJhbGl6YXRpb24gYWN0aXZpdHkuIiwibm90ZXMiOiIxOTMyLTYyMDM6IE1hcnN0b24sIENodW5nIEs6IElicmFoaW0sIEhpc2hhbTogTGVlLCBQaGlsaXA6IENodXJjaHdlbGwsIEdlb3JnZTogR3Vta2UsIE1lZ2FuOiBTdGFuZWssIERhbmllbGxlOiBHZWUsIEpheSBFOiBCb3llciwgQW5uZSBFOiBHYWxsZWdvcy1DYW5kZWxhLCBNYXJpYmVsOiBCYXJyLCBKb2huIFI6IExpLCBIYW46IEJvdWxheSwgRGFyYmk6IENyb25pbiwgTGk6IFF1aW5uLCBDb25yYWQgUDogSG9mZm1hc3RlciwgQWxleCBSOiBKb3VybmFsIEFydGljbGU6IFVuaXRlZCBTdGF0ZXM6IFBMb1MgT25lLiAyMDE2IEp1biAzOzExKDYpOmUwMTU2OTg3LiBkb2k6IDEwLjEzNzEvam91cm5hbC5wb25lLjAxNTY5ODcuIGVDb2xsZWN0aW9uIDIwMTYuIiwidXJsIjoiaHR0cDovL3d3dy5uY2JpLm5sbS5uaWguZ292L3B1Ym1lZC8yNzI1NzkwOS8/b3Rvb2w9Y2RjaWNsaWIiLCJhdXRob3JfYWRkcmVzcyI6Ik5hdGlvbmFsIENlbnRlciBmb3IgRW1lcmdpbmcgYW5kIFpvb25vdGljIEluZmVjdGlvdXMgRGlzZWFzZXMsIENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiwgQXRsYW50YSwgR0EsIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYS46IFZpbGxhZ2VzIFJlZ2lvbmFsIEhvc3BpdGFsLCBMYWR5IExha2UsIEZMLCBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EuOiBCdXJlYXUgb2YgUHVibGljIEhlYWx0aCBMYWJvcmF0b3JpZXMsIEZsb3JpZGEgRGVwYXJ0bWVudCBvZiBIZWFsdGgsIEphY2tzb252aWxsZSwgRkwsIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYS46IEJ1cmVhdSBvZiBFcGlkZW1pb2xvZ3ksIEZsb3JpZGEgRGVwYXJ0bWVudCBvZiBIZWFsdGgsIFRhbGxhaGFzc2VlLCBGTCwgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhLjogTmF0aW9uYWwgQ2VudGVyIGZvciBFbnZpcm9ubWVudGFsIEhlYWx0aCwgQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLCBBdGxhbnRhLCBHQSwgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhLjogTmF0aW9uYWwgQ2VudGVyIGZvciBJbW11bml6YXRpb24gYW5kIFJlc3BpcmF0b3J5IERpc2Vhc2VzLCBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sIEF0bGFudGEsIEdBLCBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EuIiwiZGF0YWJhc2VfcHJvdmlkZXIiOiJOTE0iLCJsYW5ndWFnZSI6ImVuZyIsImRvaSI6IjEwLjEzNzEvam91cm5hbC5wb25lLjAxNTY5ODcifQoseyJyZWNvcmRfbnVtYmVyIjoiMzc0MjciLCJyZWZlcmVuY2VfdHlwZSI6IkdlbmVyaWMiLCJhdXRob3IiOiJCYXJkZW5oZWllciwgQi4gSC4gRC4sIEouLCAgRHVkZXJzdGFkdCwgUy4gSy4sICBIaWdncywgSi4gQi4sICBLZWl0aCwgTS4gUC4sICBQYXBhZG9wb3Vsb3MsIFAuIEouLCAgR2lsbGlsYW5kLCBXLiBSLiwgIE1jTmVpbCwgTS4gTS4sIiwieWVhciI6IjIwMTYiLCJ0aXRsZSI6IkFudGhyYXggdmFjY2luZSBhbmQgdGhlIHJpc2sgb2YgcmhldW1hdG9pZCBhcnRocml0aXMgYW5kIHN5c3RlbWljIGx1cHVzIGVyeXRoZW1hdG9zdXMgaW4gdGhlIFUuUy4gbWlsaXRhcnk6IEEgY2FzZS1jb250cm9sIHN0dWR5Iiwic2Vjb25kYXJ5X3RpdGxlIjoiTWlsIE1lZCIsInZvbHVtZSI6IjE4MSIsIm51bWJlciI6IjEwIiwicGFnZXMiOiIxMzQ4LTEzNTYiLCJlZGl0aW9uIjoiMTAvMTkvMjAxNiIsImRhdGUiOiJPY3QiLCJzaG9ydF90aXRsZSI6IkFudGhyYXggdmFjY2luZSBhbmQgdGhlIHJpc2sgb2YgcmhldW1hdG9pZCBhcnRocml0aXMgYW5kIHN5c3RlbWljIGx1cHVzIGVyeXRoZW1hdG9zdXMgaW4gdGhlIFUuUy4gbWlsaXRhcnk6IEEgY2FzZS1jb250cm9sIHN0dWR5IiwiYWx0ZXJuYXRlX3RpdGxlIjoiTWlsaXRhcnkgbWVkaWNpbmUiLCJpc2JuX2lzc24iOiIwMDI2LTQwNzUiLCJjdXN0b21fMSI6IkNEQyBBdXRob3JlZCBQdWJsaWNhdGlvbnMiLCJjdXN0b21fMiI6Ik1pbGl0YXJ5IE1lZGljaW5lIGFuZCBIZWFsdGgiLCJjdXN0b21fOCI6Ijg6NDQiLCJhY2Nlc3Npb25fbnVtYmVyIjoiMjc3NTM1NzQiLCJhYnN0cmFjdCI6IlUuUy4gbWlsaXRhcnkgcGVyc29ubmVsIGFzc2lnbmVkIHRvIGFyZWFzIGRlZW1lZCB0byBiZSBhdCBoaWdoIHJpc2sgZm9yIGFudGhyYXggYXR0YWNrIHJlY2VpdmUgQW50aHJheCBWYWNjaW5lIEFkc29yYmVkIChBVkEpLiBGZXcgY2FzZXMgb2YgcmhldW1hdG9pZCBhcnRocml0aXMgKFJBKSBhbmQgc3lzdGVtaWMgbHVwdXMgZXJ5dGhlbWF0b3N1cyAoU0xFKSBoYXZlIGJlZW4gcmVwb3J0ZWQgaW4gcGVyc29ucyB3aG8gcmVjZWl2ZWQgQVZBLiBVc2luZyBhIG1hdGNoZWQgY2FzZS1jb250cm9sIHN0dWR5IGRlc2lnbiwgd2UgYXNzZXNzZWQgdGhlIHJlbGF0aW9uc2hpcCBvZiBSQSBhbmQgU0xFIHdpdGggQVZBIHZhY2NpbmF0aW9uIHVzaW5nIHRoZSBEZWZlbnNlIE1lZGljYWwgU3VydmVpbGxhbmNlIFN5c3RlbS4gV2UgaWRlbnRpZmllZCBwb3RlbnRpYWwgY2FzZXMgdXNpbmcgSW50ZXJuYXRpb25hbCBDbGFzc2lmaWNhdGlvbiBvZiBEaXNlYXNlcywgOXRoIFJldmlzaW9uLCBDbGluaWNhbCBNb2RpZmljYXRpb24gY29kZXMgYW5kIGNvbmZpcm1lZCBjYXNlcyB3aXRoIG1lZGljYWwgcmVjb3JkIHJldmlldyBhbmQgcmhldW1hdG9sb2dpc3QgYWRqdWRpY2F0aW9uLiBVc2luZyBjb25kaXRpb25hbCBsb2dpc3RpYyByZWdyZXNzaW9uLCB3ZSBlc3RpbWF0ZWQgb2RkcyByYXRpb3MgKE9SKSBmb3IgQVZBIGV4cG9zdXJlIGR1cmluZyB0aW1lIGludGVydmFscyByYW5naW5nIGZyb20gOTAgdG8gMSwwOTUgZGF5cyBiZWZvcmUgZGlzZWFzZSBvbnNldC4gQW1vbmcgNzcgUkEgY2FzZXMsIDEzICgxNyUpIGhhZCBldmVyIHJlY2VpdmVkIEFWQS4gUkEgY2FzZXMgd2VyZSBubyBtb3JlIGxpa2VseSB0aGFuIGNvbnRyb2xzIHRvIGhhdmUgcmVjZWl2ZWQgQVZBIHdoZW4gbG9va2luZyBiYWNrIDEsMDk1IGRheXMgKE9SOiAxLjAzOyA5NSUgY29uZmlkZW5jZSBpbnRlcnZhbCBbQ0ldOiAwLjQ4LTIuMTkpIGJ1dCBoYWQgZ3JlYXRlciBvZGRzIG9mIGV4cG9zdXJlIGluIHRoZSBwcmlvciA5MCBkYXlzIChPUjogMy45MzsgOTUlIENJOiAxLjA4LTE0LjI3KS4gQW1vbmcgdGhlIDM5IFNMRSBjYXNlcywgNSAoMTMlKSBoYWQgZXZlciByZWNlaXZlZCBBVkE7IG5vIHNpZ25pZmljYW50IGRpZmZlcmVuY2UgaW4gcmVjZWlwdCBvZiBBVkEgd2FzIGZvdW5kIHdoZW4gY29tcGFyZWQgd2l0aCBjb250cm9scyAoT1I6IDAuOTE7IDk1JSBDSTogMC4yNi0zLjI1KS4gQVZBIHdhcyBhc3NvY2lhdGVkIHdpdGggcmVjZW50IG9uc2V0IFJBLCBidXQgZGlkIG5vdCBpbmNyZWFzZSB0aGUgcmlzayBvZiBkZXZlbG9waW5nIFJBIGluIHRoZSBsb25nIHRlcm0uIiwibm90ZXMiOiIxOTMwLTYxM3g6IEJhcmRlbmhlaWVyLCBCYXJiYXJhIEg6IER1ZmZ5LCBKb25hdGhhbjogRHVkZXJzdGFkdCwgU3VzYW4gSzogSGlnZ3MsIEpheSBCOiBLZWl0aCwgTWljaGFlbCBQOiBQYXBhZG9wb3Vsb3MsIFBhdHJpY2lhIEo6IEdpbGxpbGFuZCwgV2lsbGlhbSBSOiBNY05laWwsIE1pY2hhZWwgTTogSm91cm5hbCBhcnRpY2xlOiBVbml0ZWQgU3RhdGVzOiBNaWwgTWVkLiAyMDE2IE9jdDsxODEoMTApOjEzNDgtMTM1Ni4iLCJ1cmwiOiJodHRwOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcHVibWVkLzI3NzUzNTc0Lz9vdG9vbD1jZGNpY2xpYiIsImF1dGhvcl9hZGRyZXNzIjoiSW1tdW5pemF0aW9uIFNhZmV0eSBPZmZpY2UsIE1TIEQtMjYsIDE2MDAgQ2xpZnRvbiBSb2FkIE5FLCBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sIEF0bGFudGEsIEdBIDMwMzMzLjogUmhldW1hdG9sb2d5IFNlcnZpY2UsIEJyb29rZSBBcm15IE1lZGljYWwgQ2VudGVyLCAzODUxIFJvZ2VyIEJyb29rZSBEcml2ZSwgU2FuIEFudG9uaW8sIFRYIDc4MjM0LjogUmhldW1hdG9sb2d5IFNlcnZpY2UsIFdhbHRlciBSZWVkIE5hdGlvbmFsIE1pbGl0YXJ5IE1lZGljYWwgQ2VudGVyLCA0OTU0IE4uIFBhbG1lciBSb2FkLCBCZXRoZXNkYSwgTUQgMjA4ODktNTYwMC46IE11bHRpQ2FyZSBSaGV1bWF0b2xvZ3kgU3BlY2lhbGlzdHMsIDE5MDEgUyBVbmlvbiBBdmVudWUsIFN1aXRlIEEyMjEsIFRhY29tYSwgV0EgOTg0MDUuOiBEZXBhcnRtZW50IG9mIE1lZGljaW5lLCBVbmlmb3JtZWQgU2VydmljZXMgVW5pdmVyc2l0eSBvZiB0aGUgSGVhbHRoIFNjaWVuY2VzLCA0MzAxIEpvbmVzIEJyaWRnZSBSb2FkLCBSb29tIEEgMTAwNSwgQmV0aGVzZGEsIE1EIDIwODE0LiIsImRhdGFiYXNlX3Byb3ZpZGVyIjoiTkxNIiwibGFuZ3VhZ2UiOiJFbmciLCJkb2kiOiIxMC43MjA1L21pbG1lZC1kLTE1LTAwNDg1In0KLHsicmVjb3JkX251bWJlciI6IjM5NTYxIiwicmVmZXJlbmNlX3R5cGUiOiJHZW5lcmljIiwiYXV0aG9yIjoiU3phYmxld3NraSwgQy4gTS4gSC4sIEsuLCAgQm93ZXIsIFcuIEEuLCAgU2hhZG9teSwgUy4gVi4sICBIdXBlcnQsIE4uLCIsInllYXIiOiIyMDE3IiwidGl0bGUiOiJBbnRocmF4IGNhc2VzIGFzc29jaWF0ZWQgd2l0aCBhbmltYWwtaGFpciBzaGF2aW5nIGJydXNoZXMiLCJzZWNvbmRhcnlfdGl0bGUiOiJFbWVyZyBJbmZlY3QgRGlzIiwidm9sdW1lIjoiMjMiLCJudW1iZXIiOiI1IiwicGFnZXMiOiI4MDYtODA4IiwiZWRpdGlvbiI6IjQvMTkvMjAxNyIsImRhdGUiOiJNYXkiLCJzaG9ydF90aXRsZSI6IkFudGhyYXggY2FzZXMgYXNzb2NpYXRlZCB3aXRoIGFuaW1hbC1oYWlyIHNoYXZpbmcgYnJ1c2hlcyIsImFsdGVybmF0ZV90aXRsZSI6IkVtZXJnaW5nIGluZmVjdGlvdXMgZGlzZWFzZXMiLCJpc2JuX2lzc24iOiIxMDgwLTYwNDAiLCJjdXN0b21fMSI6IkNEQyBBdXRob3JlZCBQdWJsaWNhdGlvbnMiLCJjdXN0b21fMiI6IkNvbW11bmljYWJsZSBEaXNlYXNlcyIsImN1c3RvbV84IjoiOToyMSIsImFjY2Vzc2lvbl9udW1iZXIiOiIyODQxODMwMiIsImtleXdvcmRzIjoiQW50aHJheDogQmFjaWxsdXMgYW50aHJhY2lzOiBhbmltYWwgaGFpcjogYmFjdGVyaWE6IGRpc2luZmVjdGlvbjogZm9taXRlczogc2hhdmluZyBicnVzaGVzOiB3YXJmYXJlOiB6b29ub3NlcyIsImFic3RyYWN0IjoiRHVyaW5nIHRoZSBGaXJzdCBXb3JsZCBXYXIsIGFudGhyYXggY2FzZXMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIEVuZ2xhbmQgaW5jcmVhc2VkIGdyZWF0bHkgYW5kIHNlZW1lZCB0byBiZSBhc3NvY2lhdGVkIHdpdGggdXNlIG9mIG5ldyBzaGF2aW5nIGJydXNoZXMuIEZ1cnRoZXIgaW52ZXN0aWdhdGlvbiByZXZlYWxlZCB0aGF0IHRoZSBzb3VyY2UgbWF0ZXJpYWwgYW5kIG9yaWdpbiBvZiBzaGF2aW5nIGJydXNoZXMgaGFkIGNoYW5nZWQgZHVyaW5nIHRoZSB3YXIuIENoZWFwIGJydXNoZXMgb2YgaW1wb3J0ZWQgaG9yc2VoYWlyIHdlcmUgYmVpbmcgbWFkZSB0byBsb29rIGxpa2UgdGhlIHByZWZlcnJlZCBiYWRnZXItaGFpciBicnVzaGVzLiBVbmZvcnR1bmF0ZWx5LCBzb21lIG9mIHRoZXNlIGJydXNoZXMgd2VyZSBub3QgZWZmZWN0aXZlbHkgZGlzaW5mZWN0ZWQgYW5kIGJyb3VnaHQgd2l0aCB0aGVtIGEgbmFzdHkgc3Rvd2F3YXk6IEJhY2lsbHVzIGFudGhyYWNpcy4gQSByZXZpZXcgb2Ygb3V0YnJlYWsgc3VtbWFyaWVzLCBzdXJ2ZWlsbGFuY2UgZGF0YSwgYW5kIGNhc2UgcmVwb3J0cyBpbmRpY2F0ZWQgdGhhdCB0aGVzZSBjYXNlcyBvcmlnaW5hdGVkIGZyb20gdGhlIHVzZSBvZiBpbmVmZmVjdGl2ZWx5IGRpc2luZmVjdGVkIGFuaW1hbC1oYWlyIHNoYXZpbmcgYnJ1c2hlcy4gVGhpcyBoaXN0b3JpY2FsIGluZm9ybWF0aW9uIGlzIHJlbGV2YW50IHRvIGN1cnJlbnQgcHVibGljIGhlYWx0aCBwcmFjdGljZSBiZWNhdXNlIHJlbmV3ZWQgaW50ZXJlc3QgaW4gdmludGFnZSBhbmQgYW5pbWFsLWhhaXIgc2hhdmluZyBicnVzaGVzIGhhcyBiZWVuIHNlZW4gaW4gcG9wdWxhciBjdWx0dXJlLiBUaGlzIGluZm9ybWF0aW9uIHNob3VsZCBoZWxwIGhlYWx0aGNhcmUgcHJvdmlkZXJzIGFuZCBwdWJsaWMgaGVhbHRoIG9mZmljaWFscyBhbnN3ZXIgcXVlc3Rpb25zIG9uIHRoaXMgdG9waWMuIiwibm90ZXMiOiIxMDgwLTYwNTk6IFN6YWJsZXdza2ksIENocmlzdGluZSBNOiBIZW5kcmlja3MsIEthdGU6IEJvd2VyLCBXaWxsaWFtIEE6IFNoYWRvbXksIFNlYW4gVjogSHVwZXJ0LCBOYXRoYW5pZWw6IEpvdXJuYWwgQXJ0aWNsZTogVW5pdGVkIFN0YXRlczogRW1lcmcgSW5mZWN0IERpcy4gMjAxNyBNYXk7MjMoNSk6ODA2LTgwOC4gZG9pOiAxMC4zMjAxL2VpZDIzMDUuMTYxNTU0LiIsInVybCI6Imh0dHBzOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcHVibWVkLzI4NDE4MzAyLz9vdG9vbD1jZGNpY2xpYiIsImRhdGFiYXNlX3Byb3ZpZGVyIjoiTkxNIiwibGFuZ3VhZ2UiOiJlbmciLCJkb2kiOiIxMC4zMjAxL2VpZDIzMDUuMTYxNTU0In0KLHsicmVjb3JkX251bWJlciI6IjQ1MDU1IiwicmVmZXJlbmNlX3R5cGUiOiJKb3VybmFsIEFydGljbGUiLCJhdXRob3IiOiJOLiBDYWZmZXM7IEsuIEhlbmRyaWNrczsgSi4gUy4gQnJhZGxleTsgTi4gQS4gVHdlbmhhZmVsOyBKLiBNLiBTaW1hcmQiLCJ5ZWFyIjoiMjAyMiIsInRpdGxlIjoiQW50aHJheCBtZW5pbmdvZW5jZXBoYWxpdGlzIGFuZCBpbnRyYWNyYW5pYWwgaGVtb3JyaGFnZSIsInNlY29uZGFyeV90aXRsZSI6IkNsaW4gSW5mZWN0IERpcyIsInZvbHVtZSI6Ijc1IiwibnVtYmVyIjoiU3VwcGxlbWVudF8zIiwicGFnZXMiOiJTNDUxLXM0NTgiLCJkYXRlIjoiMTctT2N0Iiwic2hvcnRfdGl0bGUiOiJBbnRocmF4IG1lbmluZ29lbmNlcGhhbGl0aXMgYW5kIGludHJhY3JhbmlhbCBoZW1vcnJoYWdlIiwiaXNibl9pc3NuIjoiMTA1OC00ODM4IiwiY3VzdG9tXzEiOiJLZXkgU2NpZW50aWZpYyBBcnRpY2xlcyBpbiBGZWF0dXJlZCBUb3BpYyBBcmVhcyIsImN1c3RvbV8yIjoiQW50aHJheCBQcmVwYXJlZG5lc3MiLCJjdXN0b21fOCI6IjE0OjQ0IiwiYWNjZXNzaW9uX251bWJlciI6IjM2MjUxNTU4Iiwia2V5d29yZHMiOiJhbnRocmF4XG5pbnRyYWNlcmVicmFsIGhlbW9ycmhhZ2Vcbm5ldXJvcHJvdGVjdGlvblxuc3ViYXJhY2hub2lkIGhlbW9ycmhhZ2UiLCJhYnN0cmFjdCI6IlRoZSBuZXVyb2xvZ2ljYWwgc2VxdWVsYWUgb2YgQmFjaWxsdXMgYW50aHJhY2lzIGluZmVjdGlvbiBpbmNsdWRlIGEgcmFwaWRseSBwcm9ncmVzc2l2ZSBmdWxtaW5hbnQgbWVuaW5nb2VuY2VwaGFsaXRpcyBmcmVxdWVudGx5IGFzc29jaWF0ZWQgd2l0aCBpbnRyYWNyYW5pYWwgaGVtb3JyaGFnZSwgaW5jbHVkaW5nIHN1YmFyYWNobm9pZCBhbmQgaW50cmFjZXJlYnJhbCBoZW1vcnJoYWdlLiBIaWdoZXIgbW9ydGFsaXR5IHRoYW4gb3RoZXIgZm9ybXMgb2YgYmFjdGVyaWFsIG1lbmluZ2l0aXMgc3VnZ2VzdHMgdGhhdCBhbnRpbWljcm9iaWFscyBhbmQgY2FyZGlvcHVsbW9uYXJ5IHN1cHBvcnQgYWxvbmUgbWF5IGJlIGluc3VmZmljaWVudCBhbmQgdGhhdCBzdHJhdGVnaWVzIHRhcmdldGluZyB0aGUgaGVtb3JyaGFnZSBtaWdodCBpbXByb3ZlIG91dGNvbWVzLiBJbiB0aGlzIHJldmlldywgd2UgZGVzY3JpYmUgdGhlIHRveGljIHJvbGUgb2YgaW50cmFjcmFuaWFsIGhlbW9ycmhhZ2UgaW4gYW50aHJheCBtZW5pbmdvZW5jZXBoYWxpdGlzLiBXZSBmaXJzdCBleGFtaW5lIHRoZSBoaWdoIGluY2lkZW5jZSBvZiBpbnRyYWNyYW5pYWwgaGVtb3JyaGFnZSBpbiBwYXRpZW50cyB3aXRoIGFudGhyYXggbWVuaW5nb2VuY2VwaGFsaXRpcy4gV2UgdGhlbiByZXZpZXcgY29tbW9uIGRpc2Vhc2VzIHRoYXQgcHJlc2VudCB3aXRoIGludHJhY3JhbmlhbCBoZW1vcnJoYWdlLCBpbmNsdWRpbmcgYW5ldXJ5c21hbCBzdWJhcmFjaG5vaWQgaGVtb3JyaGFnZSBhbmQgc3BvbnRhbmVvdXMgaW50cmFjZXJlYnJhbCBoZW1vcnJoYWdlLCBwb3N0dWxhdGluZyBhcHBsaWNhYmlsaXR5IG9mIGVzdGFibGlzaGVkIGFuZCBwb3RlbnRpYWwgbmV1cm9pbnRlbnNpdmUgdHJlYXRtZW50cyB0byB0aGUgbXVsdGltb2RhbCBtYW5hZ2VtZW50IG9mIGhlbW9ycmhhZ2ljIGFudGhyYXggbWVuaW5nb2VuY2VwaGFsaXRpcy4gRmluYWxseSwgd2UgZXhhbWluZSB0aGUgdGhlcmFwZXV0aWMgcG90ZW50aWFsIG9mIG1pbm9jeWNsaW5lLCBhbiBhbnRpbWljcm9iaWFsIHRoYXQgaXMgZWZmZWN0aXZlIGFnYWluc3QgQi4gYW50aHJhY2lzIGFuZCB0aGF0IGhhcyBiZWVuIHNob3duIGluIHByZWNsaW5pY2FsIHN0dWRpZXMgdG8gaGF2ZSBuZXVyb3Byb3RlY3RpdmUgcHJvcGVydGllcywgd2hpY2ggdGh1cyBtaWdodCBiZSByZXB1cnBvc2VkIGZvciB0aGlzIGhpc3RvcmljYWxseSBmYXRhbCBkaXNlYXNlLiIsIm5vdGVzIjoiMTUzNy02NTkxXG5DYWZmZXMsIE5pY2hvbGFzXG5IZW5kcmlja3MsIEthdGhlcmluZVxuQnJhZGxleSwgSm9obiBTXG5Ud2VuaGFmZWwsIE5hbmN5IEFcblNpbWFyZCwgSiBNYXJjXG5PcmNpZDogMDAwMC0wMDAyLTUzNzMtMTk4OFxuVkEvVkEvVW5pdGVkIFN0YXRlc1xuRGVwYXJ0bWVudCBvZiBEZWZlbnNlL1xuSEwvTkhMQkkgTklIIEhIUy9Vbml0ZWQgU3RhdGVzXG5OUy9OSU5EUyBOSUggSEhTL1VuaXRlZCBTdGF0ZXNcbkpvdXJuYWwgQXJ0aWNsZVxuVW5pdGVkIFN0YXRlc1xuMjAyMi8xMC8xOFxuQ2xpbiBJbmZlY3QgRGlzLiAyMDIyIE9jdCAxNzs3NShTdXBwbGVtZW50XzMpOlM0NTEtUzQ1OC4gZG9pOiAxMC4xMDkzL2NpZC9jaWFjNTIxLiIsInVybCI6Imh0dHBzOi8vcHVibWVkLm5jYmkubmxtLm5paC5nb3YvMzYyNTE1NTgiLCJhdXRob3JfYWRkcmVzcyI6IkRlcGFydG1lbnQgb2YgTmV1cm9zdXJnZXJ5LCBVbml2ZXJzaXR5IG9mIE1hcnlsYW5kIFNjaG9vbCBvZiBNZWRpY2luZSwgQmFsdGltb3JlLCBNYXJ5bGFuZCwgVVNBLlxuRGl2aXNpb24gb2YgSGlnaC1Db25zZXF1ZW5jZSBQYXRob2dlbnMgYW5kIFBhdGhvbG9neSwgQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLCBBdGxhbnRhLCBHZW9yZ2lhLCBVU0EuXG5EZXBhcnRtZW50IG9mIFBlZGlhdHJpY3MsIFNhbiBEaWVnbyBTY2hvb2wgb2YgTWVkaWNpbmUgYW5kIFJhZHkgQ2hpbGRyZW4ncyBIb3NwaXRhbCwgVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhLCBTYW4gRGllZ28sIENhbGlmb3JuaWEsIFVTQS5cbkRpdmlzaW9uIG9mIFBhdGhvbG9neSwgVW5pdGVkIFN0YXRlcyBBcm15IE1lZGljYWwgUmVzZWFyY2ggSW5zdGl0dXRlIG9mIEluZmVjdGlvdXMgRGlzZWFzZXMsIEZyZWRlcmljaywgTWFyeWxhbmQsIFVTQS5cbkRlcGFydG1lbnRzIG9mIE5ldXJvc3VyZ2VyeSwgUGF0aG9sb2d5IGFuZCBQaHlzaW9sb2d5LCBVbml2ZXJzaXR5IG9mIE1hcnlsYW5kIFNjaG9vbCBvZiBNZWRpY2luZSwgQmFsdGltb3JlLCBNYXJ5bGFuZCwgVVNBLiIsImRhdGFiYXNlX3Byb3ZpZGVyIjoiTkxNIiwibGFuZ3VhZ2UiOiJlbmciLCJkb2kiOiIxMC4xMDkzL2NpZC9jaWFjNTIxIn0KLHsicmVjb3JkX251bWJlciI6IjQ1MDU2IiwicmVmZXJlbmNlX3R5cGUiOiJKb3VybmFsIEFydGljbGUiLCJhdXRob3IiOiJLLiBIZW5kcmlja3M7IFIuIEIuIE1hcnRpbmVzOyBILiBCaWVsYW1vd2ljejsgQS4gRS4gQm95ZXI7IFMuIExvbmc7IFAuIEJ5ZXJzOyBSLiBBLiBTdG9kZGFyZDsgSy4gVGF5bG9yOyBDLiBCLiBLb2x0b247IE0uIEdhbGxlZ29zLUNhbmRlbGE7IEMuIFJvYmVydHM7IE0uIERlTGVvbi1DYXJuZXM7IEouIFNhbHplcjsgUC4gRGF3c29uOyBELiBCcm93bjsgTC4gVGVtcGxldG9uLUxlQm91ZjsgUi4gQy4gTWF2ZXM7IEMuIEd1bHZpazsgRC4gTG9uc3dheTsgSi4gUi4gQmFycjsgVy4gQS4gQm93ZXI7IEEuIEhvZmZtYXN0ZXIiLCJ5ZWFyIjoiMjAyMiIsInRpdGxlIjoiV2VsZGVyJ3MgQW50aHJheDogQSB0YWxlIG9mIDIgY2FzZXMiLCJzZWNvbmRhcnlfdGl0bGUiOiJDbGluIEluZmVjdCBEaXMiLCJ2b2x1bWUiOiI3NSIsIm51bWJlciI6IlN1cHBsZW1lbnRfMyIsInBhZ2VzIjoiUzM1NC1zMzYzIiwiZGF0ZSI6IjE3LU9jdCIsInNob3J0X3RpdGxlIjoiV2VsZGVyJ3MgQW50aHJheDogQSB0YWxlIG9mIDIgY2FzZXMiLCJpc2JuX2lzc24iOiIxMDU4LTQ4MzgiLCJjdXN0b21fMSI6IktleSBTY2llbnRpZmljIEFydGljbGVzIGluIEZlYXR1cmVkIFRvcGljIEFyZWFzIiwiY3VzdG9tXzIiOiJBbnRocmF4IFByZXBhcmVkbmVzcyIsImN1c3RvbV84IjoiMTQ6NDQiLCJhY2Nlc3Npb25fbnVtYmVyIjoiMzYyNTE1NjEiLCJrZXl3b3JkcyI6IkJhY2lsbHVzIGNlcmV1c1xuQmFjaWxsdXMgdHJvcGljdXNcbmFudGl0b3hpblxud2VsZGVyJ3MgYW50aHJheFxud2VsZGluZyIsImFic3RyYWN0IjoiQmFjaWxsdXMgYW50aHJhY2lzIGhhcyB0cmFkaXRpb25hbGx5IGJlZW4gY29uc2lkZXJlZCB0aGUgZXRpb2xvZ2ljIGFnZW50IG9mIGFudGhyYXguIEhvd2V2ZXIsIGFudGhyYXgtbGlrZSBpbGxuZXNzIGhhcyBiZWVuIGRvY3VtZW50ZWQgaW4gd2VsZGVycyBhbmQgb3RoZXIgbWV0YWwgd29ya2VycyBpbmZlY3RlZCB3aXRoIEJhY2lsbHVzIGNlcmV1cyBncm91cCBzcHAuIGhhcmJvcmluZyBwWE8xIHZpcnVsZW5jZSBnZW5lcyB0aGF0IHByb2R1Y2UgYW50aHJheCB0b3hpbnMuIFdlIHByZXNlbnQgMiByZWNlbnQgY2FzZXMgb2Ygc2V2ZXJlIHBuZXVtb25pYSBpbiB3ZWxkZXJzIHdpdGggQi4gY2VyZXVzIGdyb3VwIGluZmVjdGlvbnMgYW5kIGRpc2N1c3MgcG90ZW50aWFsIHJpc2sgZmFjdG9ycyBmb3IgaW5mZWN0aW9uIGFuZCB0cmVhdG1lbnQgb3B0aW9ucywgaW5jbHVkaW5nIGFudGl0b3hpbi4iLCJub3RlcyI6IjE1MzctNjU5MVxuSGVuZHJpY2tzLCBLYXRoZXJpbmVcbk1hcnRpbmVzLCBSb29zZWNlbGlzIEJyYXNpbFxuQmllbGFtb3dpY3osIEhhbm5haFxuQm95ZXIsIEFubmUgRVxuTG9uZywgU3RlcGhlblxuQnllcnMsIFBhdWxcblN0b2RkYXJkLCBSb2J5biBBXG5UYXlsb3IsIEthdGhyeW5cbktvbHRvbiwgQ2FyaSBCZWVzbGV5XG5HYWxsZWdvcy1DYW5kZWxhLCBNYXJpYmVsXG5Sb2JlcnRzLCBDaHJpc3RpbmVcbkRlTGVvbi1DYXJuZXMsIE1hcmxlbmVcblNhbHplciwgSm9oYW5uYVxuRGF3c29uLCBQYXRyaWNrXG5Ccm93biwgRGFubmV0dGVcblRlbXBsZXRvbi1MZUJvdWYsIExpbmRzZXlcbk1hdmVzLCBSeWFuIENcbkd1bHZpaywgQ2hyaXNcbkxvbnN3YXksIERhdmlkXG5CYXJyLCBKb2huIFJcbkJvd2VyLCBXaWxsaWFtIEFcbk9yY2lkOiAwMDAwLTAwMDEtNjUzOC04NjY1XG5Ib2ZmbWFzdGVyLCBBbGV4XG5Kb3VybmFsIEFydGljbGVcblVuaXRlZCBTdGF0ZXNcbjIwMjIvMTAvMThcbkNsaW4gSW5mZWN0IERpcy4gMjAyMiBPY3QgMTc7NzUoU3VwcGxlbWVudF8zKTpTMzU0LVMzNjMuIGRvaTogMTAuMTA5My9jaWQvY2lhYzUzNS4iLCJ1cmwiOiJodHRwczovL3B1Ym1lZC5uY2JpLm5sbS5uaWguZ292LzM2MjUxNTYxIiwiYXV0aG9yX2FkZHJlc3MiOiJEaXZpc2lvbiBvZiBIaWdoIENvbnNlcXVlbmNlIFBhdGhvZ2VucyBhbmQgUGF0aG9sb2d5LCBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sIEF0bGFudGEsIEdlb3JnaWEsIFVTQS5cblBhdGhvbG9neSBEZXBhcnRtZW50LCBGb3J0IEJlbmQgQ291bnR5IE1lZGljYWwgRXhhbWluZXIgT2ZmaWNlLCBSb3NlbmJlcmcsIFRleGFzLCBVU0EuXG5EaXZpc2lvbiBvZiBMYWJvcmF0b3J5IFNjaWVuY2VzLCBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sIEF0bGFudGEsIEdlb3JnaWEsIFVTQS5cbkhvdXN0b24gTGFib3JhdG9yeSBSZXNwb25zZSBOZXR3b3JrLCBIb3VzdG9uIEhlYWx0aCBEZXBhcnRtZW50LCBIb3VzdG9uLCBUZXhhcywgVVNBLlxuT2ZmaWNlIG9mIENvbW11bmljYWJsZSBEaXNlYXNlcywgTWlzc2lzc2lwcGkgU3RhdGUgRGVwYXJ0bWVudCBvZiBIZWFsdGgsIEphY2tzb24sIE1pc3Npc3NpcHBpLCBVU0EuXG5EaXZpc2lvbiBvZiBWZWN0b3ItQm9ybmUgRGlzZWFzZXMsIENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiwgQXRsYW50YSwgR2VvcmdpYSwgVVNBLlxuT2ZmaWNlIG9mIFNjaWVuY2UsIENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiwgQXRsYW50YSwgR2VvcmdpYSwgVVNBLlxuS2luZyBEYXVnaHRlcnMgTWVkaWNhbCBDZW50ZXIsIEJyb29raGF2ZW4sIE1pc3Npc3NpcHBpLCBVU0EuXG5EZXBhcnRtZW50cyBvZiBJbmZlY3Rpb3VzIERpc2Vhc2VzIGFuZCBBbmVzdGhlc2lvbG9neSwgV2FrZSBGb3Jlc3QgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsIFdpbnN0b24tU2FsZW0sIE5vcnRoIENhcm9saW5hLCBVU0EuXG5EaXZpc2lvbiBvZiBIZWFsdGhjYXJlIFF1YWxpdHkgUHJvbW90aW9uLCBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sIEF0bGFudGEsIEdlb3JnaWEsIFVTQS4iLCJkYXRhYmFzZV9wcm92aWRlciI6Ik5MTSIsImxhbmd1YWdlIjoiZW5nIiwiZG9pIjoiMTAuMTA5My9jaWQvY2lhYzUzNSJ9Cix7InJlY29yZF9udW1iZXIiOiI0NTA2NCIsInJlZmVyZW5jZV90eXBlIjoiSm91cm5hbCBBcnRpY2xlIiwiYXV0aG9yIjoiQy4gTS4gUGFya2VyOyBBLiBXLiBLYXJjaG1lcjsgTS4gQy4gRmlzaGVyOyBLLiBNLiBNdWhhbW1hZDsgUC4gQS4gWXUiLCJ5ZWFyIjoiMjAyMiIsInRpdGxlIjoiU2FmZXR5IG9mIGFudGltaWNyb2JpYWxzIGZvciBwb3N0ZXhwb3N1cmUgcHJvcGh5bGF4aXMgYW5kIHRyZWF0bWVudCBvZiBBbnRocmF4OiBBIHJldmlldyIsInNlY29uZGFyeV90aXRsZSI6IkNsaW4gSW5mZWN0IERpcyIsInZvbHVtZSI6Ijc1IiwibnVtYmVyIjoiU3VwcGxlbWVudF8zIiwicGFnZXMiOiJTNDE3LXM0MzEiLCJkYXRlIjoiMTctT2N0Iiwic2hvcnRfdGl0bGUiOiJTYWZldHkgb2YgYW50aW1pY3JvYmlhbHMgZm9yIHBvc3RleHBvc3VyZSBwcm9waHlsYXhpcyBhbmQgdHJlYXRtZW50IG9mIEFudGhyYXg6IEEgcmV2aWV3IiwiaXNibl9pc3NuIjoiMTA1OC00ODM4IiwiY3VzdG9tXzEiOiJLZXkgU2NpZW50aWZpYyBBcnRpY2xlcyBpbiBGZWF0dXJlZCBUb3BpYyBBcmVhcyIsImN1c3RvbV8yIjoiQW50aHJheCBQcmVwYXJlZG5lc3MiLCJjdXN0b21fOCI6IjE0OjQ0IiwiYWNjZXNzaW9uX251bWJlciI6IjM2MjUxNTQ5Iiwia2V5d29yZHMiOiJhbnRocmF4XG5hbnRpbWljcm9iaWFsc1xuc2FmZXR5IiwiYWJzdHJhY3QiOiJCQUNLR1JPVU5EOiBCYWNpbGx1cyBhbnRocmFjaXMsIHRoZSBjYXVzYXRpdmUgYWdlbnQgZm9yIGFudGhyYXgsIHBvc2VzIGEgcG90ZW50aWFsIGJpb3RlcnJvcmlzbSB0aHJlYXQgYW5kIGlzIGNhcGFibGUgb2YgY2F1c2luZyBtYXNzIG1vcmJpZGl0eSBhbmQgbW9ydGFsaXR5LiBBbnRpbWljcm9iaWFscyBhcmUgdGhlIG1haW5zdGF5IG9mIHBvc3RleHBvc3VyZSBwcm9waHlsYXhpcyAoUEVQKSBhbmQgdHJlYXRtZW50IG9mIGFudGhyYXguIFdlIGNvbmR1Y3RlZCB0aGlzIHNhZmV0eSByZXZpZXcgb2YgMjQgc2VsZWN0IGFudGltaWNyb2JpYWxzIHRvIGlkZW50aWZ5IGFueSBuZXcgb3IgZW1lcmdpbmcgc2VyaW91cyBvciBzZXZlcmUgYWR2ZXJzZSBldmVudHMgKEFFcykgdG8gaGVscCBpbmZvcm0gdGhlaXIgcmlzay1iZW5lZml0IGV2YWx1YXRpb24gZm9yIGFudGhyYXguIE1FVEhPRFM6IFR3ZW50eS1mb3VyIGFudGltaWNyb2JpYWxzIHdlcmUgaW5jbHVkZWQgaW4gdGhpcyByZXZpZXcuIFRlcnRpYXJ5IGRhdGEgc291cmNlcyAoZS5nLiBMYWN0bWVkLCBNaWNyb21lZGV4LCBSRVBST1RPWCkgd2VyZSByZXZpZXdlZCBmb3Igc2FmZXR5IGluZm9ybWF0aW9uIGFuZCBzdW1tYXJpemVkIHRvIGV2YWx1YXRlIHRoZSBrbm93biByaXNrcyBvZiB0aGVzZSBhbnRpbWljcm9iaWFscy4gUHViTWVkIHdhcyBhbHNvIHNlYXJjaGVkIGZvciBwdWJsaXNoZWQgc2FmZXR5IGluZm9ybWF0aW9uIG9uIHNlcmlvdXMgb3Igc2V2ZXJlIEFFcyB3aXRoIHRoZXNlIGFudGltaWNyb2JpYWxzOyBBRXMgdGhhdCBtZXQgaW5jbHVzaW9uIGNyaXRlcmlhIHdlcmUgYWJzdHJhY3RlZCBhbmQgcmV2aWV3ZWQuIFJFU1VMVFM6IEEgdG90YWwgb2YgMTMxNiBhcnRpY2xlcyB3ZXJlIHJldmlld2VkLiBObyBjb25zaXN0ZW50IG9ic2VydmF0aW9ucyBvciBwYXR0ZXJucyB3ZXJlIG9ic2VydmVkIGFtb25nIHRoZSBhYnN0cmFjdGVkIEFFcyBmb3IgYSBnaXZlbiBhbnRpbWljcm9iaWFsOyB0aGVyZWZvcmUsIHRoZSBsaXRlcmF0dXJlIHJldmlldyBkaWQgbm90IHJldmVhbCBldmlkZW5jZSBvZiBuZXcgb3IgZW1lcmdpbmcgQUVzIHRoYXQgd291bGQgYWRkIHRvIHRoZSByaXNrLWJlbmVmaXQgcHJvZmlsZXMgYWxyZWFkeSBrbm93biBmcm9tIHRlcnRpYXJ5IGRhdGEgc291cmNlcy4gQ09OQ0xVU0lPTlM6IFRoZSByZXZpZXdlZCBhbnRpbWljcm9iaWFscyBoYXZlIGtub3duIGFuZC9vciBwb3RlbnRpYWwgc2VyaW91cyBvciBzZXZlcmUgcmlza3MgdGhhdCBtYXkgaW5mbHVlbmNlIHNlbGVjdGlvbiB3aGVuIHJlY29tbWVuZGluZyBhbiBhbnRpbWljcm9iaWFsIGZvciBQRVAgb3IgdHJlYXRtZW50IG9mIGFudGhyYXguIEdpdmVuIHRoZSBoaWdoIGZhdGFsaXR5IHJhdGUgb2YgYW50aHJheCwgdGhlIHJpc2stYmVuZWZpdCBldmFsdWF0aW9uIGZhdm9ycyB1c2Ugb2YgdGhlc2UgYW50aW1pY3JvYmlhbHMgZm9yIGFudGhyYXguIFRoZSBwb3RlbnRpYWwgcmlza3Mgb2YgYW50aW1pY3JvYmlhbHMgc2hvdWxkIG5vdCBwcmVjbHVkZSB0aGVzZSByZXZpZXdlZCBhbnRpbWljcm9iaWFscyBmcm9tIGNsaW5pY2FsIGNvbnNpZGVyYXRpb24gZm9yIGFudGhyYXggYnV0IHJhdGhlciBndWlkZSBhcHByb3ByaWF0ZSBhbnRpbWljcm9iaWFsIHNlbGVjdGlvbiBhbmQgcHJpb3JpdGl6YXRpb24gYWNyb3NzIGRpZmZlcmVudCBwYXRpZW50IHBvcHVsYXRpb25zIHdpdGggcmlzayBtaXRpZ2F0aW9uIG1lYXN1cmVzIGFzIHdhcnJhbnRlZC4iLCJub3RlcyI6IjE1MzctNjU5MVxuUGFya2VyLCBDb3Jpbm5lIE1cbkthcmNobWVyLCBBZG9sZiBXXG5GaXNoZXIsIE1hcmdhcmV0IENcbk11aGFtbWFkLCBLYWxpbWFoIE1cbll1LCBQYXRyaWNpYSBBXG5Kb3VybmFsIEFydGljbGVcblVuaXRlZCBTdGF0ZXNcbjIwMjIvMTAvMThcbkNsaW4gSW5mZWN0IERpcy4gMjAyMiBPY3QgMTc7NzUoU3VwcGxlbWVudF8zKTpTNDE3LVM0MzEuIGRvaTogMTAuMTA5My9jaWQvY2lhYzU5Mi4iLCJ1cmwiOiJodHRwczovL3B1Ym1lZC5uY2JpLm5sbS5uaWguZ292LzM2MjUxNTQ5IiwiYXV0aG9yX2FkZHJlc3MiOiJEaXZpc2lvbiBvZiBQcmVwYXJlZG5lc3MgYW5kIEVtZXJnaW5nIEluZmVjdGlvbnMsIE5hdGlvbmFsIENlbnRlciBmb3IgRW1lcmdpbmcgYW5kIFpvb25vdGljIEluZmVjdGlvdXMgRGlzZWFzZXMsIENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiwgQXRsYW50YSwgR2VvcmdpYSwgVVNBLlxuRGl2aXNpb24gb2YgSW5mZWN0aW91cyBEaXNlYXNlcywgQmV0aCBJc3JhZWwgRGVhY29uZXNzIE1lZGljYWwgQ2VudGVyLCBIYXJ2YXJkIE1lZGljYWwgU2Nob29sLCBCb3N0b24sIE1hc3NhY2h1c2V0dHMsIFVTQS5cbkNsaW5pY2FsIFByb2Zlc3NvciBvZiBQZWRpYXRyaWNzLCBSdXRnZXJzIFJvYmVydCBXb29kIEpvaG5zb24gU2Nob29sIG9mIE1lZGljaW5lLCBNb25tb3V0aCBNZWRpY2FsIENlbnRlciwgTG9uZyBCcmFuY2gsIE5ldyBKZXJzZXksIFVTQS5cbk9hayBSaWRnZSBJbnN0aXR1dGUgZm9yIFNjaWVuY2UgYW5kIEVkdWNhdGlvbiBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24gRmVsbG93c2hpcCBQcm9ncmFtLCBBdGxhbnRhLCBHZW9yZ2lhLCBVU0EuIiwiZGF0YWJhc2VfcHJvdmlkZXIiOiJOTE0iLCJsYW5ndWFnZSI6ImVuZyIsImRvaSI6IjEwLjEwOTMvY2lkL2NpYWM1OTIifV0K
  recorded_at: Sun, 08 Jan 2023 17:50:36 GMT
recorded_with: VCR 6.1.0
